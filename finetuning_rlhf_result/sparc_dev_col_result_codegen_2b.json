{
  "flight_2": [
    [
      {
        "question": "What are all the airlines?",
        "query": [
          "select * from airlines",
          "select * from airlines",
          "select * from airlines",
          "select distinct airline from airlines",
          "select distinct * from airlines"
        ]
      },
      {
        "question": "Of these, which is Jetblue Airways?",
        "query": [
          "select * from airlines where airline = \"Jetblue Airways\"",
          "select * from airlines where airline = \"Jetblue Airways\"",
          "select * from airlines where airline = \"Jetblue Airways\"",
          "select * from airlines where airline = \"JetBlue Airways\"",
          "select * from airlines where airline = \"JetBlue Airways\"",
          "select distinct * from airlines where airline = \"Jetblue Airways\"",
          "select * from airlines where airline = \"Jetblue Airlines\"",
          "select * from airlines where airline = \"Jetblue Airlines\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline",
          "select distinct * from airlines as t1 join flights as t2 on t1.uid = t2.airline"
        ]
      },
      {
        "question": "What is the country corresponding it?",
        "query": [
          "select country from airlines where airline = \"Jetblue Airways\"",
          "select country from airlines where airline = \"Jetblue Airways\"",
          "select distinct t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = \"Jetblue Airways\"",
          "select distinct country from airlines where airline = \"Jetblue Airways\"",
          "select t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = \"Jetblue Airways\"",
          "select distinct count (*) from airlines where airline = \"Jetblue Airways\"",
          "select country from airlines where airline = \"Jetblue Airlines\"",
          "select distinct (country) from airlines where airline = \"Jetblue Airways\"",
          "select country from airlines where airline = \"Jetblue Airlines\"",
          "select t1.country from airlines as t1 join airlines as t2 on t1.airline = t2.airline where t1.airline = \"Jetblue Airways\""
        ]
      }
    ],
    [
      {
        "question": "What are all the abbreviations?",
        "query": [
          "select abbreviation from airlines",
          "select abbreviation from airlines",
          "select distinct abbreviation from airlines",
          "select distinct abbreviation from airlines",
          "select distinct abbreviation from airlines",
          "select abbreviation from airlines",
          "select distinct airline from airlines",
          "select distinct abbreviation from airlines",
          "select abbreviation from airlines",
          "select abbreviation from airlines"
        ]
      },
      {
        "question": "What is the abbreviation for Jetblue Airways?",
        "query": [
          "select abbreviation from airlines where airline = \"Jetblue Airways\"",
          "select abbreviation from airlines where airline = \"Jetblue Airways\"",
          "select distinct t1.abbreviation from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = \"Jetblue Airways\"",
          "select abbreviation from airlines where airline = \"Jetblue Airways\"",
          "select abbreviation from airlines where airline = \"JetBlue Airways\"",
          "select t1.abbreviation from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = \"Jetblue Airways\"",
          "select abbreviation from airlines where airline = \"JetBlue Airways\"",
          "select distinct abbreviation from airlines where airline = \"Jetblue Airways\"",
          "select distinct abbreviation from airlines where airline = \"Jetblue Airways\"",
          "select distinct t1.abbreviation from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = \"JetBlue Airways\""
        ]
      }
    ],
    [
      {
        "question": "List all airline names and their abbreviations.",
        "query": [
          "select airline, abbreviation from airlines",
          "select airline, abbreviation from airlines",
          "select airline, abbreviation from airlines",
          "select distinct airline, abbreviation from airlines",
          "select distinct airline from airlines",
          "select distinct airline, abbreviation from airlines",
          "select airline from airlines",
          "select airline from airlines",
          "select airline, abbreviation from airlines",
          "select airline, abbreviation from airlines"
        ]
      },
      {
        "question": "Of these, list only those in the USA.",
        "query": [
          "select airline from airlines where country = \"USA\"",
          "select airline, abbreviation from airlines where country = \"USA\"",
          "select airline, abbreviation from airlines where country = \"USA\"",
          "select airline from airlines where country = \"USA\"",
          "select distinct airline from airlines where country = \"USA\"",
          "select distinct airline from airlines where country = \"USA\"",
          "select * from airlines where country = \"USA\"",
          "select distinct airline, abbreviation from airlines where country = \"USA\"",
          "select distinct airline from airlines where country = \"USA\"",
          "select airline, abbreviation from airlines where country = \"US\""
        ]
      }
    ],
    [
      {
        "question": "Find all information about the airport in the city Anthony.",
        "query": [
          "select * from airports where city = \"Anthony\"",
          "select * from airports where city = \"Anthony\"",
          "select * from airports where city = \"Anthony\"",
          "select distinct * from airports where city = \"Anthony\"",
          "select * from airports where city = \"anthony\"",
          "select * from airports where city = \"anthon\"",
          "select * from airports where city = \"anthonies\""
        ]
      },
      {
        "question": "What is the airport code and airport name?",
        "query": [
          "select airportcode, airportname from airports where city = \"Anthony\"",
          "select airportcode, airportname from airports where city = \"Anthony\"",
          "select distinct airportcode, airportname from airports where city = \"Anthony\"",
          "select airportcode, airportname from airports where city = \"anthony\"",
          "select airportcode, airportname from airports where city = \"anthony\""
        ]
      }
    ],
    [
      {
        "question": "What are all the airlines?",
        "query": [
          "select * from airlines",
          "select * from airlines",
          "select * from airlines",
          "select distinct airline from airlines",
          "select distinct * from airlines"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from airlines",
          "select count (*) from airlines",
          "select distinct count (*) from airlines",
          "select count (*) from airlines"
        ]
      }
    ],
    [
      {
        "question": "What are all the airports?",
        "query": [
          "select * from airports",
          "select * from airports",
          "select * from airports",
          "select distinct airportname from airports",
          "select distinct * from airports",
          "select distinct airportcode from airports"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from airports",
          "select count (*) from airports",
          "select distinct count (*) from airports",
          "select count (*) from airports"
        ]
      }
    ],
    [
      {
        "question": "What are all the flights?",
        "query": [
          "select * from flights",
          "select * from flights",
          "select * from flights",
          "select distinct flightno from flights",
          "select distinct * from flights"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights",
          "select count (*) from flights",
          "select count (*) from flights",
          "select distinct count (*) from flights",
          "select distinct flightno from flights"
        ]
      }
    ],
    [
      {
        "question": "What are all the airline names?",
        "query": [
          "select airline from airlines",
          "select airline from airlines",
          "select distinct airline from airlines",
          "select distinct airline from airlines",
          "select distinct airline from airlines",
          "select airline from airlines",
          "select * from airlines",
          "select distinct airline from airlines",
          "select * from airlines"
        ]
      },
      {
        "question": "Of this, which has the abbreviation 'UAL'?",
        "query": [
          "select airline from airlines where abbreviation = \"UAL\"",
          "select airline from airlines where abbreviation = \"UAL\"",
          "select distinct t1.airline from airlines as t1 join airlines as t2 on t1.uid = t2.uid where t2.abbreviation = \"UAL\"",
          "select * from airlines where abbreviation = \"UAL\"",
          "select t1.airline from airlines as t1 join airlines as t2 on t1.uid = t2.uid where t2.abbreviation = \"UAL\"",
          "select distinct t1.airline from airlines as t1 join airlines as t2 on t1.uid = t2.uid where t1.abbreviation = \"UAL\"",
          "select distinct airline from airlines where abbreviation = \"UAL\"",
          "select distinct airline from airlines where abbreviation = \"UAL\"",
          "select distinct t2.airline from airlines as t1 join airlines as t2 on t1.uid = t2.uid where t1.abbreviation = \"UAL\"",
          "select t1.airline from airlines as t1 join airlines as t2 on t1.uid = t2.uid where t1.abbreviation = \"UAL\""
        ]
      }
    ],
    [
      {
        "question": "What are the names of the airlines in the USA?",
        "query": [
          "select airline from airlines where country = \"USA\"",
          "select airline from airlines where country = \"USA\"",
          "select distinct airline from airlines where country = \"USA\"",
          "select distinct airline from airlines where country = \"USA\"",
          "select airline from airlines where country = \"USA\"",
          "select distinct airline from airlines where country = \"USA\"",
          "select * from airlines where country = \"USA\"",
          "select * from airlines where country = \"USA\"",
          "select airline from airlines where country = \"United States\"",
          "select airline from airlines where country = \"US\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from airlines where country = \"USA\"",
          "select count (*) from airlines where country = \"USA\"",
          "select distinct count (*) from airlines where country = \"USA\"",
          "select count (*) from airlines where country = \"USA\"",
          "select distinct count (airline) from airlines where country = \"USA\"",
          "select count (distinct airline) from airlines where country = \"USA\"",
          "select count (airline) from airlines where country = \"USA\"",
          "select distinct count (distinct airline) from airlines where country = \"USA\""
        ]
      }
    ],
    [
      {
        "question": "What are the city and country for all airports?",
        "query": [
          "select city, country from airports",
          "select city, country from airports",
          "select city, country from airports",
          "select distinct city, country from airports",
          "select distinct airportname, country from airports",
          "select distinct country, city from airports",
          "select distinct airportcode, country from airports",
          "select distinct airportcode, city, country from airports"
        ]
      },
      {
        "question": "Of these, what are the city and country for Alton airport?",
        "query": [
          "select city, country from airports where airportname = \"Alton\"",
          "select city, country from airports where airportname = \"Alton\"",
          "select city, country from airports where airportcode = \"ALTON\"",
          "select city, country from airports where airportcode = \"ALTON\"",
          "select city, country from airports where airportcode = \"Alton\"",
          "select city, country from airports where airportcode = \"Alton\"",
          "select city, country from airports where airportname = \"Alton Airport\"",
          "select distinct city, country from airports where airportname = \"Alton\"",
          "select city, country from airports where airportname = \"ALTON\"",
          "select t1.city, t1.country from airports as t1 where t1.airportname = \"Alton\""
        ]
      }
    ],
    [
      {
        "question": "What are all the airport names?",
        "query": [
          "select airportname from airports",
          "select airportname from airports",
          "select distinct airportname from airports"
        ]
      },
      {
        "question": "Of these, which has code 'AKO'?",
        "query": [
          "select airportname from airports where airportcode = \"AKO\"",
          "select airportname from airports where airportcode = \"AKO\"",
          "select distinct airportname from airports where airportcode = \"AKO\"",
          "select distinct airportname from airports where airportcode = \"AKO\"",
          "select distinct airports.airportname from airports where airportcode = \"AKO\"",
          "select * from airports where airportcode = \"AKO\"",
          "select airportname from airports where airportcode like \"AKO%\"",
          "select distinct t1.airportname from airports as t1 where t1.airportcode = \"AKO\"",
          "select airportname from airports where airportcode = \"ACO\"",
          "select distinct t1.airportname from airports as t1 join flights as t2 where t1.airportcode = \"AKO\""
        ]
      }
    ],
    [
      {
        "question": "What are all the airport names?",
        "query": [
          "select airportname from airports",
          "select airportname from airports",
          "select distinct airportname from airports"
        ]
      },
      {
        "question": "Which is in Aberdeen?",
        "query": [
          "select airportname from airports where city = \"Aberdeen\"",
          "select airportname from airports where city = \"Aberdeen\"",
          "select * from airports where city = \"Aberdeen\"",
          "select * from airports where city = \"Aberdeen\"",
          "select distinct airportname from airports where city = \"Aberdeen\"",
          "select t1.airportname from airports as t1 where t1.city = \"Aberdeen\"",
          "select t1.airportname from airports as t1 where t1.city = \"Aberdeen\"",
          "select distinct t1.airportname from airports as t1 where t1.city = \"Aberdeen\"",
          "select * from airports where airportname = \"Aberdeen\"",
          "select distinct airportname from airports where city = \"Aberdeen\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flights departing from 'APG'?",
        "query": [
          "select * from flights where destairport = \"APG\"",
          "select * from flights where destairport = \"APG\"",
          "select * from flights where destairport = \"APG\"",
          "select distinct flightno from flights where destairport = \"APG\"",
          "select distinct * from flights where destairport = \"APG\"",
          "select * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"APG\"",
          "select * from flights where sourceairport = \"APG\"",
          "select * from flights where sourceairport = \"APG\"",
          "select distinct * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"APG\"",
          "select * from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"APG\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where destairport = \"APG\"",
          "select count (*) from flights where destairport = \"APG\"",
          "select distinct count (*) from flights where destairport = \"APG\"",
          "select count (*) from flights where destairport = \"APG\""
        ]
      }
    ],
    [
      {
        "question": "What flights land in ATO?",
        "query": [
          "select * from flights where destairport = \"ATO\"",
          "select * from flights where destairport = \"ATO\"",
          "select * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.airportname = \"ATO\"",
          "select * from flights where destairport = \"ATO\"",
          "select flightno from flights where destairport = \"ATO\"",
          "select flightno from flights where destairport = \"ATO\"",
          "select distinct flightno from flights where destairport = \"ATO\"",
          "select * from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.airportname = \"ATO\"",
          "select * from flights where sourceairport = \"ATO\"",
          "select distinct * from flights where destairport = \"ATO\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where destairport = \"ATO\"",
          "select count (*) from flights where destairport = \"ATO\"",
          "select distinct count (*) from flights where destairport = \"ATO\"",
          "select count (*) from flights where destairport = \"ATO\"",
          "select distinct count (flightno) from flights where destairport = \"ATO\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flights derparting from Aberdeen?",
        "query": [
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select distinct * from flights where destairport = \"Aberdeen\"",
          "select * from flights where sourceairport = \"Aberdeen\"",
          "select * from flights where sourceairport = \"Aberdeen\"",
          "select distinct flightno from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport in (select airportcode from airports where city = \"Aberdeen\")",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Aberdeen\"",
          "select distinct count (*) from flights where destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Aberdeen\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flights arriving in Aberdeen.",
        "query": [
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select distinct * from flights where destairport = \"Aberdeen\"",
          "select distinct flightno from flights where destairport = \"Aberdeen\"",
          "select distinct t1.flightno from flights as t1 join airports as t2 where t2.city = \"Aberdeen\"",
          "select distinct t1.flightno from flights as t1 join airports as t2 where t2.airportname = \"Aberdeen\"",
          "select * from airports as t1 join flights as t2 where t1.airportname = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"AE1\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Aberdeen\"",
          "select distinct count (*) from flights where destairport = \"Aberdeen\"",
          "select distinct count (flightno) from flights where destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Aberdeen\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flights that leave from Aberdeen?",
        "query": [
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where sourceairport = \"Aberdeen\"",
          "select * from flights where sourceairport = \"Aberdeen\"",
          "select distinct flightno from flights where destairport = \"Aberdeen\"",
          "select distinct * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport in (select airportcode from airports where city = \"Aberdeen\")",
          "select * from flights as t1 join airports as t2 where t2.airportname = \"Aberdeen\"",
          "select * from flights as t1 join airports as t2 where t2.city = \"Aberdeen\""
        ]
      },
      {
        "question": "Of those, which land in Ashley?",
        "query": [
          "select * from flights where destairport = \"Ashley\" and destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Ashley\" and sourceairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Ashley\" and destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Ashley\" and sourceairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Ashley\" and destairport in (select destairport from flights where destairport = \"Aberdeen\")",
          "select * from flights where destairport = \"Ashley\" and destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Ashley\" and destairport in (select destairport from flights where destairport = \"Aberdeen\")",
          "select * from flights where destairport = \"Ashley\" and sourceairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Ashley\" and destairport not in (select destairport from flights where destairport = \"Aberdeen\")",
          "select * from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Ashley\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where destairport = \"Ashley\" and destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Ashley\" and destairport = \"Aberdeen\"",
          "select distinct count (*) from flights where destairport = \"Ashley\" and destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Aberdeen\" and destairport = \"Ashley\"",
          "select count (*) from flights where destairport = \"Aberdeen\" and destairport = \"Ashley\"",
          "select count (*) from flights where destairport = \"Ashley\" and destairport = \"Aberdeen\"",
          "select distinct count (*) from flights where destairport = \"Aberdeen\" and destairport = \"Ashley\"",
          "select count (*) from flights where destairport = \"Aberdeen\" and destairport = \"Ashley\"",
          "select count (*) from flights where destairport = \"Asheville\" and destairport = \"Aberdeen\"",
          "select count (*) from flights where destairport = \"Asheville\" and destairport = \"Aberdeen\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flights on Jetblue Airways?",
        "query": [
          "select * from flights where airline = \"Jetblue Airways\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"Jetblue Airways\"",
          "select * from flights where airline = \"Jetblue Airways\"",
          "select * from flights where airline = \"Jetblue Airways\"",
          "select distinct * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"Jetblue Airways\"",
          "select * from flights where airline = \"Jetblue Airways\"",
          "select * from flights as t1 join airlines as t2 on t2.uid = t1.airline where t2.airline = \"Jetblue Airways\"",
          "select distinct flightno from flights where airline = \"Jetblue Airways\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"JetBlue Airways\"",
          "select * from flights where airline = \"JetBlue Airways\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where airline = \"Jetblue Airways\"",
          "select count (*) from flights where airline = \"Jetblue Airways\"",
          "select distinct count (*) from flights where airline = \"Jetblue Airways\"",
          "select count (*) from flights where airline = \"Jetblue Airways\"",
          "select count (*) from flights where airline = \"Jetblue Airlines\""
        ]
      }
    ],
    [
      {
        "question": "What are the United Airlines flights?",
        "query": [
          "select * from flights where airline = \"United Airlines\"",
          "select * from flights where airline = \"United Airlines\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United Airlines\"",
          "select * from flights where airline = \"United Airlines\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline",
          "select distinct * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United Airlines\"",
          "select distinct t2.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airline",
          "select distinct flightno from flights where airline = \"United Airlines\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where airline = \"United Airlines\"",
          "select count (*) from flights where airline = \"United Airlines\"",
          "select distinct count (*) from flights where airline = \"United Airlines\"",
          "select count (*) from flights where airline = \"United Airlines\""
        ]
      },
      {
        "question": "How many land in ASY Airport?",
        "query": [
          "select count (*) from flights where airline = \"United Airlines\" and destairport = \"ASY Airport\"",
          "select count (*) from flights where airline = \"United Airlines\" and destairport = \"ASY\"",
          "select count (*) from flights where airline = \"United Airlines\" and destairport = \"ASY\"",
          "select distinct count (*) from flights where airline = \"United Airlines\" and destairport = \"ASY Airport\"",
          "select count (*) from flights where destairport = \"ASY Airport\"",
          "select count (*) from flights where destairport = \"ASY Airport\"",
          "select distinct count (*) from flights where airline = \"United Airlines\" and destairport = \"ASY\"",
          "select count (*) from flights where airline = \"United Airlines\" and destairport = \"ASY\"",
          "select count (*) from flights where airline = \"United Airlines\" and sourceairport = \"ASY\"",
          "select count (*) from flights where airline = \"United Airlines\" and sourceairport = \"ASY\""
        ]
      }
    ],
    [
      {
        "question": "What are the United Airlines flights?",
        "query": [
          "select * from flights where airline = \"United Airlines\"",
          "select * from flights where airline = \"United Airlines\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United Airlines\"",
          "select * from flights where airline = \"United Airlines\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline",
          "select distinct * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United Airlines\"",
          "select distinct t2.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airline",
          "select distinct flightno from flights where airline = \"United Airlines\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United\""
        ]
      },
      {
        "question": "Which ones leave from AHD?",
        "query": [
          "select * from flights where airline = \"United Airlines\" and destairport = \"AHD\"",
          "select * from flights where airline = \"United Airlines\" and destairport = \"AHD\"",
          "select * from flights where airline = \"United Airlines\" and sourceairport = \"AHD\"",
          "select * from flights where airline = \"United Airlines\" and sourceairport = \"AHD\"",
          "select * from flights where airline = \"United Airlines\" and destairport = \"AHD\"",
          "select * from flights where sourceairport = \"AHD\"",
          "select * from flights where destairport = \"AHD\"",
          "select * from flights where airline = \"United Airlines\" and sourceairport = \"AHD\"",
          "select * from flights where sourceairport = \"AHD\"",
          "select distinct flightno from flights where airline = \"United Airlines\" and destairport = \"AHD\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where airline = \"United Airlines\" and destairport = \"AHD\"",
          "select count (*) from flights where airline = \"United Airlines\" and destairport = \"AHD\"",
          "select distinct count (*) from flights where airline = \"United Airlines\" and destairport = \"AHD\"",
          "select count (*) from flights where airline = \"United Airlines\" and destairport = \"AHD\"",
          "select count (*) from flights where airline = \"United airlines\" and destairport = \"AHD\""
        ]
      }
    ],
    [
      {
        "question": "Which United Airlines flights fly into Aberdeen?",
        "query": [
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\" and airline = \"United Airlines\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\" and airline = \"United Airlines\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"Aberdeen\"",
          "select * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"Aberdeen\"",
          "select count (*) from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"Aberdeen\"",
          "select distinct count (*) from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"Aberdeen\"",
          "select count (*) from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"Aberdeen\""
        ]
      }
    ],
    [
      {
        "question": "Name all cities that have destination airports.",
        "query": [
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport",
          "select t2.city from flights as t1 join airports as t2 on t1.destairport = t2.airportcode",
          "select city from airports",
          "select distinct t2.city from flights as t1 join airports as t2 on t1.destairport = t2.airportcode",
          "select city from airports",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select distinct t1.city from airports as t1",
          "select city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport"
        ]
      },
      {
        "question": "Order them by number of arriving flights.",
        "query": [
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*)",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*)",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*)",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) asc",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*)",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) asc",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc"
        ]
      },
      {
        "question": "Which one has the most?",
        "query": [
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.city order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.city order by count (*) desc limit 1",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.city order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.city order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc limit 1",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc limit 1",
          "select distinct count (*) from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.city order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.city order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Name all cities that have source airports.",
        "query": [
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select city from airports",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select city from airports",
          "select t2.city from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode",
          "select t2.city from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode",
          "select distinct t1.city from airports as t1"
        ]
      },
      {
        "question": "Order them by number of departing flights.",
        "query": [
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*)",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*)",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*)",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) desc",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) desc",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) desc",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*)",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) asc",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) asc",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) desc"
        ]
      },
      {
        "question": "Which one has the most?",
        "query": [
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count (*) desc limit 1",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) desc limit 1",
          "select distinct count (*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count (*) desc limit 1",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) desc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count (*) asc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport order by count (*) desc limit 1",
          "select distinct t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count (*) asc limit 1",
          "select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count (*) limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are airport codes of any airport with a arriving flight?",
        "query": [
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport",
          "select t2.airportcode from flights as t1 join airports as t2 on t1.destairport = t2.airportcode",
          "select destairport from flights",
          "select destairport from flights",
          "select sourceairport from flights",
          "select sourceairport from flights"
        ]
      },
      {
        "question": "Also include codes of airports with departure flights.",
        "query": [
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.destairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.destairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.destairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.srcairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.srcairport",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport join flights as t3 on t3.destairport = t1.airportcode"
        ]
      },
      {
        "question": "Which one has the highest number of flights?",
        "query": [
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) desc limit 1",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) desc limit 1",
          "select distinct count (*) from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) desc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.airportcode order by count (*) desc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.airportcode order by count (*) desc limit 1",
          "select distinct count (*) from flights as t1 join airports as t2 on t1.destairport = t2.airportcode or t1.sourceairport = t2.airportcode group by t1.destairport order by count (*) desc limit 1",
          "select distinct airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) desc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) asc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are airport codes of any airport with a arriving flight?",
        "query": [
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport",
          "select t2.airportcode from flights as t1 join airports as t2 on t1.destairport = t2.airportcode",
          "select destairport from flights",
          "select destairport from flights",
          "select sourceairport from flights",
          "select sourceairport from flights"
        ]
      },
      {
        "question": "Also include codes of airports with departure flights.",
        "query": [
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.destairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.destairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.destairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.srcairport",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.srcairport",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport join flights as t3 on t3.destairport = t1.airportcode"
        ]
      },
      {
        "question": "Which one has the least number of flights?",
        "query": [
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) asc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) asc limit 1",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) asc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.airportcode order by count (*) asc limit 1",
          "select distinct count (*) from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) asc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.airportcode order by count (*) asc limit 1",
          "select distinct airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) asc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport and t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) asc limit 1",
          "select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport and t1.airportcode = t2.sourceairport group by t1.airportcode order by count (*) asc limit 1",
          "select distinct t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport group by t1.airportcode order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Count the number of flights by airline.",
        "query": [
          "select count (*) from flights group by airline",
          "select airline, count (*) from flights group by airline",
          "select count (*) from flights group by airline",
          "select count (*) from flights group by airline",
          "select distinct flightno from flights group by airline",
          "select count (*), airline from flights group by airline",
          "select flightno, airline from flights group by airline",
          "select distinct count (*) from flights group by airline",
          "select * from flights group by airline",
          "select count (*) from flights group by flightno"
        ]
      },
      {
        "question": "Which airline has the most?",
        "query": [
          "select airline from flights group by airline order by count (*) desc limit 1",
          "select airline from flights group by airline order by count (*) desc limit 1",
          "select distinct count (*) from flights group by airline order by count (*) desc limit 1",
          "select airline from flights group by airline order by count (*) desc limit 1",
          "select distinct airline from flights group by airline order by count (*) desc limit 1",
          "select * from flights group by airline order by count (*) desc limit 1",
          "select distinct airline from flights group by airline order by count (*) desc limit 1",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.airline order by count (*) desc limit 1",
          "select airline from flights group by airline order by count (*) asc limit 1",
          "select distinct (airline) from flights group by airline order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are all the airline abbreviations and what countries are they in?",
        "query": [
          "select airline, country from airlines",
          "select abbreviation, country from airlines",
          "select abbreviation, country from airlines",
          "select airline, country from airlines",
          "select distinct airline, country from airlines",
          "select distinct airline, country from airlines",
          "select t1.abbreviation, t1.country from airlines as t1",
          "select distinct airline, country from airlines",
          "select distinct t1.abbreviation, t1.country from airlines as t1",
          "select distinct abbreviation, country from airlines"
        ]
      },
      {
        "question": "Order them by the number of flights that they have.",
        "query": [
          "select airline, country from airlines order by count (*)",
          "select airline, country from airlines order by count (*)",
          "select airline, country from airlines order by count (*) desc",
          "select airline, country from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.uid order by count (*)",
          "select airline, country from airlines order by count (*) desc",
          "select airline, country from airlines group by airline order by count (*)",
          "select airline, country from airlines order by count (*)",
          "select airline, country from airlines order by count (*) asc",
          "select airline, country from airlines order by count (*) asc",
          "select t1.airline, t1.country from airlines as t1 join flights as t2 group by t1.airline order by count (*)"
        ]
      },
      {
        "question": "Which one has the fewest?",
        "query": [
          "select airline, country from airlines order by count (*) asc limit 1",
          "select airline, country from airlines order by count (*) asc limit 1",
          "select airline from airlines order by count (*) asc limit 1",
          "select airline from airlines order by count (*) asc limit 1",
          "select airline, country from airlines order by count (*) asc limit 1",
          "select distinct airline from airlines order by count (*) asc limit 1",
          "select distinct count (*) from airlines order by count (*) asc limit 1",
          "select airline, country from airlines order by count (*) limit 1",
          "select distinct airline, country from airlines order by count (*) asc limit 1",
          "select distinct (airline) from airlines order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Which flights leave from AHD?",
        "query": [
          "select * from flights where destairport = \"AHD\"",
          "select * from flights where destairport = \"AHD\"",
          "select * from flights where sourceairport = \"AHD\"",
          "select * from flights where sourceairport = \"AHD\"",
          "select flightno from flights where destairport = \"AHD\"",
          "select flightno from flights where destairport = \"AHD\"",
          "select * from flights where destairport = \"AHD\"",
          "select distinct flightno from flights where destairport = \"AHD\"",
          "select * from flights where sourceairport in (select airportcode from airports where airportname = \"AHD\")",
          "select * from flights where sourceairport = \"AHD\""
        ]
      },
      {
        "question": "What are their airlines?",
        "query": [
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"AHD\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"AHD\"",
          "select t2.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"AHD\"",
          "select t1.airline from airlines as t1 join flights as t2 where t2.destairport = \"AHD\"",
          "select t2.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"AHD\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"AHD\"",
          "select t1.airline from airlines as t1 join flights as t2 where t1.uid = t2.airline and t2.destairport = \"AHD\"",
          "select t1.airline from airlines as t1 join flights as t2 where t2.destairport = \"AHD\"",
          "select t1.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"AHD\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"AHD\""
        ]
      }
    ],
    [
      {
        "question": "Which flights arrive in AHD?",
        "query": [
          "select * from flights where destairport = \"AHD\"",
          "select * from flights where destairport = \"AHD\"",
          "select * from flights where sourceairport = \"AHD\"",
          "select * from flights where sourceairport = \"AHD\"",
          "select * from flights where destairport = \"AHD\"",
          "select flightno from flights where destairport = \"AHD\"",
          "select * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.airportname = \"AHD\"",
          "select flightno from flights where destairport = \"AHD\"",
          "select distinct flightno from flights where destairport = \"AHD\"",
          "select * from flights where destairport = \"AHD\""
        ]
      },
      {
        "question": "What are their airlines?",
        "query": [
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"AHD\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"AHD\"",
          "select t2.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"AHD\"",
          "select t1.airline from airlines as t1 join flights as t2 where t2.destairport = \"AHD\"",
          "select t2.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"AHD\"",
          "select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"AHD\"",
          "select t1.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.destairport = \"AHD\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"AHD\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"AHD\"",
          "select airline from flights where destairport = \"AHD\""
        ]
      }
    ],
    [
      {
        "question": "Which airlines have flights departing from APG?",
        "query": [
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select t1.airline from airlines as t1 join flights as t2 where t1.airline = \"APG\"",
          "select * from airlines as t1 join flights as t2 where t1.airline = t2.airline and t2.destairport = \"APG\""
        ]
      },
      {
        "question": "Of those, which also have flights from CVO?",
        "query": [
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"CVO\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"CVO\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\" and t2.sourceairport = \"CVO\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\" and t2.sourceairport = \"CVO\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\" and t2.sourceairport = \"CVO\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"APG\" and t2.sourceairport = \"CVO\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline join airports as t3 on t2.destairport = t3.airportcode where t3.city = \"CVO\" and t2.destairport = \"APG\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"CVO\" and t2.sourceairport = \"APG\""
        ]
      }
    ],
    [
      {
        "question": "Which airlines have flights from CVO?",
        "query": [
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"CVO\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = \"CVO\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"",
          "select t2.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.sourceairport = \"CVO\"",
          "select t2.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid where t1.sourceairport = \"CVO\""
        ]
      },
      {
        "question": "Of these, which do not have flights from APG?",
        "query": [
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"",
          "select airline from airlines except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" and t2.destairport = \"APG\"",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APR\""
        ]
      }
    ],
    [
      {
        "question": "What are all the airlines?",
        "query": [
          "select * from airlines",
          "select * from airlines",
          "select * from airlines",
          "select distinct airline from airlines",
          "select distinct * from airlines"
        ]
      },
      {
        "question": "Which ones have more than 10 flights?",
        "query": [
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.uid having count (*) > 10",
          "select * from airlines where count (*) > 10",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.uid having count (*) > 10",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline having count (*) > 10",
          "select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.airline having count (*) > 10",
          "select t2.airline from flights as t1 join airlines as t2 on t1.airline = t2.uid group by t1.airline having count (*) > 10",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.uid having count (*) > 10",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.airline having count (*) > 10",
          "select * from airlines where count (*) > 10",
          "select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline having count (*) > 10"
        ]
      }
    ],
    [
      {
        "question": "What are all the airlines?",
        "query": [
          "select * from airlines",
          "select * from airlines",
          "select * from airlines",
          "select distinct airline from airlines",
          "select distinct * from airlines"
        ]
      },
      {
        "question": "Which ones have less than 200 flights?",
        "query": [
          "select * from airlines where count (*) < 200",
          "select * from airlines where count (*) < 200",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.uid having count (*) < 200",
          "select * from airlines where count (*) > 200",
          "select * from airlines where count (*) < 200",
          "select * from airlines group by airline having count (*) < 200",
          "select * from airlines where count (*) >= 200",
          "select * from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.airline having count (*) < 200",
          "select * from airlines where count (*) > 200",
          "select * from airlines where count (*) >= 200"
        ]
      }
    ],
    [
      {
        "question": "What are all the flight numbers?",
        "query": [
          "select flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights"
        ]
      },
      {
        "question": "Which belong to United Airlines?",
        "query": [
          "select t1.flightno from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United Airlines\"",
          "select flightno from flights where airline = \"United Airlines\"",
          "select t1.flightno from flights as t1 join airlines as t2 on t2.uid = t1.airline where t2.airline = \"United Airlines\"",
          "select distinct t1.flightno from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United Airlines\"",
          "select flightno from flights where airline = \"United Airlines\"",
          "select t2.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = \"United Airlines\"",
          "select distinct t2.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = \"United Airlines\"",
          "select flightno from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"United Airlines\"",
          "select distinct t1.flightno from flights as t1 join airlines as t2 on t2.uid = t1.airline where t2.airline = \"United Airlines\"",
          "select flightno from flights where airline = \"United Airlines\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flight numbers?",
        "query": [
          "select flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights"
        ]
      },
      {
        "question": "Of these, which correspond to flights leaving from APG?",
        "query": [
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"APG\"",
          "select flightno from flights where destairport = \"APG\"",
          "select flightno from flights where sourceairport = \"APG\"",
          "select flightno from flights where destairport = \"APG\"",
          "select distinct t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"APG\"",
          "select flightno from flights where sourceairport = \"APG\"",
          "select t2.flightno from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = \"APG\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"APG\"",
          "select flightno from flights where destairport = \"APG\"",
          "select t1.flightno from flights as t1 join airports as t2 on t2.airportcode = t1.sourceairport where t2.city = \"APG\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flight numbers?",
        "query": [
          "select flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights"
        ]
      },
      {
        "question": "Also, which numbers are for flights that land in APG?",
        "query": [
          "select flightno from flights where destairport = \"APG\"",
          "select flightno from flights where destairport = \"APG\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"APG\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"APG\"",
          "select distinct t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"APG\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"APG\"",
          "select flightno from flights where destairport = \"APG\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"APG\"",
          "select distinct t1.flightno from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"APG\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"APG\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flight numbers?",
        "query": [
          "select flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights"
        ]
      },
      {
        "question": "Of these, which are departure flights?",
        "query": [
          "select flightno from flights where destairport = \"\"",
          "select flightno from flights where destairport = \"\"",
          "select flightno from flights where sourceairport = \"\"",
          "select flightno from flights where destairport = \"Y\"",
          "select flightno from flights where destairport = \"D\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t1.flightno = \"D\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t1.flightno = \"Departure\"",
          "select flightno from flights where sourceairport = \"\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t1.flightno = \"D\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.airportname = \"Departure\""
        ]
      },
      {
        "question": "Which leave from Aberdeen?",
        "query": [
          "select flightno from flights where destairport = \"Aberdeen\"",
          "select flightno from flights where destairport = \"Aberdeen\"",
          "select distinct flightno from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select flightno from flights where sourceairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select flightno from flights where sourceairport = \"Aberdeen\"",
          "select flightno from flights where destairport = \"Aberdeen\" and sourceairport = \"Aberdeen\"",
          "select flightno from flights where destairport = \"Aberdeen\"",
          "select flightno from flights where destairport = \"AERDEN\""
        ]
      }
    ],
    [
      {
        "question": "What are all the flight numbers?",
        "query": [
          "select flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights",
          "select flightno from flights",
          "select distinct flightno from flights"
        ]
      },
      {
        "question": "Of these, which are arrival flights?",
        "query": [
          "select flightno from flights where destairport = \"\"",
          "select flightno from flights where destairport = \"AR\"",
          "select flightno from flights where destairport = \"ARR\"",
          "select flightno from flights where destairport = \"\"",
          "select flightno from flights where destairport = \"Y\"",
          "select flightno from flights where destairport = \"AA\"",
          "select flightno from flights where destairport = \"ARR\"",
          "select flightno from flights where destairport = \"AR\"",
          "select flightno from flights where destairport = \"A\"",
          "select flightno from flights where destairport = \"A\""
        ]
      },
      {
        "question": "Which land in Aberdeen?",
        "query": [
          "select flightno from flights where destairport = \"Aberdeen\"",
          "select flightno from flights where destairport = \"Aberdeen\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\"",
          "select distinct t1.flightno from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\"",
          "select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select distinct t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\"",
          "select distinct flightno from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select t2.flightno from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = \"Aberdeen\""
        ]
      }
    ],
    [
      {
        "question": "What flights land in Aberdeen?",
        "query": [
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights where destairport = \"Aberdeen\"",
          "select * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\"",
          "select * from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\"",
          "select flightno from flights where destairport = \"Aberdeen\"",
          "select flightno from flights where destairport = \"Aberdeen\"",
          "select * from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = \"Aberdeen\"",
          "select distinct flightno from flights where destairport = \"Aberdeen\"",
          "select distinct * from flights where destairport = \"Aberdeen\"",
          "select * from airports as t1 join flights as t2 where t1.airportname = \"Aberdeen\""
        ]
      },
      {
        "question": "Also include flights that land in Abilene.",
        "query": [
          "select * from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select * from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select * from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select * from flights where destairport = \"Aberdeen\" intersect select * from flights where destairport = \"Abilene\"",
          "select * from flights where destairport = \"Aberdeen\" union select * from flights where destairport = \"Abilene\"",
          "select distinct select * from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select distinct (*) from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select * from flights where destairport = \"Aberdeen\" or destairport = \"Abileno\"",
          "select * from flights where destairport = \"Aberdeen\" union select * from flights where destairport = \"abilene\"",
          "select * from flights where destairport = \"Aberdeen\" intersect select * from flights where destairport = \"abilene\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select count (*) from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select distinct count (*) from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select count (*) from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\"",
          "select count (*) from flights where destairport = \"Aberdeen\" or destairport = \"Abilene\""
        ]
      }
    ],
    [
      {
        "question": "What are the source airports?",
        "query": [
          "select distinct sourceairport from flights",
          "select airportname from airports",
          "select airportname from airports where airportcode in (select sourceairport from flights)",
          "select airportname from airports where airportcode in (select sourceairport from flights)",
          "select airportname from airports",
          "select sourceairport from flights",
          "select * from airports",
          "select sourceairport from flights",
          "select * from airports where airportcode in (select sourceairport from flights)",
          "select * from airports where airportcode in (select sourceairport from flights)"
        ]
      },
      {
        "question": "Also include the destination airports.",
        "query": [
          "select distinct sourceairport, destairport from flights",
          "select distinct sourceairport, destairport from flights",
          "select distinct sourceairport, destairport from flights",
          "select distinct sourceairport, destairport from flights",
          "select distinct sourceairport, distinct destairport from flights",
          "select distinct (sourceairport), destairport from flights",
          "select distinct sourceairport, distinct destairport from flights",
          "select distinct sourceairport from flights",
          "select distinct (sourceairport), distinct destairport from flights"
        ]
      },
      {
        "question": "Which airports are not included?",
        "query": [
          "select distinct airportname from airports except select distinct sourceairport, destairport from flights",
          "select distinct airportcode from airports except select distinct sourceairport, destairport from flights",
          "select distinct airportcode from airports except select distinct sourceairport, destairport from flights",
          "select distinct airportname from airports except select distinct sourceairport, destairport from flights",
          "select distinct airportname from airports except select distinct sourceairport, destairport from flights",
          "select distinct airportcode from airports except select distinct sourceairport, destairport from flights",
          "select airportcode from airports except select distinct sourceairport, destairport from flights",
          "select * from airports except select distinct sourceairport, destairport from flights",
          "select airportcode from airports except select distinct sourceairport, destairport from flights",
          "select * from airports where airportcode not in (select distinct sourceairport from flights)"
        ]
      }
    ]
  ],
  "pets_1": [
    [
      {
        "question": "What information is there on pets?",
        "query": [
          "select * from pets",
          "select * from pets",
          "select * from pets",
          "select distinct * from pets",
          "select distinct petid from pets",
          "select distinct pettype from pets"
        ]
      },
      {
        "question": "Which pets weigh more than 10?",
        "query": [
          "select * from pets where weight > 10",
          "select * from pets where weight > 10",
          "select distinct petid from pets where weight > 10",
          "select distinct * from pets where weight > 10",
          "select petid from pets where weight > 10",
          "select distinct count (*) from pets where weight > 10",
          "select distinct t1.petid from pets as t1 where t1.weight > 10",
          "select petid from pets where weight > 10",
          "select distinct t1.petid, t1.pettype from pets as t1 where t1.weight > 10",
          "select distinct t1.petid from pets as t1 where weight > 10"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from pets where weight > 10",
          "select count (*) from pets where weight > 10",
          "select distinct count (*) from pets where weight > 10",
          "select count (*) from pets where weight > 10"
        ]
      }
    ],
    [
      {
        "question": "Order the pets by age",
        "query": [
          "select * from pets order by pet_age",
          "select * from pets order by pet_age",
          "select * from pets order by pet_age",
          "select * from pets order by pet_age asc",
          "select * from pets order by pet_age desc",
          "select * from pets order by pet_age asc",
          "select * from pets order by pet_age desc",
          "select distinct petid from pets order by pet_age",
          "select distinct * from pets order by pet_age",
          "select * from pets order by pet_age asc"
        ]
      },
      {
        "question": "How much does each one weigh?",
        "query": [
          "select weight from pets order by pet_age",
          "select petid, weight from pets order by pet_age",
          "select weight from pets order by pet_age",
          "select petid, weight from pets order by pet_age",
          "select pet_age, weight from pets order by pet_age",
          "select weight from pets group by weight",
          "select weight from pets order by pet_age",
          "select pettype, weight from pets order by pet_age",
          "select petid, weight from pets order by pet_age",
          "select pettype, weight from pets order by pet_age"
        ]
      },
      {
        "question": "What about the first one?",
        "query": [
          "select weight from pets order by pet_age asc limit 1",
          "select weight from pets order by pet_age asc limit 1",
          "select weight from pets order by pet_age limit 1",
          "select weight from pets order by pet_age limit 1",
          "select weight from pets order by pet_age desc limit 1",
          "select weight from pets order by pet_age desc limit 1",
          "select * from pets order by pet_age asc limit 1",
          "select distinct weight from pets order by pet_age asc limit 1",
          "select distinct petid from pets order by pet_age asc limit 1",
          "select * from pets order by pet_age limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are the different types of pets?",
        "query": [
          "select distinct pettype from pets",
          "select distinct pettype from pets",
          "select distinct pettype from pets",
          "select distinct pettype from pets",
          "select distinct distinct pettype from pets"
        ]
      },
      {
        "question": "For each of those types, what is the maximum weight?",
        "query": [
          "select distinct pettype, max (weight) from pets group by pettype",
          "select max (weight), pettype from pets group by pettype",
          "select max (weight) from pets group by pettype",
          "select max (weight) from pets group by pettype",
          "select max (weight), pettype from pets group by pettype",
          "select pettype, max (weight) from pets group by pettype",
          "select pettype, max (weight) from pets group by pettype",
          "select distinct pettype, max (weight) from pets group by pettype",
          "select distinct max (weight) from pets group by pettype",
          "select distinct pettype, max (weight) from pets group by pettype"
        ]
      }
    ],
    [
      {
        "question": "Which pets are owned by students older than 20?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20",
          "select distinct * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where age > 20",
          "select * from has_pet as t1 join student as t2 on t1.stuid = t2.stuid where t2.age > 20",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where age > 20",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age < 20",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age >20",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age >20"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20",
          "select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age >20",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 21"
        ]
      }
    ],
    [
      {
        "question": "Who are the female students?",
        "query": [
          "select * from student where sex = \"F\"",
          "select * from student where sex = \"F\"",
          "select distinct * from student where sex = \"F\"",
          "select * from student where sex = \"F\"",
          "select distinct count (*) from student where sex = \"F\"",
          "select distinct student.fname from student where sex = \"F\"",
          "select distinct student.sex from student where sex = \"F\"",
          "select distinct student.lname from student where sex = \"F\"",
          "select * from student where sex = \"M\""
        ]
      },
      {
        "question": "Of those, who has a pet?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\"",
          "select distinct t1.fname, t1.lname, t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\"",
          "select t1.fname, t1.lname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\"",
          "select t1.fname, t1.lname, t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\"",
          "select * from student where sex = \"F\" and stuid in (select stuid from has_pet)",
          "select * from student where sex = \"F\" and stuid in (select stuid from has_pet)"
        ]
      },
      {
        "question": "How many of those have dogs?",
        "query": [
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"D\"",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"D\"",
          "select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"D\"",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"D\"",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"dog\"",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"Dog\"",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"dog\"",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"1\"",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"Dog\"",
          "select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"F\" and t2.petid = \"dog\""
        ]
      }
    ],
    [
      {
        "question": "What are the different pet types?",
        "query": [
          "select distinct pettype from pets",
          "select distinct pettype from pets",
          "select distinct pettype from pets"
        ]
      },
      {
        "question": "How many exist?",
        "query": [
          "select count (distinct pettype) from pets",
          "select distinct count (distinct pettype) from pets",
          "select count (distinct pettype) from pets",
          "select distinct count (*) from pets",
          "select distinct count (pettype) from pets",
          "select distinct pettype from pets",
          "select count (distinct pettype) from pets",
          "select distinct count (distinct pettype) from pets"
        ]
      }
    ],
    [
      {
        "question": "what is the first name of every student?",
        "query": [
          "select fname from student",
          "select fname from student",
          "select distinct fname from student",
          "select distinct student.fname from student",
          "select fname from student",
          "select distinct stuid from student",
          "select distinct fname from student",
          "select fname from student group by fname",
          "select fname from student order by fname"
        ]
      },
      {
        "question": "Of those names, which ones correspond to somebody who has a cat?",
        "query": [
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t2.fname from has_pet as t1 join student as t2 on t1.stuid = t2.stuid join pets as t3 on t1.petid = t3.petid where t3.pettype = \"cat\"",
          "select fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = \"cat\""
        ]
      },
      {
        "question": "Also, combine those names with those who have a dog.",
        "query": [
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\"",
          "select t1.fname, t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\"",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\"",
          "select t1.fname, t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\"",
          "select t1.fname, t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\" group by t1.fname",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" or t3.pettype = \"dog\" join student as t4 on t4.stuid = t2.stuid where t4.sex = \"M\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" union select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t3.pettype = \"dog\""
        ]
      }
    ],
    [
      {
        "question": "Which students have a dog as their type of pet?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\"",
          "select distinct * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"Dog\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = \"dog\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"Dog\"",
          "select distinct stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = \"dog\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where pettype = \"dog\""
        ]
      },
      {
        "question": "Who also has a cat?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" or t3.pettype = \"cat\"",
          "select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\""
        ]
      },
      {
        "question": "What are their first names?",
        "query": [
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\"",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\" intersect select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\"",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" intersect select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"dog\""
        ]
      }
    ],
    [
      {
        "question": "Which students have a cat as their pets?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"Cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"Cat\"",
          "select distinct * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = \"cat\"",
          "select distinct stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where pettype = \"cat\""
        ]
      },
      {
        "question": "What are they majoring in?",
        "query": [
          "select t1.major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct major from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\""
        ]
      },
      {
        "question": "Also, how old are they?",
        "query": [
          "select t1.major, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.major, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.major, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.major, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select major, age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select major, age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct major, age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select major, age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.major, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.major, t3.pet_age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\""
        ]
      }
    ],
    [
      {
        "question": "What is every student's id?",
        "query": [
          "select stuid from student",
          "select stuid from student",
          "select distinct stuid from student",
          "select distinct student.stuid from student"
        ]
      },
      {
        "question": "Of those ids, which correspond to those who own cats as pets?",
        "query": [
          "select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"Cat\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"Cat\"",
          "select stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"Cat\"",
          "select stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"Cat\""
        ]
      },
      {
        "question": "List all the other ids.",
        "query": [
          "select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\"",
          "select distinct stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype!= \"cat\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype!= \"cat\""
        ]
      }
    ],
    [
      {
        "question": "Which students have dogs?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\"",
          "select * from student where stuid in (select stuid from has_pet)",
          "select * from student where stuid in (select stuid from has_pet where petid = \"dog\")",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.fname = \"dog\"",
          "select * from student where stuid in (select stuid from has_pet)",
          "select * from student where stuid in (select stuid from has_pet where petid = \"dog\")",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = \"M\" and t1.major = \"D\"",
          "select * from student where stuid in (select stuid from has_pet where petid = \"Dog\")",
          "select * from student where stuid in (select stuid from has_pet where petid = \"dogs\")"
        ]
      },
      {
        "question": "Of those, who does not own a cat?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select distinct * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select * from student as t3 join has_pet as t4 on t3.stuid = t4.stuid where t4.petid = \"cat\""
        ]
      },
      {
        "question": "What are their first names and ages?",
        "query": [
          "select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select fname, age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\"",
          "select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"Cat\"",
          "select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"dog\" except select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid = \"cat\""
        ]
      }
    ],
    [
      {
        "question": "Who is the youngest pet?",
        "query": [
          "select distinct petid from pets order by pet_age asc limit 1",
          "select distinct min (pet_age) from pets",
          "select distinct petid from pets order by pet_age desc limit 1",
          "select distinct max (pet_age) from pets",
          "select max (pet_age) from pets",
          "select min (pet_age) from pets",
          "select distinct petid from pets order by pet_age limit 1"
        ]
      },
      {
        "question": "What type are they?",
        "query": [
          "select distinct pettype from pets order by pet_age asc limit 1",
          "select distinct petid from pets order by pet_age asc limit 1",
          "select distinct petid, pettype from pets order by pet_age asc limit 1",
          "select pettype from pets order by pet_age asc limit 1",
          "select distinct pets.pettype from pets order by pet_age asc limit 1",
          "select *select pettype from pets order by pet_age asc limit 1",
          "select distinct pettype from pets order by pet_age desc limit 1",
          "select distinct pettype from pets order by pet_age asc limit 1",
          "select sum distinct pettype from pets order by pet_age asc limit 1",
          "select from pets order by pet_age asc limit 1"
        ]
      },
      {
        "question": "Also, how much do they weigh?",
        "query": [
          "select distinct pettype, pet_age from pets order by pet_age asc limit 1",
          "select distinct pettype, weight from pets order by pet_age asc limit 1",
          "select distinct petid, pettype from pets order by pet_age asc limit 1",
          "select distinct petid, pettype, pet_age from pets order by pet_age asc limit 1",
          "select distinct t1.pettype, t1.weight from pets as t1 order by t1.pet_age asc limit 1",
          "select distinct petid, pettype, weight from pets order by pet_age asc limit 1",
          "select distinct pettype, weight from pets order by pet_age asc limit 1",
          "select distinct pettype, pet_age, weight from pets order by pet_age asc limit 1",
          "select distinct petid, pettype, pet_age, weight from pets order by pet_age asc limit 1",
          "select distinct pettype from pets order by pet_age asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are ids of every pet?",
        "query": [
          "select distinct petid from pets",
          "select petid from pets",
          "select petid from pets",
          "select distinct petid from has_pet"
        ]
      },
      {
        "question": "For those, which refer to pets older than 1?",
        "query": [
          "select distinct petid from pets where pet_age > 1",
          "select distinct petid from pets where pet_age > 1",
          "select distinct petid from pets where pet_age > 1"
        ]
      },
      {
        "question": "Also, how much do they weigh?",
        "query": [
          "select distinct petid, weight from pets where pet_age > 1",
          "select distinct petid, weight from pets where pet_age > 1",
          "select distinct petid, weight from pets where pet_age > 1"
        ]
      }
    ],
    [
      {
        "question": "What are the different pet types?",
        "query": [
          "select distinct pettype from pets",
          "select distinct pettype from pets",
          "select distinct pettype from pets"
        ]
      },
      {
        "question": "For each of those, what is the maximum age?",
        "query": [
          "select distinct pettype, max (pet_age) from pets group by pettype",
          "select max (pet_age), pettype from pets group by pettype",
          "select pettype, max (pet_age) from pets group by pettype",
          "select max (pet_age), pettype from pets group by pettype",
          "select pettype, max (pet_age) from pets group by pettype",
          "select distinct pettype, max (pet_age) from pets group by pettype",
          "select max (pet_age) from pets group by pettype",
          "select max (pet_age) from pets group by pettype",
          "select max (pet_age), pettype from pets group by pettype",
          "select pettype, max (pet_age) from pets group by pettype"
        ]
      },
      {
        "question": "What about the average age?",
        "query": [
          "select distinct pettype, avg (pet_age) from pets group by pettype",
          "select distinct pettype, avg (pet_age) from pets group by pettype",
          "select avg (pet_age) from pets group by pettype",
          "select avg (pet_age) from pets group by pettype",
          "select avg (pet_age), pettype from pets group by pettype",
          "select avg (pet_age), pettype from pets group by pettype",
          "select pettype, avg (pet_age) from pets group by pettype",
          "select distinct avg (pet_age) from pets group by pettype",
          "select avg (pet_age) from pets",
          "select avg (pet_age), distinct pettype from pets group by pettype"
        ]
      }
    ],
    [
      {
        "question": "What information is there on pets?",
        "query": [
          "select * from pets",
          "select * from pets",
          "select * from pets",
          "select distinct * from pets",
          "select distinct petid from pets",
          "select distinct pettype from pets"
        ]
      },
      {
        "question": "For each pet type, what is the average weight?",
        "query": [
          "select avg (weight), pettype from pets group by pettype",
          "select pettype, avg (weight) from pets group by pettype",
          "select avg (weight) from pets group by pettype",
          "select avg (weight), pettype from pets group by pettype",
          "select avg (weight) from pets group by pettype",
          "select pettype, avg (weight) from pets group by pettype",
          "select distinct pettype, avg (weight) from pets group by pettype",
          "select avg (weight), pettype from pets group by pettype",
          "select pettype, avg (weight) from pets group by pettype",
          "select avg (weight) from pets group by pettype"
        ]
      }
    ],
    [
      {
        "question": "Which students have pets?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2",
          "select * from student as t1 join has_pet as t2",
          "select * from student as t1 join has_pet as t2 on t2.stuid = t1.stuid",
          "select distinct student.stuid from has_pet"
        ]
      },
      {
        "question": "What are the different first names?",
        "query": [
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid"
        ]
      },
      {
        "question": "Also, what are their ages?",
        "query": [
          "select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid"
        ]
      }
    ],
    [
      {
        "question": "Which students have pets?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2",
          "select * from student as t1 join has_pet as t2",
          "select * from student as t1 join has_pet as t2 on t2.stuid = t1.stuid",
          "select distinct student.stuid from has_pet"
        ]
      },
      {
        "question": "Of those, whose last name is smith?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"Smith\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"Smith\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"Smith\"",
          "select distinct t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"Smith\""
        ]
      },
      {
        "question": "What is their pet's id?",
        "query": [
          "select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select distinct t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smith\"",
          "select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smither\"",
          "select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = \"smither\""
        ]
      }
    ],
    [
      {
        "question": "Which of the students have pets?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select * from student as t1 join has_pet as t2 on t2.stuid = t1.stuid",
          "select * from student as t1 join has_pet as t2",
          "select * from student as t1 join has_pet as t2 on t2.stuid = t1.stuid",
          "select * from student as t1 join has_pet as t2"
        ]
      },
      {
        "question": "How many pets does each of them have?",
        "query": [
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid",
          "select t1.stuid, count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid",
          "select distinct t1.stuid, count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid",
          "select count (*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid",
          "select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid",
          "select distinct count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid",
          "select distinct count (*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid",
          "select count (*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid"
        ]
      }
    ],
    [
      {
        "question": "What is the first name and sex of each student?",
        "query": [
          "select fname, sex from student",
          "select fname, sex from student",
          "select fname, sex from student",
          "select distinct student.fname, student.sex from student",
          "select distinct fname, sex from student",
          "select lname, sex from student",
          "select distinct fname, sex from student"
        ]
      },
      {
        "question": "Which of those belong to somebody who has more than one pet?",
        "query": [
          "select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count (*) > 1",
          "select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count (*) > 1",
          "select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count (*) > 1",
          "select distinct t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.sex having count (*) > 1",
          "select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t2.stuid having count (*) > 1",
          "select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t2.stuid having count (*) > 1",
          "select t2.fname, t2.sex from has_pet as t1 join student as t2 on t1.stuid = t2.stuid group by t1.stuid having count (*) > 1",
          "select t2.fname, t2.sex from has_pet as t1 join student as t2 on t1.stuid = t2.stuid group by t1.stuid having count (*) > 1"
        ]
      }
    ],
    [
      {
        "question": "What is the id of the three-year old cat?",
        "query": [
          "select petid from pets where pet_age = 3 and pettype = \"cat\"",
          "select petid from pets where pet_age = 3 and pettype = \"cat\"",
          "select petid from pets where pettype = \"cat\" and pet_age = 3",
          "select petid from pets where pet_age = 3 and pettype = \"Cat\"",
          "select petid from pets where pettype = \"Cat\" and pet_age = 3",
          "select petid from pets where pettype = \"cat\" and pet_age = 3",
          "select distinct petid from pets where pet_age = 3 and pettype = \"cat\"",
          "select petid from pets where pet_age = 3 and pettype = \"Cat\"",
          "select petid from pets where pettype = \"cat\" and pet_age > 3",
          "select petid from pets where pettype = \"Cat\" and pet_age = 3"
        ]
      },
      {
        "question": "Who is the owner of that cat?",
        "query": [
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" and t3.pet_age = 3",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" and t3.pet_age = 3",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" and t3.pet_age = 3",
          "select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = \"cat\" and t3.pet_age = 3",
          "select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select t2.fname, t2.lname from pets as t1 join student as t2 on t1.petid = t2.stuid where t1.pet_age = 3 and t1.pettype = \"cat\""
        ]
      },
      {
        "question": "What is their last name?",
        "query": [
          "select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select distinct t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select distinct t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\"",
          "select distinct t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\" group by t1.lname",
          "select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = \"cat\" group by t1.lname"
        ]
      }
    ],
    [
      {
        "question": "Which students do not own any pets?",
        "query": [
          "select * from student where stuid not in (select stuid from has_pet)",
          "select * from student where stuid not in (select stuid from has_pet)",
          "select * from student where stuid not in (select stuid from has_pet)",
          "select distinct stuid from student except select stuid from has_pet",
          "select distinct * from student where stuid not in (select stuid from has_pet)",
          "select distinct stuid from student except select distinct stuid from has_pet",
          "select * from student except select * from student as t1 join has_pet as t2",
          "select * from student except select * from student as t1 join has_pet",
          "select * from student except select * from student as t1 join has_pet"
        ]
      },
      {
        "question": "What is their average age?",
        "query": [
          "select avg (age) from student where stuid not in (select stuid from has_pet)",
          "select avg (age) from student where stuid not in (select stuid from has_pet)",
          "select avg (age) from student where stuid not in (select stuid from has_pet)",
          "select distinct avg (age) from student where stuid not in (select stuid from has_pet)",
          "select distinct count (*) from student where stuid not in (select stuid from has_pet)",
          "select distinct student.age from student where stuid not in (select stuid from has_pet)"
        ]
      }
    ]
  ],
  "world_1": [
    [
      {
        "question": "What are the names of all the countries?",
        "query": [
          "select name from country",
          "select name from country",
          "select distinct name from country",
          "select name from country",
          "select distinct name from country"
        ]
      },
      {
        "question": "Give the names of the ones that became independent after 1950.",
        "query": [
          "select name from country where indepyear > 1950",
          "select name from country where indepyear > 1950",
          "select distinct name from country where indepyear > 1950",
          "select name from country where indepyear > 1950",
          "select distinct name from country where indepyear > 1950",
          "select name from country where lifeexpectancy > 1950",
          "select distinct name from country where indepyear > 1950",
          "select name from country where indepyear < 1950",
          "select name from country where indepyear > 1850",
          "select name from country where indepyear < 1950"
        ]
      }
    ],
    [
      {
        "question": "How many countries are there?",
        "query": [
          "select count (*) from country",
          "select count (*) from country",
          "select distinct count (*) from country",
          "select count (*) from country",
          "select distinct countrycode from countrylanguage"
        ]
      },
      {
        "question": "Out of those, how many have a republic as their form of government?",
        "query": [
          "select count (*) from country where governmentform = \"Republic\"",
          "select count (*) from country where governmentform = \"Republic\"",
          "select distinct count (*) from country where governmentform = \"Republic\"",
          "select count (*) from country where governmentform = \"republic\"",
          "select count (*) from country where governmentform = \"Republic\"",
          "select count (*) from country where governmentform = \"republic\"",
          "select count (*) from country where governmentform = \"Republic\"",
          "select distinct count (*) from country where governmentform = \"republic\"",
          "select count (*) from country where governmentform = \"republic\"",
          "select distinct count (*) from country where governmentform = \"Republic\""
        ]
      }
    ],
    [
      {
        "question": "What are the countries in the Carribean region?",
        "query": [
          "select * from country where region = \"Carribean\"",
          "select * from country where region = \"Carribean\"",
          "select * from country where region = \"Carribean\"",
          "select distinct * from country where region = \"Carribean\"",
          "select name from country where region = \"Carribean\"",
          "select distinct name from country where region = \"Carribean\"",
          "select * from country where continent = \"Carribean\"",
          "select * from country where region = \"Caribean\"",
          "select * from country where region = \"Carribean Region\"",
          "select * from country where region = \"Carribean region\""
        ]
      },
      {
        "question": "What is the surface area of each of those countries?",
        "query": [
          "select surfacearea from country where region = \"Carribean\"",
          "select surfacearea from country where region = \"Carribean\"",
          "select surfacearea from country where region = \"Carribean\"",
          "select sum (surfacearea) from country where region = \"Carribean\"",
          "select distinct country.surfacearea from country where region = \"Carribean\"",
          "select sum (surfacearea) from country where region = \"Carribean\"",
          "select t2.surfacearea from country as t1 join country as t2 on t1.code = t2.code where t1.region = \"Carribean\"",
          "select t2.surfacearea from country as t1 join country as t2 on t1.code = t2.code where t1.region = \"Carribean\"",
          "select t1.surfacearea from country as t1 where t1.region = \"Carribean\"",
          "select t1.surfacearea from country as t1 join country where t1.region = \"Carribean\""
        ]
      },
      {
        "question": "Find the total surface area of the above.",
        "query": [
          "select sum (surfacearea) from country where region = \"Carribean\"",
          "select sum (surfacearea) from country where region = \"Carribean\"",
          "select distinct sum (surfacearea) from country where region = \"Carribean\"",
          "select sum (surfacearea) from country where region = \"Carribean\"",
          "select sum (surfacearea) from country where region = \"Carributean\""
        ]
      }
    ],
    [
      {
        "question": "What continent does each country belong to?",
        "query": [
          "select continent from country",
          "select continent from country",
          "select distinct continent from country",
          "select distinct country.continent from country",
          "select distinct continent from country"
        ]
      },
      {
        "question": "Which one does Anguila belong to?",
        "query": [
          "select continent from country where name = \"Anguilla\"",
          "select continent from country where name = \"Anguilla\"",
          "select distinct continent from country where name = \"Anguilla\"",
          "select continent from country where name = \"Angola\"",
          "select continent from country where name = \"Anguila\"",
          "select continent from country where name = \"Angola\"",
          "select distinct continent from country where name = \"Anguilla\"",
          "select continent from country where name = \"Anguila\"",
          "select * from country where name = \"Anguilla\"",
          "select * from country where name = \"Anguilla\""
        ]
      }
    ],
    [
      {
        "question": "What are the names of all the regions?",
        "query": [
          "select distinct region from country",
          "select distinct region from country",
          "select region from country",
          "select distinct region from country",
          "select region from country",
          "select distinct region from country",
          "select region from country",
          "select name from country"
        ]
      },
      {
        "question": "Which of those is the city Kabul located in?",
        "query": [
          "select t1.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\"",
          "select t1.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\"",
          "select t2.name from city as t1 join country as t2 on t1.countrycode = t2.code where t1.name = \"Kabul\"",
          "select t1.region from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\"",
          "select t2.name from city as t1 join country as t2 on t1.countrycode = t2.code where t1.name = \"Kabul\"",
          "select t1.region from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\"",
          "select distinct t1.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\"",
          "select distinct t1.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\"",
          "select t2.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\"",
          "select t2.region from city as t1 join country as t2 on t1.countrycode = t2.code where t1.name = \"Kabul\""
        ]
      }
    ],
    [
      {
        "question": "What are all the languages?",
        "query": [
          "select language from countrylanguage",
          "select language from countrylanguage",
          "select distinct language from countrylanguage",
          "select language from countrylanguage",
          "select distinct language from countrylanguage",
          "select language from countrylanguage",
          "select distinct language from countrylanguage"
        ]
      },
      {
        "question": "What are the languages spoken in Aruba?",
        "query": [
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select language from countrylanguage where countrycode = \"Aruba\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\"",
          "select language from countrylanguage where countrycode = \"ARUBA\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t2.code = t1.countrycode where t2.name = \"Aruba\"",
          "select language from countrylanguage where countrycode = \"Aruba\"",
          "select language from countrylanguage where countrycode = \"ARuba\"",
          "select language from countrylanguage where countrycode = \"ARUBA\"",
          "select language from countrylanguage where countrycode = \"AR\""
        ]
      },
      {
        "question": "Which one is the most popular?",
        "query": [
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) desc limit 1",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) desc limit 1",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) desc limit 1",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) desc limit 1",
          "select distinct count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) desc limit 1",
          "select distinct language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) desc limit 1",
          "select language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) desc limit 1",
          "select language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) desc limit 1",
          "select language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by language order by count (*) desc limit 1",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\" group by t1.language order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are the population and life expectancies for all countries?",
        "query": [
          "select population, lifeexpectancy from country",
          "select population, lifeexpectancy from country",
          "select distinct population, lifeexpectancy from country",
          "select population, lifeexpectancy from country",
          "select distinct lifeexpectancy, population from country",
          "select distinct country.population, lifeexpectancy from country",
          "select population from country",
          "select distinct name, lifeexpectancy from country"
        ]
      },
      {
        "question": "Of those, which ones are for the country Brazil?",
        "query": [
          "select population, lifeexpectancy from country where name = \"Brazil\"",
          "select population, lifeexpectancy from country where name = \"Brazil\"",
          "select population from country where name = \"Brazil\"",
          "select population from country where name = \"Brazil\"",
          "select population, lifeexpectancy from country where name = \"Brazil\"",
          "select lifeexpectancy from country where name = \"Brazil\"",
          "select lifeexpectancy from country where name = \"Brazil\"",
          "select distinct population from country where name = \"Brazil\"",
          "select t1.population, t1.lifeexpectancy from country as t1 where t1.name = \"Brazil\"",
          "select population, lifeexpectancy from country where name = \"Brasil\""
        ]
      }
    ],
    [
      {
        "question": "Which region is Angola in?",
        "query": [
          "select region from country where name = \"Angola\"",
          "select region from country where name = \"Angola\"",
          "select distinct region from country where name = \"Angola\"",
          "select distinct region from country where name = \"Angola\"",
          "select distinct region from country where name = \"Angola\"",
          "select distinct country.region from country where name = \"Angola\"",
          "select * from country where name = \"Angola\"",
          "select distinct t1.region from country as t1 where t1.name = \"Angola\"",
          "select t1.region from country as t1 where t1.name = \"Angola\""
        ]
      },
      {
        "question": "For that country, what is its population?",
        "query": [
          "select population from country where name = \"Angola\"",
          "select population from country where name = \"Angola\"",
          "select distinct population from country where name = \"Angola\"",
          "select sum (population) from country where name = \"Angola\"",
          "select sum (population) from country where name = \"Angola\"",
          "select region, population from country where name = \"Angola\"",
          "select region, population from country where name = \"Angola\"",
          "select t2.population from country as t1 join city as t2 on t1.code = t2.id where t1.name = \"Angola\"",
          "select region from country where name = \"Angola\"",
          "select t1.population from country as t1 where t1.name = \"Angola\""
        ]
      }
    ],
    [
      {
        "question": "What are the life expectancies for all the countries?",
        "query": [
          "select lifeexpectancy from country",
          "select distinct lifeexpectancy from country",
          "select lifeexpectancy from country",
          "select lifeexpectancy from country"
        ]
      },
      {
        "question": "What are the life expectancies for the countries in the region of Central Africa?",
        "query": [
          "select lifeexpectancy from country where region = \"Central Africa\"",
          "select lifeexpectancy from country where region = \"Central Africa\"",
          "select lifeexpectancy from country where region = \"Central Africa\"",
          "select distinct lifeexpectancy from country where region = \"Central Africa\"",
          "select distinct count (*) from country where region = \"Central Africa\"",
          "select distinct country.lifeexpectancy from country where region = \"Central Africa\"",
          "select distinct (lifeexpectancy) from country where region = \"Central Africa\"",
          "select distinct t2.lifeexpectancy from country as t1 join country as t2 on t1.code = t2.code where t1.region = \"Central Africa\"",
          "select distinct t1.lifeexpectancy from country as t1 where t1.region = \"Central Africa\"",
          "select lifeexpectancy from country where continent = \"Central Africa\""
        ]
      },
      {
        "question": "What is the average of those?",
        "query": [
          "select avg (lifeexpectancy) from country where region = \"Central Africa\"",
          "select avg (lifeexpectancy) from country where region = \"Central Africa\"",
          "select distinct avg (lifeexpectancy) from country where region = \"Central Africa\"",
          "select avg (lifeexpectancy) from country where region = \"Central Africa\"",
          "select distinct lifeexpectancy from country where region = \"Central Africa\"",
          "select distinct sum (lifeexpectancy) from country where region = \"Central Africa\"",
          "select distinct (lifeexpectancy) from country where region = \"Central Africa\"",
          "select distinct count (*) from country where region = \"Central Africa\"",
          "select distinct lifeexpectancy from country where region = \"Central Africa\" group by lifeexpectancy",
          "select distinct count (*), avg (lifeexpectancy) from country where region = \"Central Africa\""
        ]
      }
    ],
    [
      {
        "question": "What are the names of the countries in Asia?",
        "query": [
          "select name from country where continent = \"Asia\"",
          "select name from country where continent = \"Asia\"",
          "select distinct name from country where continent = \"Asia\"",
          "select name from country where continent = \"Asia\"",
          "select distinct name from country where continent = \"Asia\"",
          "select t1.name from country as t1 where t1.continent = \"Asia\"",
          "select t1.name from country as t1 where t1.continent = \"Asia\"",
          "select distinct country.name from country where continent = \"Asia\"",
          "select distinct name from country where continent = \"Asia\"",
          "select t1.name from country as t1 join country as t2 on t1.code = t2.code where t2.continent = \"Asia\""
        ]
      },
      {
        "question": "Which one has the shortest life expectancy?",
        "query": [
          "select name from country where continent = \"Asia\" order by lifeexpectancy asc limit 1",
          "select name from country where continent = \"Asia\" order by lifeexpectancy asc limit 1",
          "select distinct name from country where continent = \"Asia\" order by lifeexpectancy asc limit 1",
          "select name from country where continent = \"Asia\" order by lifeexpectancy desc limit 1",
          "select name from country where continent = \"Asia\" order by lifeexpectancy limit 1",
          "select distinct min (lifeexpectancy) from country where continent = \"Asia\"",
          "select name from country where continent = \"Asia\" order by lifeexpectancy desc limit 1",
          "select name from country where continent = \"Asia\" order by lifeexpectancy limit 1",
          "select distinct max (lifeexpectancy) from country where continent = \"Asia\"",
          "select name from country order by lifeexpectancy asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "How many people live in Asia?",
        "query": [
          "select sum (population) from country where continent = \"Asia\"",
          "select population from country where continent = \"Asia\"",
          "select sum (population) from country where continent = \"Asia\"",
          "select population from country where name = \"Asia\"",
          "select sum (population) from country where name = \"Asia\"",
          "select population from country where continent = \"Asia\"",
          "select population from country where name = \"Asia\"",
          "select sum (population) from country where name = \"Asia\"",
          "select distinct population from country where continent = \"Asia\"",
          "select sum (population) from country where continent = \"Asia\""
        ]
      },
      {
        "question": "What about the largest GNP among them?",
        "query": [
          "select max (gnp) from country where continent = \"Asia\"",
          "select max (gnp) from country where continent = \"Asia\"",
          "select distinct max (gnp) from country where continent = \"Asia\"",
          "select max (gnp) from country where continent = \"Asia\"",
          "select max (GNP) from country where continent = \"Asia\"",
          "select max (GNP) from country where continent = \"Asia\"",
          "select max (population) from country where continent = \"Asia\"",
          "select distinct max (population) from country where continent = \"Asia\"",
          "select max (population) from country where continent = \"Asia\"",
          "select distinct max (GNP) from country where continent = \"Asia\""
        ]
      }
    ],
    [
      {
        "question": "Which countries are in Africa?",
        "query": [
          "select * from country where continent = \"Africa\"",
          "select * from country where continent = \"Africa\"",
          "select * from country where continent = \"Africa\"",
          "select distinct count (*) from country where continent = \"Africa\"",
          "select name from country where continent = \"Africa\"",
          "select distinct country.name from country where continent = \"Africa\"",
          "select distinct name from country where continent = \"Africa\"",
          "select * from country where continent = \"AF\""
        ]
      },
      {
        "question": "Which countries are also republics?",
        "query": [
          "select * from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select * from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select * from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select * from country where continent = \"Africa\" and governmentform = \"republic\"",
          "select * from country where continent = \"Africa\" and governmentform = \"republic\"",
          "select distinct select * from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select * from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select * from country where continent = \"Africa\" and governmentform = \"REPUBLIC\"",
          "select * from country where continent = \"Africa\" or governmentform = \"Republic\"",
          "select * from country where continent = \"Africa\" and governmentform = \"Republic\""
        ]
      },
      {
        "question": "What is the average of their life expectancies?",
        "query": [
          "select avg (lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select avg (lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select avg (lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select distinct avg (lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select distinct lifeexpectancy from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select distinct count (*) from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select distinct (lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\"",
          "select avg (lifeexpectancy) from country where continent = \"Africa\" and Governmentform = \"Republic\""
        ]
      }
    ],
    [
      {
        "question": "What are the countries in the continents of Asia or Europe?",
        "query": [
          "select * from country where continent = \"Asia\" or continent = \"Europe\"",
          "select * from country where continent = \"Asia\" or continent = \"Europe\"",
          "select * from country where continent = \"Asia\" or continent = \"Europe\"",
          "select distinct * from country where continent = \"Asia\" or continent = \"Europe\"",
          "select * from country where continent = \"Asia\" or continent = \"Europe\"",
          "select distinct count (*) from country where continent = \"Asia\" or continent = \"Europe\"",
          "select * from country where continent = \"Asia or Europe\"",
          "select distinct name from country where continent = \"Asia\" or continent = \"Europe\"",
          "select * from country where continent = \"Asia or Europe\"",
          "select * from country where continent = \"Asia\" union select * from country where continent = \"Europe\""
        ]
      },
      {
        "question": "What is the surface area of each country?",
        "query": [
          "select surfacearea from country where continent = \"Asia\" or continent = \"Europe\"",
          "select surfacearea from country where continent = \"Asia\" or continent = \"Europe\"",
          "select surfacearea from country",
          "select distinct country.surfacearea from country where continent = \"Asia\" or continent = \"Europe\"",
          "select surfacearea from country where continent = \"Asia\" or continent = \"Europe\"",
          "select distinct surfacearea from country where continent = \"Asia\" or continent = \"Europe\"",
          "select surfacearea from country",
          "select distinct name, surfacearea from country where continent = \"Asia\" or continent = \"Europe\"",
          "select surfacearea from country",
          "select distinct t1.surfacearea from country as t1"
        ]
      },
      {
        "question": "What is the total surface area summed up?",
        "query": [
          "select sum (surfacearea) from country where continent = \"Asia\" or continent = \"Europe\"",
          "select distinct sum (surfacearea) from country where continent = \"Asia\" or continent = \"Europe\"",
          "select sum (surfacearea) from country where continent = \"Asia\" or continent = \"Europe\""
        ]
      }
    ],
    [
      {
        "question": "What are the populations of each city in the district of Gelderland?",
        "query": [
          "select population from city where district = \"Gelderland\"",
          "select population from city where district = \"Gelderland\"",
          "select distinct t1.population from city as t1 join country as t2 on t1.countrycode = t2.code where t1.district = \"Gelderland\"",
          "select t1.population from city as t1 join country as t2 on t1.countrycode = t2.code where t1.district = \"Gelderland\"",
          "select t2.population from city as t1 join country as t2 on t1.countrycode = t2.code where t1.district = \"Gelderland\"",
          "select distinct t2.population from city as t1 join country as t2 on t1.countrycode = t2.code where t1.district = \"Gelderland\"",
          "select distinct population from city where district = \"Gelderland\"",
          "select distinct city.population from city where district = \"Gelderland\"",
          "select t1.population from city as t1 join country as t2 on t1.countrycode = t2.code where district = \"Gelderland\"",
          "select distinct t1.population from city as t1 join country as t2 on t1.countrycode = t2.code where district = \"Gelderland\""
        ]
      },
      {
        "question": "What is the total population in that district?",
        "query": [
          "select sum (population) from city where district = \"Gelderland\"",
          "select sum (population) from city where district = \"Gelderland\"",
          "select distinct sum (population) from city where district = \"Gelderland\"",
          "select sum (population) from city where district = \"Gelderland\""
        ]
      }
    ],
    [
      {
        "question": "What are all the nations?",
        "query": [
          "select * from country",
          "select * from country",
          "select distinct name from country",
          "select * from country",
          "select distinct country.name from country",
          "select distinct * from country",
          "select distinct countrycode from countrylanguage"
        ]
      },
      {
        "question": "Which of those have a government that is a US territory?",
        "query": [
          "select * from country where governmentform = \"US\"",
          "select * from country where governmentform = \"US\"",
          "select * from country where governmentform = \"USA\"",
          "select * from country where governmentform = \"United States\"",
          "select * from country where governmentform = \"US\"",
          "select * from country where governmentform = \"U\"",
          "select * from country where governmentform = \"USA\"",
          "select * from country where governmentform = \"United States\"",
          "select * from country where governmentform = \"US territory\"",
          "select * from country where governmentform = \"U\""
        ]
      },
      {
        "question": "For those, what is the average GNP and total population?",
        "query": [
          "select avg (gnp), sum (population) from country where governmentform = \"US\"",
          "select avg (gnp), sum (population) from country where governmentform = \"US\"",
          "select avg (gnp), sum (population) from country where governmentform = \"US\"",
          "select distinct avg (gnp), sum (population) from country where governmentform = \"US\"",
          "select avg (GNP), sum (population) from country where governmentform = \"US\"",
          "select avg (gnp), avg (population) from country where governmentform = \"US\"",
          "select avg (gnp), avg (population) from country where governmentform = \"US\"",
          "select avg (GNP), sum (population) from country where governmentform = \"US\"",
          "select avg (gnp), avg (population) from country where governmentform = \"US\"",
          "select avg (gnp), sum (population) from country where Governmentform = \"US\""
        ]
      }
    ],
    [
      {
        "question": "What are all the distinct languages used around the world?",
        "query": [
          "select distinct language from countrylanguage",
          "select distinct language from countrylanguage",
          "select distinct language from countrylanguage",
          "select distinct language from countrylanguage",
          "select distinct (language) from countrylanguage"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (distinct language) from countrylanguage",
          "select distinct count (distinct language) from countrylanguage",
          "select count (distinct language) from countrylanguage",
          "select distinct count (*) from countrylanguage",
          "select distinct count (language) from countrylanguage",
          "select count (distinct language) from countrylanguage",
          "select distinct language from countrylanguage"
        ]
      }
    ],
    [
      {
        "question": "What are the distinct forms of government in the continent of Africa?",
        "query": [
          "select distinct governmentform from country where continent = \"Africa\"",
          "select distinct governmentform from country where continent = \"Africa\"",
          "select distinct governmentform from country where continent = \"Africa\"",
          "select distinct Governmentform from country where continent = \"Africa\"",
          "select distinct governmentform from country where continent = \"Africa\"",
          "select distinct (governmentform) from country where continent = \"Africa\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (distinct governmentform) from country where continent = \"Africa\"",
          "select distinct count (distinct governmentform) from country where continent = \"Africa\"",
          "select distinct count (governmentform) from country where continent = \"Africa\"",
          "select distinct count (*) from country where continent = \"Africa\"",
          "select distinct governmentform from country where continent = \"Africa\"",
          "select distinct count (governmentform) from country where continent = \"Africa\"",
          "select count (distinct governmentform) from country where continent = \"African\"",
          "select count (distinct governmentform) from country where continent = \"Afghanistan\"",
          "select distinct count (distinct governmentform) from country where continent = \"African\""
        ]
      }
    ],
    [
      {
        "question": "What is the information about the country Aruba?",
        "query": [
          "select * from country where name = \"Aruba\"",
          "select * from country where name = \"Aruba\"",
          "select * from country where name = \"Aruba\"",
          "select distinct * from country where name = \"Aruba\"",
          "select * from country where name = \"Argentina\"",
          "select * from country where name = \"Argentina\"",
          "select distinct country.name from country where name = \"Aruba\"",
          "select * from country where name = \"Aruba\"",
          "select * from country where name = \"Aruba\"",
          "select * from country where name = \"Aruba\""
        ]
      },
      {
        "question": "What are the languages used in Aruba?",
        "query": [
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\"",
          "select language from countrylanguage where countrycode = \"Aruba\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Aruba\"",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select language from countrylanguage where countrycode = \"Aruba\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where name = \"Aruba\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t2.code = t1.countrycode where t2.name = \"Aruba\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where name = \"Aruba\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select count (t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select distinct count (t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select distinct count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select distinct count (t1.name) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"",
          "select distinct count (t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\""
        ]
      }
    ],
    [
      {
        "question": "What are the languages used in Afghanistan?",
        "query": [
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Afghanistan\"",
          "select language from countrylanguage where countrycode = \"Afghanistan\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\"",
          "select language from countrylanguage where countrycode = \"Afghanistan\"",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Afghanistan\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t2.code = t1.countrycode where t2.name = \"Afghanistan\"",
          "select distinct language from countrylanguage where countrycode = \"Afghanistan\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t2.code = t1.countrycode where t2.name = \"Afghanistan\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where country.name = \"Afghanistan\""
        ]
      },
      {
        "question": "Of those, how many are the official languages?",
        "query": [
          "select count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = \"Y\"",
          "select count (t1.language) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = \"Y\"",
          "select count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = \"Y\"",
          "select count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = 1",
          "select distinct count (t1.language) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = \"Y\"",
          "select count (t1.language) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = 1",
          "select count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = \"1\"",
          "select count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = 1",
          "select count (t1.language) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = \"1\"",
          "select count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = \"Afghanistan\" and t1.isofficial = \"T\""
        ]
      }
    ],
    [
      {
        "question": "How many languages are spoken in each country?",
        "query": [
          "select count (*) from countrylanguage group by countrycode",
          "select count (*) from countrylanguage group by countrycode",
          "select language, count (*) from countrylanguage group by countrycode",
          "select language, count (*) from countrylanguage group by language",
          "select countrycode, count (*) from countrylanguage group by countrycode",
          "select count (*) from countrylanguage",
          "select distinct language from countrylanguage",
          "select language, count (*) from countrylanguage group by countrycode",
          "select count (*) from countrylanguage",
          "select language, count (*) from countrylanguage group by language"
        ]
      },
      {
        "question": "Which country speaks the most?",
        "query": [
          "select countrycode from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select * from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select countrycode from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select distinct countrycode from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select * from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select distinct count (*) from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select countrycode from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select count (*) from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by countrycode order by count (*) desc limit 1",
          "select countrycode from countrylanguage group by countrycode desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "How many languages are spoken on each continent?",
        "query": [
          "select language, count (*) from countrylanguage group by countrycode",
          "select count (*) from countrylanguage group by countrycode",
          "select language, count (*) from countrylanguage group by language"
        ]
      },
      {
        "question": "Which one speaks the most languages?",
        "query": [
          "select language from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select language from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select distinct language from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select language from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select distinct count (*) from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select language from countrylanguage group by language order by count (*) desc limit 1",
          "select distinct countrycode from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select distinct (language) from countrylanguage group by countrycode order by count (*) desc limit 1",
          "select language from countrylanguage group by countrycode desc limit 1",
          "select distinct count (language) from countrylanguage group by countrycode order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are the countries that speak English?",
        "query": [
          "select * from countrylanguage where language = \"English\"",
          "select * from countrylanguage where language = \"English\"",
          "select * from countrylanguage where language = \"English\"",
          "select * from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage where language = \"English\"",
          "select * from countrylanguage where language = \"English\""
        ]
      },
      {
        "question": "Which of those also speak Dutch?",
        "query": [
          "select * from countrylanguage where language = \"English\" intersect select * from countrylanguage where language = \"Dutch\"",
          "select * from countrylanguage where language = \"English\" intersect select * from countrylanguage where language = \"Dutch\"",
          "select * from countrylanguage where language = \"English\" intersect select * from countrylanguage where language = \"Dutch\"",
          "select distinct count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"Dutch\"",
          "select * from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"English\" intersect select * from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"Dutch\"",
          "select distinct count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"English\" and t1.language = \"Dutch\"",
          "select distinct count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where language = \"English\" intersect select distinct count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where language = \"Dutch\"",
          "select distinct countrycode from countrylanguage where language = \"English\" intersect select countrycode from countrylanguage where language = \"Dutch\"",
          "select count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"Dutch\"",
          "select distinct count (*) from countrylanguage where language = \"English\" intersect select distinct count (*) from countrylanguage where language = \"Dutch\""
        ]
      },
      {
        "question": "How many of them are there?",
        "query": [
          "select count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"Dutch\"",
          "select count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"Dutch\"",
          "select distinct count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"Dutch\"",
          "select distinct count (*) from countrylanguage where language = \"English\" intersect select distinct count (*) from countrylanguage where language = \"Dutch\"",
          "select count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"Dutch\"",
          "select count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"English\"",
          "select count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"English\" and language = \"Dutch\"",
          "select count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"English\"",
          "select count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"English\" and language = \"Dutch\"",
          "select distinct count (*) from countrylanguage where language = \"English\" intersect select count (*) from countrylanguage where language = \"English\" and language = \"Dutch\""
        ]
      }
    ],
    [
      {
        "question": "What are the names of countries which speak English?",
        "query": [
          "select language from countrylanguage where language = \"English\"",
          "select language from countrylanguage where language = \"English\""
        ]
      },
      {
        "question": "Of those countries, what are the names of the nations that speak French as well?",
        "query": [
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\"",
          "select t2.name from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"English\" intersect select t2.name from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"French\"",
          "select t2.name from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"English\" intersect select t2.name from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"French\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" intersect select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\"",
          "select distinct t2.name from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"English\" intersect select t2.name from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\""
        ]
      }
    ],
    [
      {
        "question": "What are the official languages of each country?",
        "query": [
          "select isofficial from countrylanguage",
          "select language from countrylanguage where isofficial = \"Y\"",
          "select language from countrylanguage where isofficial = \"Y\"",
          "select t1.isofficial from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code",
          "select isofficial from countrylanguage",
          "select language from countrylanguage where isofficial = \"t\"",
          "select language from countrylanguage where isofficial = \"t\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code",
          "select language from countrylanguage where isofficial = \"1\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code"
        ]
      },
      {
        "question": "Of those countries, give the names of the ones that have English as one of the official languages.",
        "query": [
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\""
        ]
      },
      {
        "question": "Of those, which also have French as another official language?",
        "query": [
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"French\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" and t2.language = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" and t2.language = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" and t2.language = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" and t2.language = \"French\"",
          "select distinct count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"French\""
        ]
      }
    ],
    [
      {
        "question": "In which countries is Chinese spoken?",
        "query": [
          "select countrycode from countrylanguage where language = \"Chinese\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"Chinese\"",
          "select countrycode from countrylanguage where language = \"Chinese\"",
          "select * from countrylanguage where language = \"Chinese\"",
          "select distinct countrycode from countrylanguage where language = \"Chinese\"",
          "select language from countrylanguage where language = \"Chinese\"",
          "select count (*) from countrylanguage where language = \"Chinese\"",
          "select t2.name from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where language = \"Chinese\"",
          "select countrycode from countrylanguage where language = \"China\"",
          "select countrycode from countrylanguage where language = \"China\""
        ]
      },
      {
        "question": "Which distinct continents are they in?",
        "query": [
          "select distinct t1.continent from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select distinct t1.continent from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select distinct t1.continent from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select distinct t2.continent from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"Chinese\"",
          "select distinct t2.continent from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"Chinese\"",
          "select distinct countrycode from countrylanguage where language = \"Chinese\"",
          "select distinct countrycode from countrylanguage where language = \"Chinese\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select distinct t2.continent from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"Chinese\"",
          "select distinct t1.countrycode from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"Chinese\""
        ]
      },
      {
        "question": "How many of them are there?",
        "query": [
          "select count (distinct t1.continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select distinct count (distinct t1.continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select distinct count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select count (distinct t1.continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select distinct count (t1.continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select distinct t1.continent from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select count (distinct t1.continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"",
          "select count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\""
        ]
      }
    ],
    [
      {
        "question": "What are all the different regions?",
        "query": [
          "select distinct region from country",
          "select distinct region from country",
          "select distinct region from country",
          "select distinct region from country"
        ]
      },
      {
        "question": "Which of those speak Dutch or English?",
        "query": [
          "select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\"",
          "select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\"",
          "select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\"",
          "select distinct t2.region from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"English\" or t1.language = \"Dutch\"",
          "select distinct t2.region from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"English\" or t1.language = \"Dutch\"",
          "select distinct t2.region from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language = \"English\" or t1.language = \"Dutch\"",
          "select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"English\"",
          "select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"English\"",
          "select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\"",
          "select t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\""
        ]
      }
    ],
    [
      {
        "question": "What are the official languages for each country?",
        "query": [
          "select language from countrylanguage where isofficial = \"Y\"",
          "select isofficial from countrylanguage",
          "select t1.isofficial from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code",
          "select language from countrylanguage where isofficial = \"Y\"",
          "select language from countrylanguage where isofficial = \"t\"",
          "select t1.isofficial from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code",
          "select isofficial from countrylanguage",
          "select language from countrylanguage where isofficial = \"t\""
        ]
      },
      {
        "question": "Which of these countries have English or Dutch?",
        "query": [
          "select * from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\"",
          "select countrycode from countrylanguage where language = \"English\" or language = \"Dutch\"",
          "select * from countrylanguage where language = \"English\" or language = \"Dutch\"",
          "select language from countrylanguage where isofficial = \"Y\" and language = \"English\" or language = \"Dutch\"",
          "select * from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"English\" or language = \"Dutch\"",
          "select * from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"English\" or language = \"Dutch\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"English\" or language = \"Dutch\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"English\" or language = \"Dutch\"",
          "select * from countrylanguage where language = \"English\" or language = \"Dutch\" and isofficial = \"Y\""
        ]
      }
    ],
    [
      {
        "question": "What are all the different languages used in the continent of Asia?",
        "query": [
          "select distinct language from countrylanguage where countrycode = \"Asia\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.continent = \"Asia\"",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\"",
          "select distinct language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.continent = \"Asia\"",
          "select distinct language from countrylanguage where countrycode = \"Asia\"",
          "select distinct language from countrylanguage where countrycode = \"Asia\"",
          "select distinct language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.continent = \"Asia\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t2.code = t1.countrycode where t2.continent = \"Asia\""
        ]
      },
      {
        "question": "Which one is used by the largest number of Asian countries?",
        "query": [
          "select language from countrylanguage where countrycode = \"Asia\" group by language order by count (*) desc limit 1",
          "select language from countrylanguage where countrycode = \"Asia\" group by language order by count (*) desc limit 1",
          "select distinct language from countrylanguage where countrycode = \"Asia\" group by language order by count (*) desc limit 1",
          "select distinct language from countrylanguage where countrycode = \"Asia\" group by language order by count (*) desc limit 1",
          "select language from countrylanguage where countrycode = \"Asia\" group by language order by count (*) desc limit 1",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where countrycode = \"Asia\" group by t1.language order by count (*) desc limit 1",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where countrycode = \"Asia\" group by t1.language order by count (*) desc limit 1",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where countrycode = \"Asia\" group by t1.language order by count (*) desc limit 1",
          "select distinct language from countrylanguage where countrycode = \"Asia\" group by language order by count (*) desc limit 1",
          "select distinct count (*) from countrylanguage where countrycode = \"Asia\" group by language order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Which countries have republics as their form of government?",
        "query": [
          "select * from country where governmentform = \"Republic\"",
          "select * from country where governmentform = \"Republic\"",
          "select * from country where governmentform = \"republic\"",
          "select * from country where governmentform = \"republic\"",
          "select distinct country.name from country where governmentform = \"Republic\"",
          "select * from country where governmentform = \"Republic\"",
          "select * from country where governmentform = \"Republic\"",
          "select distinct country.name from country where governmentform = \"republic\""
        ]
      },
      {
        "question": "Which language is spoken by only one of those countries?",
        "query": [
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.governmentform = \"Republic\" group by t1.language having count (*) = 1",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.governmentform = \"Republic\" group by t2.language having count (*) = 1",
          "select language from countrylanguage group by language having count (*) = 1",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t2.language having count (*) = 1",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.code having count (*) = 1",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t2.language having count (*) = 1",
          "select language from countrylanguage group by language having count (*) = 1",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.code having count (*) = 1",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.governmentform = \"Republic\" group by t1.language having count (*) = 1",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.governmentform = \"Republic\" group by t2.language having count (*) = 1"
        ]
      }
    ],
    [
      {
        "question": "What are the names of all the cities that use English?",
        "query": [
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\"",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\"",
          "select t2.name from countrylanguage as t1 join city as t2 on t1.countrycode = t2.id where language = \"English\"",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\"",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\"",
          "select t2.name from countrylanguage as t1 join city as t2 on t1.countrycode = t2.id where language = \"English\""
        ]
      },
      {
        "question": "Which of those has the largest population?",
        "query": [
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" order by population desc limit 1",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" order by population desc limit 1",
          "select distinct t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" order by population desc limit 1",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" order by t1.population desc limit 1",
          "select distinct t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" order by t1.population desc limit 1",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" order by t1.population desc limit 1",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" order by population desc limit 1",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" group by t1.name order by population desc limit 1",
          "select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where language = \"English\" group by t1.name order by population desc limit 1",
          "select distinct t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where t2.language = \"English\" order by population desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are the names, population, and life expectancy for all the countries in Asia?",
        "query": [
          "select name, population, lifeexpectancy from country where continent = \"Asia\"",
          "select name, population, lifeexpectancy from country where continent = \"Asia\"",
          "select name, population, lifeexpectancy from country where continent = \"Asia\"",
          "select distinct name, population, lifeexpectancy from country where continent = \"Asia\"",
          "select distinct country.name, country.population, country.lifeexpectancy from country where continent = \"Asia\"",
          "select name, population, lifeexpectancy from country where continent = \"Asia\"",
          "select distinct * from country where continent = \"Asia\"",
          "select distinct country.name, country.population, lifeexpectancy from country where continent = \"Asia\"",
          "select name, population, lifeexpectancy from country where continent = \"Asia\""
        ]
      },
      {
        "question": "Of those, which belong to the country with the largest surface area?",
        "query": [
          "select name from country where continent = \"Asia\" order by surfacearea desc limit 1",
          "select name, population, lifeexpectancy from country where continent = \"Asia\" order by surfacearea desc limit 1",
          "select name from country where continent = \"Asia\" order by surfacearea desc limit 1",
          "select name, population, lifeexpectancy from country where continent = \"Asia\" order by surfacearea desc limit 1",
          "select name from country where continent = \"Asia\" order by surfacearea desc limit 1",
          "select distinct name from country where continent = \"Asia\" order by surfacearea desc limit 1",
          "select name from country where continent = \"Asia\" group by name order by surfacearea desc limit 1",
          "select name, population, lifeexpectancy from country where continent = \"Asia\" order by surfacearea desc limit 1",
          "select name, population, lifeexpectancy from country where continent = \"Asia\" group by name order by surfacearea desc limit 1",
          "select name, population from country where continent = \"Asia\" order by surfacearea desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are the official languages of each country?",
        "query": [
          "select isofficial from countrylanguage",
          "select language from countrylanguage where isofficial = \"Y\"",
          "select language from countrylanguage where isofficial = \"Y\"",
          "select t1.isofficial from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code",
          "select isofficial from countrylanguage",
          "select language from countrylanguage where isofficial = \"t\"",
          "select language from countrylanguage where isofficial = \"t\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code",
          "select language from countrylanguage where isofficial = \"1\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code"
        ]
      },
      {
        "question": "Which countries do not have English as the official language?",
        "query": [
          "select * from country where code not in (select countrycode from countrylanguage where isofficial = \"English\")",
          "select * from country except select * from countrylanguage where language = \"English\"",
          "select * from country where code not in (select countrycode from countrylanguage where isofficial = \"English\")",
          "select * from country where code not in (select countrycode from countrylanguage where language = \"English\")",
          "select * from country except select * from countrylanguage where language = \"English\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language!= \"English\"",
          "select * from country where code not in (select countrycode from countrylanguage where isofficial = \"Y\")"
        ]
      },
      {
        "question": "In those countries, what is the average life expectancy?",
        "query": [
          "select avg (lifeexpectancy) from country where code not in (select countrycode from countrylanguage where isofficial = \"English\")",
          "select avg (lifeexpectancy) from country where code not in (select countrycode from countrylanguage where isofficial = \"English\")",
          "select avg (lifeexpectancy) from country where code not in (select countrycode from countrylanguage where isofficial = \"English\")",
          "select distinct avg (lifeexpectancy) from country where code not in (select countrycode from countrylanguage where isofficial = \"English\")",
          "select distinct lifeexpectancy from country where code not in (select countrycode from countrylanguage where isofficial = \"English\")",
          "select distinct count (*) from country where code not in (select countrycode from countrylanguage where isofficial = \"English\")",
          "select avg (lifeexpectancy) from country where name not in (select countrycode from countrylanguage where isofficial = \"English\")"
        ]
      }
    ],
    [
      {
        "question": "What are the names of each country that does not speak English?",
        "query": [
          "select distinct language from countrylanguage where language!= \"English\"",
          "select distinct language from countrylanguage where language!= \"English\""
        ]
      },
      {
        "question": "How many people live in those countries?",
        "query": [
          "select distinct t1.population from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language!= \"English\"",
          "select distinct t2.population from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language!= \"English\"",
          "select distinct count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language!= \"English\"",
          "select distinct t1.population from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language not = \"English\"",
          "select distinct t1.population from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language!= \"English\"",
          "select distinct count (*) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language!= \"English\"",
          "select distinct count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language!= \"English\"",
          "select distinct t1.population from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language not in \"English\"",
          "select distinct t2.population from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t1.language not = \"English\"",
          "select distinct count (*) from countrylanguage where language!= \"English\""
        ]
      }
    ],
    [
      {
        "question": "Which country has a head of state named Beatrix?",
        "query": [
          "select * from country where headofstate = \"Beatrix\"",
          "select * from country where headofstate = \"Beatrix\"",
          "select * from country where headofstate = \"Beatrix\"",
          "select * from country where headofstate = \"Beatrix\"",
          "select distinct country.name from country where headofstate = \"Beatrix\"",
          "select distinct * from country where headofstate = \"Beatrix\"",
          "select distinct headofstate from country where headofstate = \"Beatrix\"",
          "select * from country where headofstate = \"Beatrice\"",
          "select * from country where headofstate = \"Beatix\"",
          "select * from country where headofstate = \"Beatix\""
        ]
      },
      {
        "question": "What languages are spoken in that country?",
        "query": [
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.headofstate = \"Beatrix\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.headofstate = \"Beatrix\"",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\"",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.headofstate = \"Beatrix\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\"",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.headofstate = \"Beatrix\"",
          "select language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.headofstate = \"Beatrix\""
        ]
      },
      {
        "question": "Which of those languages is the official one?",
        "query": [
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = \"Y\"",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = \"Y\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = 1",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = \"t\"",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = \"1\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = \"1\"",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = \"t\"",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = 1",
          "select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = 1",
          "select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = \"Beatrix\" and t2.isofficial = \"T\""
        ]
      }
    ],
    [
      {
        "question": "What are the names of all the countries?",
        "query": [
          "select name from country",
          "select name from country",
          "select distinct name from country",
          "select name from country",
          "select distinct name from country"
        ]
      },
      {
        "question": "What are the names of those countries that were founded after 1930?",
        "query": [
          "select name from country where indepyear > 1930",
          "select name from country where indepyear > 1930",
          "select name from country where indepyear > 1930",
          "select distinct name from country where indepyear > 1930",
          "select name from country where lifeexpectancy > 1930",
          "select name from country where indepyear > 1929",
          "select distinct t1.name from country as t1 where t1.indepyear > 1930",
          "select t1.name from country as t1 where t1.indepyear > 1930"
        ]
      },
      {
        "question": "For those countries, how many unique official languages are spoken in total?",
        "query": [
          "select count (distinct t1.name) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.indepyear > 1930",
          "select count (distinct t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.indepyear > 1930",
          "select distinct count (t1.name) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.indepyear > 1930",
          "select distinct count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.indepyear > 1930",
          "select distinct count (t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.indepyear > 1930",
          "select count (*) from country where indepyear > 1930",
          "select distinct count (*) from country where indepyear > 1930"
        ]
      }
    ],
    [
      {
        "question": "What are all the information about European countries?",
        "query": [
          "select * from country where continent = \"Europe\"",
          "select * from country where continent = \"Europe\"",
          "select * from country where continent = \"European\"",
          "select * from country where name = \"European\"",
          "select * from country where continent = \"Europe\"",
          "select * from country where continent = \"European\"",
          "select distinct * from country where continent = \"Europe\"",
          "select * from country where name = \"Europe\"",
          "select * from country where name = \"European\"",
          "select * from country where continent = \"EU\""
        ]
      },
      {
        "question": "Of those countries, What is the minimum surface area?",
        "query": [
          "select min (surfacearea) from country where continent = \"Europe\"",
          "select min (surfacearea) from country where continent = \"Europe\"",
          "select distinct min (surfacearea) from country where continent = \"Europe\"",
          "select max (surfacearea) from country where continent = \"Europe\"",
          "select distinct max (surfacearea) from country where continent = \"Europe\"",
          "select distinct (min (surfacearea)) from country where continent = \"Europe\"",
          "select max (surfacearea) from country where continent = \"Europe\"",
          "select distinct (surfacearea) from country where continent = \"Europe\" order by surfacearea asc limit 1"
        ]
      },
      {
        "question": "What are the countries that have a greater surface area than that?",
        "query": [
          "select * from country where surfacearea > (select min (surfacearea) from country where continent = \"Europe\")",
          "select * from country where surfacearea > (select min (surfacearea) from country where continent = \"Europe\")",
          "select * from country where surfacearea > (select min (surfacearea) from country where continent = \"Europe\")",
          "select name from country where surfacearea > (select min (surfacearea) from country where continent = \"Europe\")",
          "select distinct count (*) from country where surfacearea > (select min (surfacearea) from country where continent = \"Europe\")",
          "select name from country where surfacearea > (select min (surfacearea) from country where continent = \"Europe\")",
          "select * from country where continent = \"Europe\" and surfacearea > (select min (surfacearea) from country where continent = \"Europe\")",
          "select * from country where surfacearea > (select max (surfacearea) from country where continent = \"Europe\")",
          "select distinct t1.name from country as t1 join city as t2 on t1.code = t2.countrycode where surfacearea > (select min (surfacearea) from country where continent = \"Europe\")",
          "select distinct t1.name from country as t1 join city as t2 on t1.code = t2.id where surfacearea > (select min (surfacearea) from country where continent = \"Europe\")"
        ]
      }
    ],
    [
      {
        "question": "What is the maximum population of a country in Asia?",
        "query": [
          "select max (population) from country where continent = \"Asia\"",
          "select max (population) from country where continent = \"Asia\"",
          "select distinct max (population) from country where continent = \"Asia\"",
          "select max (population) from country where continent = \"Asia\"",
          "select max (population) from country where region = \"Asia\"",
          "select max (population) from country where name = \"Asia\"",
          "select distinct country.population from country where continent = \"Asia\"",
          "select max (population) from country where continent = \"Asia\""
        ]
      },
      {
        "question": "Which countries in Africa have a population smaller than that?",
        "query": [
          "select * from country where continent = \"Africa\" and population < (select max (population) from country where continent = \"Asia\")",
          "select name from country where continent = \"Africa\" and population < (select max (population) from country where continent = \"Asia\")",
          "select * from country where continent = \"Africa\" and population < (select max (population) from country where continent = \"Asia\")",
          "select t1.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.population < (select max (population) from country where continent = \"Asia\")",
          "select count (*) from country where continent = \"Africa\" and population < (select max (population) from country where continent = \"Asia\")",
          "select name from country where continent = \"Africa\" and population < (select max (population) from country where continent = \"Asia\")",
          "select * from country where continent = \"Africa\" and population < (select max (population) from country where continent = \"Asia\")",
          "select distinct t1.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.population < (select max (population) from country where continent = \"Asia\")",
          "select t1.name from country as t1 join city as t2 on t1.code = t2.id where t2.population < (select max (population) from country where continent = \"Asia\")",
          "select t1.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.population < (select max (population) from country where continent = \"Africa\")"
        ]
      }
    ],
    [
      {
        "question": "What is the smallest population of a country in Africa?",
        "query": [
          "select min (population) from country where continent = \"Africa\"",
          "select min (population) from country where continent = \"Africa\"",
          "select max (population) from country where continent = \"Africa\"",
          "select distinct min (population) from country where continent = \"Africa\"",
          "select population from country where continent = \"Africa\" order by population asc limit 1",
          "select max (population) from country where continent = \"Africa\"",
          "select min (population) from country where name = \"Africa\"",
          "select distinct population from country where continent = \"Africa\" order by population asc limit 1",
          "select distinct max (population) from country where continent = \"Africa\"",
          "select min (population) from country where name = \"Africa\""
        ]
      },
      {
        "question": "Which Asian countries have a greater population than that?",
        "query": [
          "select * from country where continent = \"Asia\" and population > (select min (population) from country where continent = \"Africa\")",
          "select * from country where continent = \"Africa\" and population > (select min (population) from country where continent = \"Africa\")",
          "select * from country where continent = \"Asia\" and population > (select min (population) from country where continent = \"Africa\")",
          "select * from country where continent = \"Asian\" and population > (select min (population) from country where continent = \"Africa\")",
          "select * from country where continent = \"Africa\" and population > (select min (population) from country where continent = \"Africa\")",
          "select * from country where continent = \"Asian\" and population > (select min (population) from country where continent = \"Africa\")",
          "select * from country where continent = \"Asia\" and population > (select min (population) from country where continent = \"Africa\")",
          "select name from country where continent = \"Asia\" and population > (select min (population) from country where continent = \"Africa\")",
          "select distinct count (*) from country where continent = \"Asia\" and population > (select min (population) from country where continent = \"Africa\")",
          "select * from country where continent = \"Asia\" and population > (select max (population) from country where continent = \"Africa\")"
        ]
      }
    ],
    [
      {
        "question": "What are the country codes of all the countries?",
        "query": [
          "select distinct countrycode from countrylanguage",
          "select countrycode from countrylanguage",
          "select distinct countrycode from city",
          "select distinct countrycode from city",
          "select code from country",
          "select countrycode from city"
        ]
      },
      {
        "question": "Of those countries, give the country codes for those which do not speak English.",
        "query": [
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select countrycode from countrylanguage except select countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select distinct countrycode from countrylanguage except select countrycode from countrylanguage where language = \"English\"",
          "select countrycode from countrylanguage where language!= \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select countrycode from countrylanguage where language!= \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select countrycode from countrylanguage except select countrycode from countrylanguage where language = \"English\""
        ]
      }
    ],
    [
      {
        "question": "What are the country codes of all the countries?",
        "query": [
          "select distinct countrycode from countrylanguage",
          "select countrycode from countrylanguage",
          "select distinct countrycode from city",
          "select distinct countrycode from city",
          "select code from country",
          "select countrycode from city"
        ]
      },
      {
        "question": "Of those, which do not speak English?",
        "query": [
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select distinct countrycode from countrylanguage except select countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select distinct countrycode from countrylanguage except select distinct countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage except select countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select countrycode from countrylanguage except select countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage except select countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\""
        ]
      }
    ],
    [
      {
        "question": "What are the country codes for countries which are not republics?",
        "query": [
          "select distinct countrycode from countrylanguage where isofficial = \"F\"",
          "select distinct countrycode from countrylanguage where isofficial = \"No\"",
          "select distinct countrycode from countrylanguage where isofficial = \"\""
        ]
      },
      {
        "question": "Of those, which do not speak English?",
        "query": [
          "select distinct countrycode from countrylanguage where language!= \"English\" and isofficial = \"F\"",
          "select distinct countrycode from countrylanguage where language!= \"English\"",
          "select distinct countrycode from countrylanguage where isofficial = \"F\" and language!= \"English\"",
          "select distinct countrycode from countrylanguage where isofficial = \"F\" except select countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\" and isofficial = \"F\"",
          "select distinct countrycode from countrylanguage where language not in (select distinct language from countrylanguage where isofficial = \"F\")",
          "select distinct countrycode from countrylanguage where language not in (select language from countrylanguage where isofficial = \"F\")",
          "select distinct countrycode from countrylanguage where isofficial = \"F\" and language!= \"English\"",
          "select distinct countrycode from countrylanguage except select distinct countrycode from countrylanguage where language = \"English\"",
          "select distinct countrycode from countrylanguage where language!= \"English\""
        ]
      }
    ],
    [
      {
        "question": "What are the names of the countries where English is the official language?",
        "query": [
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and t2.isofficial = 1",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\""
        ]
      },
      {
        "question": "What are the names of the countries in Europe that are not one of those?",
        "query": [
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select name from country where continent = \"Europe\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select name from country where continent = \"Europe\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\"",
          "select distinct name from country where continent = \"Europe\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" and t2.isofficial = \"English\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"English\" except select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\""
        ]
      },
      {
        "question": "What are the names of the cities in those countries?",
        "query": [
          "select t1.name, t2.name from country as t1 join city as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name, t2.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"London\"",
          "select t1.name, t2.population from country as t1 join city as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name, t2.population from country as t1 join city as t2 on t1.code = t2.countrycode where t2.population = 0",
          "select t1.name, t2.name from country as t1 join city as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name, t2.name from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"English\"",
          "select t1.name, t2.population from country as t1 join city as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name, t2.population from country as t1 join city as t2 on t1.code = t2.countrycode where t2.population = \"0\"",
          "select t1.name, t2.population from country as t1 join city as t2 on t1.code = t2.countrycode where t1.continent = \"Europe\" except select t1.name, t2.population from country as t1 join city as t2 on t1.code = t2.countrycode where t2.population = \"English\""
        ]
      }
    ],
    [
      {
        "question": "What are the countries in Asia where Chinese is spoken?",
        "query": [
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\" and t1.continent = \"Asia\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\" and t1.continent = \"Asia\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"China\" and t2.language = \"Chinese\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where language = \"Chinese\" and t1.continent = \"Asia\""
        ]
      },
      {
        "question": "Of those, which have Chinese as the official language?",
        "query": [
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"Y\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"Y\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"Y\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"T\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"1\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"True\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"T\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"1\"",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"Yes\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"T\""
        ]
      },
      {
        "question": "What are the different cities in those countries?",
        "query": [
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"Y\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"Y\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"Y\"",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" and t2.language = \"Chinese\" and t2.isofficial = \"Y\" group by t1.name"
        ]
      }
    ],
    [
      {
        "question": "Which country has the smallest population?",
        "query": [
          "select * from country order by population asc limit 1",
          "select * from country order by population asc limit 1",
          "select name from country order by population asc limit 1",
          "select name from country order by population asc limit 1",
          "select * from country order by population limit 1",
          "select * from country order by population desc limit 1",
          "select distinct name from country order by population asc limit 1",
          "select * from country order by population limit 1",
          "select distinct country.name from country order by population limit 1"
        ]
      },
      {
        "question": "What is its name, independence year, and surface area?",
        "query": [
          "select name, indepyear, surfacearea from country order by population asc limit 1",
          "select name, indepyear, surfacearea from country order by population asc limit 1",
          "select name from country order by population asc limit 1",
          "select name, indepyear, surfacearea from country order by population asc limit 1",
          "select name, lifeexpectancy, surfacearea from country order by population asc limit 1",
          "select name, surfacearea, indepyear from country order by population asc limit 1",
          "select name, headofstate, surfacearea from country order by population asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What is the country with the largest surface area?",
        "query": [
          "select * from country order by surfacearea desc limit 1",
          "select * from country order by surfacearea desc limit 1",
          "select name from country order by surfacearea desc limit 1",
          "select * from country order by surfacearea asc limit 1",
          "select * from country order by surfacearea asc limit 1",
          "select * from country order by surfacearea desc 1"
        ]
      },
      {
        "question": "What is its population, name and leader?",
        "query": [
          "select population, name, headofstate from country order by surfacearea desc limit 1",
          "select population, name, headofstate from country order by surfacearea desc limit 1",
          "select population, name, headofstate from country order by surfacearea desc limit 1",
          "select t1.population, t1.name, t1.headofstate from country as t1 order by surfacearea desc limit 1",
          "select population from country order by surfacearea desc limit 1",
          "select population, name from country order by surfacearea desc limit 1",
          "select max (population), name, headofstate from country order by surfacearea desc limit 1",
          "select population from country order by surfacearea desc limit 1",
          "select name, population from country order by surfacearea desc limit 1",
          "select population, name from country order by surfacearea desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are the names of the countries?",
        "query": [
          "select name from country",
          "select name from country",
          "select distinct name from country",
          "select name from country"
        ]
      },
      {
        "question": "Which of them speak at least three languages?",
        "query": [
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.code having count (*) >= 3",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t2.countrycode having count (*) >= 3",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.code having count (*) >= 3",
          "select t2.name from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code group by t1.countrycode having count (*) >= 3",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (language) >= 3",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) = 3",
          "select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 2"
        ]
      },
      {
        "question": "Also, how many languages are spoken in each of those countries?",
        "query": [
          "select t1.name, count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select t1.name, count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select distinct t1.name, count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select t1.name, count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select t1.name, count (t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select distinct t1.name, count (t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select distinct count (t2.language), t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select distinct count (*), t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select count (*), t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 3",
          "select t1.name, count (*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count (*) >= 2"
        ]
      }
    ],
    [
      {
        "question": "What is the average city population for each city?",
        "query": [
          "select avg (population) from city",
          "select avg (population) from city",
          "select avg (population) from city",
          "select distinct avg (population) from city",
          "select distinct city.population from city",
          "select distinct population from city",
          "select distinct t1.population from city as t1",
          "select distinct count (*) from city",
          "select population from city group by name",
          "select distinct name, population from city"
        ]
      },
      {
        "question": "For each district, count how many cities have a population greater than the average.",
        "query": [
          "select count (*) from city where population > (select avg (population) from city)",
          "select count (*) from city group by district",
          "select district, count (*) from city where population > (select avg (population) from city)",
          "select district, count (*) from city group by district",
          "select distinct count (*) from city where population > (select avg (population) from city)",
          "select count (*), district from city where population > (select avg (population) from city)",
          "select count (*) from city where population > (select avg (population) from city)",
          "select count (*) from city where population > (select avg (population) from city) group by district",
          "select distinct count (*) from city where population > (select avg (population) from city)",
          "select count (*), district from city group by district"
        ]
      }
    ],
    [
      {
        "question": "The countries with which government form have an average life expectancy greater than age 72?",
        "query": [
          "select * from country group by governmentform having avg (lifeexpectancy) > 72",
          "select * from country group by governmentform having avg (lifeexpectancy) > 72",
          "select governmentform from country group by governmentform having avg (lifeexpectancy) > 72",
          "select governmentform from country group by governmentform having avg (lifeexpectancy) > 72",
          "select distinct governmentform from country group by governmentform having avg (lifeexpectancy) > 72",
          "select distinct governmentform from country group by governmentform having avg (lifeexpectancy) > 72",
          "select * from country where lifeexpectancy > 72 group by governmentform",
          "select * from country where lifeexpectancy > 72 group by governmentform",
          "select distinct count (*) from country where lifeexpectancy > 72 group by governmentform",
          "select * from country where lifeexpectancy > 72"
        ]
      },
      {
        "question": "For those, list the total population and government form name.",
        "query": [
          "select sum (population), governmentform from country group by governmentform having avg (lifeexpectancy) > 72",
          "select sum (population), governmentform from country group by governmentform having avg (lifeexpectancy) > 72",
          "select sum (population), governmentform from country group by governmentform having avg (lifeexpectancy) > 72",
          "select sum (population), t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having avg (lifeexpectancy) > 72",
          "select sum (population), headofstate from country group by governmentform having avg (lifeexpectancy) > 72",
          "select sum (population), name from country group by name having avg (lifeexpectancy) > 72",
          "select sum (population), headofstate from country group by governmentform having avg (lifeexpectancy) > 72",
          "select distinct sum (population), governmentform from country group by governmentform having avg (lifeexpectancy) > 72",
          "select sum (population), headofstate from country group by headofstate having avg (lifeexpectancy) > 72",
          "select sum (population), headofstate from country group by headofstate having avg (lifeexpectancy) > 72"
        ]
      }
    ],
    [
      {
        "question": "Which continents have an average life expectancy less than age 72?",
        "query": [
          "select continent from country group by continent having avg (lifeexpectancy) < 72",
          "select distinct continent from country group by continent having avg (lifeexpectancy) < 72",
          "select continent from country group by continent having avg (lifeexpectancy) < 72",
          "select distinct continent from country group by continent having avg (lifeexpectancy) < 72",
          "select continent from country group by continent having avg (lifeexpectancy) < 72",
          "select * from country group by continent having avg (lifeexpectancy) < 72",
          "select distinct continent from country where lifeexpectancy < 72",
          "select distinct continent from country where lifeexpectancy < 72 group by continent",
          "select continent from country group by continent having avg (lifeexpectancy) <72"
        ]
      },
      {
        "question": "Give their average life expectancy and total population.",
        "query": [
          "select avg (lifeexpectancy), sum (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select avg (lifeexpectancy), sum (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select continent, avg (lifeexpectancy), sum (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select avg (lifeexpectancy), sum (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select distinct continent, avg (lifeexpectancy), sum (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select avg (lifeexpectancy), avg (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select distinct avg (lifeexpectancy), sum (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select avg (lifeexpectancy), avg (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select continent, avg (lifeexpectancy), avg (population) from country group by continent having avg (lifeexpectancy) < 72",
          "select distinct continent, avg (lifeexpectancy), avg (population) from country group by continent having avg (lifeexpectancy) < 72"
        ]
      }
    ],
    [
      {
        "question": "What are the countries with the top 5 largest surface areas?",
        "query": [
          "select * from country order by surfacearea desc limit 5",
          "select * from country order by surfacearea desc limit 5",
          "select name from country order by surfacearea desc limit 5",
          "select name from country order by surfacearea desc limit 5",
          "select * from country order by surfacearea asc limit 5",
          "select * from country order by surfacearea desc desc limit 5",
          "select * from country order by surfacearea asc limit 5",
          "select * from country order by surfacearea desc limit 1",
          "select * from country order by surfacearea desc limit 5 desc"
        ]
      },
      {
        "question": "What are the surface areas and names of those countries?",
        "query": [
          "select surfacearea, name from country order by surfacearea desc limit 5",
          "select surfacearea, name from country order by surfacearea desc limit 5",
          "select surfacearea, name from country order by surfacearea desc limit 5",
          "select distinct t1.surfacearea, t1.name from country as t1 order by surfacearea desc limit 5",
          "select max (surfacearea), name from country order by surfacearea desc limit 5",
          "select distinct surfacearea, name from country order by surfacearea desc limit 5",
          "select distinct name, surfacearea from country order by surfacearea desc limit 5",
          "select name, surfacearea from country order by surfacearea desc limit 5",
          "select distinct surfacearea, name from country order by surfacearea desc limit 5",
          "select surfaceArea, name from country order by surfaceArea desc limit 5"
        ]
      }
    ],
    [
      {
        "question": "Order the countries by descending population size.",
        "query": [
          "select * from country order by population desc",
          "select * from country order by population",
          "select * from country order by population",
          "select * from country order by population asc"
        ]
      },
      {
        "question": "Give the names of the 3 countries which have the most.",
        "query": [
          "select name from country order by population desc limit 3",
          "select name from country order by population desc limit 3",
          "select distinct name from country order by population desc limit 3",
          "select t1.name from country as t1 order by population desc limit 3",
          "select distinct name from country order by population desc limit 3",
          "select distinct count (*) from country order by population desc limit 3",
          "select headofstate from country order by population desc limit 3",
          "select t1.name from country as t1 order by population desc limit 3",
          "select * from country order by population desc limit 3",
          "select distinct (name) from country order by population desc limit 3"
        ]
      }
    ],
    [
      {
        "question": "Order the countries by increasing population.",
        "query": [
          "select from country order by population",
          "select from country order by population desc",
          "select * from country order by population",
          "select distinct order by population from country",
          "select distinct name from country order by population",
          "select distinct population from country order by population",
          "select distinct * from country order by population"
        ]
      },
      {
        "question": "Give the names of the 3 countries with the lowest.",
        "query": [
          "select distinct name from country order by population asc",
          "select distinct t1.name from country as t1 where t1.population = (select min (population) from country)",
          "select distinct t1.name from country as t1 where population = (select min (population) from country)",
          "select distinct name from country order by population asc limit 1",
          "select distinct t1.name, t2.name, t3.name from country as t1 join country as t2 on t1.code = t2.code join country as t3 on t1.code = t3.code order by t1.population",
          "select distinct t1.name from country as t1 order by t1.population asc",
          "select distinct t1.name, t2.name, t3.name from country as t1 join country as t2 on t1.code = t2.code join country as t3 on t1.code = t3.code order by t1.population asc",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode order by t1.population asc limit 1",
          "select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode order by t1.population asc",
          "select distinct t2.name from country as t1 join city as t2 on t1.code = t2.countrycode order by t1.population asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are the countries in the continent of Asia?",
        "query": [
          "select * from country where continent = \"Asia\"",
          "select * from country where continent = \"Asia\"",
          "select * from country where continent = \"Asia\"",
          "select distinct * from country where continent = \"Asia\"",
          "select * from country where continent = \"Asia\"",
          "select distinct count (*) from country where continent = \"Asia\"",
          "select * from country where continent = \"Asia\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from country where continent = \"Asia\"",
          "select count (*) from country where continent = \"Asia\"",
          "select distinct count (*) from country where continent = \"Asia\"",
          "select count (*) from country where continent = \"Asia\"",
          "select count (*) from country where continent = \"Asia\""
        ]
      }
    ],
    [
      {
        "question": "Which countries are in the continent of Europe?",
        "query": [
          "select * from country where continent = \"Europe\"",
          "select * from country where continent = \"Europe\"",
          "select * from country where continent = \"Europe\"",
          "select distinct * from country where continent = \"Europe\"",
          "select * from country where continent = \"Europe\"",
          "select distinct count (*) from country where continent = \"Europe\"",
          "select distinct country.name from country where continent = \"Europe\"",
          "select * from country where continent = \"EU\"",
          "select * from country where continent = \"EU\""
        ]
      },
      {
        "question": "Of those, what are the names of those that have a population of 80000?",
        "query": [
          "select name from country where continent = \"Europe\" and population = 80000",
          "select name from country where continent = \"Europe\" and population = \"80000\"",
          "select name from country where continent = \"Europe\" and population = 80000",
          "select name from country where continent = \"Europe\" and population = \"80000\"",
          "select distinct t2.name from country as t1 join city as t2 on t1.code = t2.id where t1.continent = \"Europe\" and t2.population = 80000",
          "select t2.name from country as t1 join city as t2 on t1.code = t2.id where t1.continent = \"Europe\" and t2.population = 80000",
          "select name from country where continent = \"Europe\" and population = 80000",
          "select name from country where continent = \"Europe\" and population = \"80000\"",
          "select t2.name from country as t1 join city as t2 on t1.code = t2.id where t1.continent = \"Europe\" and t1.population = 80000",
          "select distinct t2.name from country as t1 join city as t2 on t1.code = t2.id where t1.continent = \"Europe\" and t1.population = 80000"
        ]
      }
    ],
    [
      {
        "question": "What countries are in North America?",
        "query": [
          "select * from country where continent = \"North America\"",
          "select * from country where continent = \"North America\"",
          "select * from country where continent = \"North America\"",
          "select * from country where continent = \"North America\"",
          "select distinct name from country where continent = \"North America\"",
          "select * from country where region = \"North America\"",
          "select distinct count (*) from country where continent = \"North America\"",
          "select distinct country.name from country where continent = \"North America\"",
          "select * from country where name = \"North America\""
        ]
      },
      {
        "question": "Of those, which have surface area greater than 3000?",
        "query": [
          "select * from country where continent = \"North America\" and surfacearea > 3000",
          "select * from country where continent = \"North America\" and surfacearea > 3000",
          "select * from country where continent = \"North America\" and surfacearea > 3000",
          "select distinct count (*) from country where continent = \"North America\" and surfacearea > 3000",
          "select distinct * from country where continent = \"North America\" and surfacearea > 3000",
          "select count (*) from country where continent = \"North America\" and surfacearea > 3000",
          "select * from country where continent = \"North America\" and surfacearea > 30000",
          "select * from country where continent = \"North America\" and surfacearea > 30000"
        ]
      },
      {
        "question": "What is the total population and average surface area of those countries?",
        "query": [
          "select sum (population), avg (surfacearea) from country where continent = \"North America\" and surfacearea > 3000",
          "select sum (population), avg (surfacearea) from country where continent = \"North America\" and surfacearea > 3000",
          "select sum (population), avg (surfacearea) from country where continent = \"North America\" and surfacearea > 3000",
          "select distinct sum (population), avg (surfacearea) from country where continent = \"North America\" and surfacearea > 3000",
          "select sum (population), sum (surfacearea) from country where continent = \"North America\" and surfacearea > 3000",
          "select sum (population), sum (surfacearea) from country where continent = \"North America\" and surfacearea > 3000",
          "select sum (population), sum (surfacearea) from country where continent = \"North America\" and surfacearea > 3000",
          "select distinct sum (population), sum (surfacearea) from country where continent = \"North America\" and surfacearea > 3000",
          "select sum (population), avg (surfacearea) from country where continent = \"North America\"",
          "select sum (population), avg (surfacearea) from country where continent = \"North America\" and surfacearea > 3000"
        ]
      }
    ],
    [
      {
        "question": "What are the names of all the cities?",
        "query": [
          "select name from city",
          "select name from city",
          "select distinct name from city",
          "select name from city",
          "select distinct city.name from city"
        ]
      },
      {
        "question": "Which of those have a population between 160000 and 900000?",
        "query": [
          "select name from city where population between 160000 and 900000",
          "select name from city where population between 160000 and 900000",
          "select name from city where population between 160000 and 900000",
          "select distinct name from city where population between 160000 and 900000",
          "select name from city where population between 160000 and 9000",
          "select name from city where population between 160000 and 9000",
          "select name from city where population between 160000 and 9000000",
          "select name from city where population between 160000 and 900000"
        ]
      }
    ],
    [
      {
        "question": "What are the different languages?",
        "query": [
          "select distinct language from countrylanguage",
          "select distinct language from countrylanguage",
          "select distinct language from countrylanguage",
          "select distinct language from countrylanguage",
          "select language from countrylanguage",
          "select distinct language from countrylanguage group by language",
          "select language from countrylanguage group by language"
        ]
      },
      {
        "question": "Which one is spoken in the most countries?",
        "query": [
          "select language from countrylanguage group by language order by count (*) desc limit 1",
          "select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code group by t1.language order by count (*) desc limit 1",
          "select language from countrylanguage group by language order by count (*) desc limit 1",
          "select distinct language from countrylanguage group by language order by count (*) desc limit 1",
          "select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code group by t1.language order by count (*) desc limit 1",
          "select distinct count (*) from countrylanguage group by language order by count (*) desc limit 1",
          "select distinct language from countrylanguage group by language order by count (*) desc limit 1",
          "select t1.language from countrylanguage as t1 group by t1.language order by count (*) desc limit 1",
          "select language from countrylanguage group by language order by count (*) desc limit 1",
          "select t1.language from countrylanguage as t1 join country as t2 on t2.code = t1.countrycode group by t1.language order by count (*) desc limit 1"
        ]
      }
    ]
  ],
  "tvshow": [
    [
      {
        "question": "Tell me\ufeff the director of the cartoon named \"Day of the Dark Knight!\".",
        "query": [
          "select directed_by from cartoon where title = \"Day of the Dark Knight!\"",
          "select directed_by from cartoon where title = \"Day of the Dark Knight!\"",
          "select directed_by from cartoon where title = \"Day of the Dark Knight!\"",
          "select directed_by from cartoon where title = \"Day of the Dark Knight!\"",
          "select directed_by from cartoon where title = \"Day of the Dark Knight!\"",
          "select directed_by from cartoon where title = \"Day of the Dark Knight!\"",
          "select directed_by from cartoon where title = \"Day of the Dark Knight\"",
          "select directed_by from cartoon where title = \"Day of the Dark Knight\"",
          "select directed_by from cartoon where title = \"Day of the Dark Knight!\"",
          "select distinct directed_by from cartoon where title = \"Day of the Dark Knight!\""
        ]
      },
      {
        "question": "What is the channel of this cartoon?",
        "query": [
          "select channel from cartoon where title = \"Day of the Dark Knight!\"",
          "select channel from cartoon where title = \"Day of the Dark Knight!\"",
          "select channel from cartoon where title = \"Day of the Dark Knight!\"",
          "select channel from cartoon where title = \"Day of the Dark Knight!\"",
          "select channel from cartoon where title = \"Day of the Dark Knight!\"",
          "select channel from cartoon where title = \"Day of the Dark Knight!\"",
          "select channel from cartoon where title = \"Day of the Dark Knight!\""
        ]
      },
      {
        "question": "Give me the titles of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\"?",
        "query": [
          "select title from cartoon where directed_by = \"Ben Jones\" or directed_by = \"Brandon Vietti\"",
          "select title from cartoon where directed_by = \"Ben Jones\" or directed_by = \"Brandon Vietti\"",
          "select title from cartoon where directed_by = \"Brandon Vietti\" or directed_by = \"Ben Jones\"",
          "select title from cartoon where directed_by = \"Brandon Vietti\" or directed_by = \"Ben Jones\"",
          "select distinct t1.title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Ben Jones\" or t1.directed_by = \"Brandon Vietti\"",
          "select title from cartoon where directed_by = \"Ben Jones\" or directed_by = \"Brandon Vietti\"",
          "select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Ben Jones\" or t1.directed_by = \"Brandon Vietti\"",
          "select distinct t1.title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Brandon Vietti\" or t1.directed_by = \"Ben Jones\""
        ]
      }
    ],
    [
      {
        "question": "Show me all the information about the Italian TV Channels.",
        "query": [
          "select * from tv_channel where language = \"Italian\"",
          "select * from tv_channel where language = \"Italian\"",
          "select * from tv_channel where language = \"Italian\"",
          "select * from tv_channel where language = \"Italy\"",
          "select * from tv_channel where language = \"IT\"",
          "select distinct * from tv_channel where language = \"Italian\"",
          "select * from tv_channel where language = \"Italy\"",
          "select * from tv_channel where language = \"IT\"",
          "select * from tv_channel where language = \"it\"",
          "select * from tv_channel where country = \"Italy\""
        ]
      },
      {
        "question": "How about the Polish TV Channels?",
        "query": [
          "select * from tv_channel where language = \"Polish\"",
          "select * from tv_channel where language = \"Polish\"",
          "select * from tv_channel where language = \"Polish\"",
          "select * from tv_channel where language = \"Poland\"",
          "select * from tv_channel where language = \"Poland\"",
          "select distinct * from tv_channel where language = \"Polish\"",
          "select * from tv_channel where language = \"Polish\"",
          "select distinct from tv_channel where language = \"Polish\"",
          "select * from tv_channel where language = \"Poland\""
        ]
      },
      {
        "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "query": [
          "select country, count (*) from tv_channel group by country order by count (*) desc limit 1",
          "select distinct count (*), country from tv_channel group by country order by count (*) desc limit 1",
          "select distinct count (*) from tv_channel group by country order by count (*) desc limit 1",
          "select distinct country from tv_channel group by country order by count (*) desc limit 1",
          "select distinct country, count (*) from tv_channel group by country order by count (*) desc limit 1",
          "select country from tv_channel group by country order by count (*) desc limit 1",
          "select country from tv_channel group by country order by count (*) desc limit 1",
          "select country, count (*) from tv_channel group by country order by count (*) desc",
          "select country, count (*) from tv_channel group by country order by count (*) asc limit 1",
          "select country, count (*) from tv_channel group by country order by count (*) desc"
        ]
      }
    ],
    [
      {
        "question": "Tell me the TV Channel of the cartoon titled \"The Eyes of Despero!\".",
        "query": [
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\""
        ]
      },
      {
        "question": "How about this channel's series name?",
        "query": [
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select channel from cartoon where title = \"The Eyes of Despero!\"",
          "select series_name from tv_channel where id = (select channel from cartoon where title = \"The Eyes of Despero!\")"
        ]
      },
      {
        "question": "Tell me the number of different series names and contents in the TV Channel table.",
        "query": [
          "select count (distinct series_name) from tv_channel",
          "select distinct series_name, content from tv_channel",
          "select distinct count (*) from tv_channel",
          "select count (distinct series_name) from tv_channel",
          "select count (*) from tv_channel",
          "select count (*) from tv_channel group by content",
          "select count (*) from tv_channel group by id"
        ]
      }
    ],
    [
      {
        "question": "Tell me the package option for the series named \"Rock TV\".",
        "query": [
          "select package_option from tv_channel where series_name = \"Rock TV\"",
          "select package_option from tv_channel where series_name = \"Rock TV\"",
          "select package_option from tv_channel where series_name = \"Rock TV\"",
          "select package_option from tv_channel where series_name = \"Rock TV\"",
          "select distinct package_option from tv_channel where series_name = \"Rock TV\"",
          "select distinct t2.package_option from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t1.episode = \"Rock TV\"",
          "select package_option from tv_channel where series_name = \"RockTV\""
        ]
      },
      {
        "question": "tell me the language of this series.",
        "query": [
          "select language from tv_channel where series_name = \"Rock TV\"",
          "select language from tv_channel where series_name = \"Rock TV\"",
          "select language from tv_channel where series_name = \"Rock TV\"",
          "select distinct language from tv_channel where series_name = \"Rock TV\"",
          "select country from tv_channel where series_name = \"Rock TV\"",
          "select language from tv_channel where series_name = \"RockTV\"",
          "select distinct t1.language from tv_channel as t1 join tv_series as t2 where t1.series_name = \"Rock TV\"",
          "select language from tv_channel where series_name = \"RockTV\"",
          "select language from tv_channel where series_name = \"Rock TV\" group by language",
          "select language from tv_channel where series_name = \"Rock TV\" group by language"
        ]
      },
      {
        "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "query": [
          "select language, count (*) from tv_channel group by language order by count (*) asc limit 1",
          "select language, count (*) from tv_channel group by language order by count (*) asc limit 1",
          "select distinct language, count (*) from tv_channel group by language order by count (*) asc limit 1",
          "select language, count (*) from tv_channel group by language order by count (*) asc limit 1",
          "select distinct count (*), language from tv_channel group by language order by count (*) asc limit 1",
          "select distinct language from tv_channel group by language order by count (*) asc limit 1",
          "select distinct (language), count (*) from tv_channel group by language order by count (*) asc limit 1",
          "select distinct count (*) from tv_channel group by language order by count (*) asc limit 1",
          "select language from tv_channel group by language order by count (*) asc limit 1",
          "select language, count (*) from tv_channel group by language order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Tell me the author of the cartoon \"The Rise of the Blue Beetle!\"",
        "query": [
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select directed_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select directed_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\""
        ]
      },
      {
        "question": "How about its director?",
        "query": [
          "select directed_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select directed_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select directed_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select directed_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select distinct directed_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select directed_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select written_by from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select directed_by from cartoon where title = \"The Rise of the Blue Beetle!\""
        ]
      },
      {
        "question": "What is its TV Channel?",
        "query": [
          "select channel from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select channel from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select channel from cartoon where title = \"The Rise of the Blue Beetle!\"",
          "select t2.id from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where title = \"The Rise of the Blue Beetle!\""
        ]
      }
    ],
    [
      {
        "question": "tell me the country of the TV Channel for the series named \"Sky Radio\".",
        "query": [
          "select country from tv_channel where series_name = \"Sky Radio\"",
          "select country from tv_channel where series_name = \"Sky Radio\"",
          "select country from tv_channel where series_name = \"Sky Radio\"",
          "select country from tv_channel where series_name = \"Sky Radio\"",
          "select distinct country from tv_channel where series_name = \"Sky Radio\"",
          "select country from tv_channel where series_name = \"SkyRadio\"",
          "select country from tv_channel where series_name = \"Sky radio\"",
          "select country from tv_channel where series_name = \"SkyRadio\"",
          "select country from tv_channel where series_name = \"Sky Radio\")",
          "select country from tv_channel where series_name = \"Sky Radio\")"
        ]
      },
      {
        "question": "How about its content?",
        "query": [
          "select content from tv_channel where series_name = \"Sky Radio\"",
          "select content from tv_channel where series_name = \"Sky Radio\"",
          "select content from tv_channel where series_name = \"Sky Radio\"",
          "select country, content from tv_channel where series_name = \"Sky Radio\"",
          "select country from tv_channel where series_name = \"Sky Radio\"",
          "select country, content from tv_channel where series_name = \"Sky Radio\"",
          "select Content from tv_channel where series_name = \"Sky Radio\"",
          "select content from tv_channel where series_name = \"SkyRadio\"",
          "select content from tv_channel where series_name = \"Sky Radio\")"
        ]
      },
      {
        "question": "I want to know the title of all Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "query": [
          "select t2.title from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\"",
          "select t2.title from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\"",
          "select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = \"Sky Radio\"",
          "select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = \"Sky Radio\"",
          "select distinct t1.title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = \"Sky Radio\"",
          "select distinct t2.title from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\"",
          "select t2.title from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\"",
          "select title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = \"Sky Radio\""
        ]
      }
    ],
    [
      {
        "question": "Tell me the rating of the episode named \"Double Down\".",
        "query": [
          "select rating from tv_series where episode = \"Double Down\"",
          "select rating from tv_series where episode = \"Double Down\"",
          "select rating from tv_series where episode = \"Double Down\"",
          "select rating from tv_series where episode = \"DoubleDown\""
        ]
      },
      {
        "question": "How about the rating of the episode named \"Keepers\".",
        "query": [
          "select rating from tv_series where episode = \"Keepers\"",
          "select rating from tv_series where episode = \"Keepers\"",
          "select rating from tv_series where episode = \"Keepers\"",
          "select distinct t1.rating from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t1.episode = \"Keepers\"",
          "select distinct rating from tv_series where episode = \"Keepers\"",
          "select distinct t2.rating from tv_series as t1 join tv_series as t2 on t1.id = t2.channel where t1.episode = \"Keepers\"",
          "select distinct t2.rating from tv_series as t1 join tv_series as t2 on t1.id = t2.id where t1.episode = \"Keepers\"",
          "select distinct t1.rating from tv_series as t1 join tv_series as t2 on t1.id = t2.id where t1.episode = \"Keepers\"",
          "select distinct t1.rating from tv_series as t1 join tv_channel as t2 on t1.id = t2.id where t1.episode = \"Keepers\""
        ]
      },
      {
        "question": "Okay, I want to know the top 3 highest Rating TV series. List the TV series's Episode and Rating.",
        "query": [
          "select t1.episode, t1.rating from tv_series as t1 order by t1.rating desc limit 3",
          "select episode, rating from tv_series order by rating desc limit 3",
          "select t1.episode, t1.rating from tv_series as t1 order by t1.rating desc limit 3",
          "select t1.episode, t1.rating from tv_series as t1 order by rating desc limit 3",
          "select t1.episode, t1.rating from tv_series as t1 order by rating desc limit 3",
          "select episode, rating from tv_series order by rating desc limit 3",
          "select t2.episode, t1.rating from tv_series as t1 join tv_series as t2 on t1.id = t2.channel order by rating desc limit 3",
          "select t1.episode, t1.rating from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id order by rating desc limit 3",
          "select t2.episode, t1.rating from tv_series as t1 join tv_series as t2 on t1.id = t2.id order by rating desc limit 3",
          "select distinct t1.episode, t1.rating from tv_series as t1 order by t1.rating desc limit 3"
        ]
      }
    ],
    [
      {
        "question": "tell me the weekly rank of the episode named \"Emily\".",
        "query": [
          "select weekly_rank from tv_series where episode = \"Emily\"",
          "select weekly_rank from tv_series where episode = \"Emily\"",
          "select weekly_rank from tv_series where episode = \"Emily\"",
          "select t1.weekly_rank from tv_series as t1 where t1.episode = \"Emily\"",
          "select t1.weekly_rank from tv_series as t1 on t1.episode = \"Emily\""
        ]
      },
      {
        "question": "How about its share?",
        "query": [
          "select share from tv_series where episode = \"Emily\"",
          "select share from tv_series where episode = \"Emily\"",
          "select share from tv_series where episode = \"Emily\"",
          "select share from tv_series where episode = \"Eliot\"",
          "select share from tv_series where episode = \"Emily\"",
          "select share from tv_series where episode = \"Emlyn\""
        ]
      },
      {
        "question": "tell me the minimum and maximum share of TV series.",
        "query": [
          "select min (share), max (share) from tv_series",
          "select min (share), max (share) from tv_series",
          "select max (share), min (share) from tv_series",
          "select max (share), min (share) from tv_series",
          "select min (share), max (share) from tv_series",
          "select distinct min (share), max (share) from tv_series",
          "select distinct max (share), min (share) from tv_series",
          "select min (share), max (share) from tv_series",
          "select max (share), min (share) from tv_series",
          "select share from tv_series order by share asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Tell me the rating of the episode titled \"A Love of a Lifetime\".",
        "query": [
          "select rating from tv_series where episode = \"A Love of a Lifetime\"",
          "select rating from tv_series where episode = \"A Love of a Lifetime\"",
          "select rating from tv_series where episode = \"A Love of a Lifetime\""
        ]
      },
      {
        "question": "How about its weekly rank?",
        "query": [
          "select weekly_rank from tv_series where episode = \"A Love of a Lifetime\"",
          "select weekly_rank from tv_series where episode = \"A Love of a Lifetime\"",
          "select weekly_rank from tv_series where episode = \"A Love of a Lifetime\"",
          "select weekly_rank from tv_series where episode = \"A Love of a Life\"",
          "select weekly_rank from tv_series where episode = \"A Love of a Life\"",
          "select weekly_rank from tv_series where episode = \"A love of a lifetime\"",
          "select weekly_rank from tv_series where episode = \"A love of a lifetime\"",
          "select rating, weekly_rank from tv_series where episode = \"A Love of a Lifetime\"",
          "select weekly_rank from tv_series where episode = \"A Love of A Lifetime\"",
          "select rating, weekly_rank from tv_series where episode = \"A Love of a Life\""
        ]
      },
      {
        "question": "And What is its TV Channel?",
        "query": [
          "select channel from tv_series where episode = \"A Love of a Lifetime\"",
          "select channel from tv_series where episode = \"A Love of a Lifetime\"",
          "select t1.channel from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t1.episode = \"A Love of a Lifetime\"",
          "select t1.channel from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t1.episode = \"A Love of a Lifetime\"",
          "select t2.id from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t1.episode = \"A Love of a Lifetime\"",
          "select t2.id from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t1.episode = \"A Love of a Lifetime\"",
          "select channel from tv_series where episode = \"A Love of a Lifetime\"",
          "select t2.channel from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t2.episode = \"A Love of a Lifetime\"",
          "select t2.id from tv_series as t1 join tv_channel as t2 on t1.id = t2.id where t1.episode = \"A Love of a Lifetime\"",
          "select t2.id from tv_series as t1 join tv_channel as t2 on t1.id = t2.id where t1.episode = \"A Love of a Lifetime\""
        ]
      }
    ],
    [
      {
        "question": "tell me the content of TV Channel with the series named \"Sky Radio\".",
        "query": [
          "select content from tv_channel where series_name = \"Sky Radio\"",
          "select content from tv_channel where series_name = \"Sky Radio\"",
          "select content from tv_channel where series_name = \"Sky Radio\"",
          "select content from tv_channel where series_name = \"Sky Radio\"",
          "select distinct content from tv_channel where series_name = \"Sky Radio\"",
          "select content from tv_channel where series_name = \"SkyRadio\"",
          "select content from tv_channel where series_name = \"Sky radio\"",
          "select content from tv_channel where series_name = \"Sky Radio\"",
          "select content from tv_channel where series_name = \"Sky radio\""
        ]
      },
      {
        "question": "How about its language?",
        "query": [
          "select language from tv_channel where series_name = \"Sky Radio\"",
          "select language from tv_channel where series_name = \"Sky Radio\"",
          "select language from tv_channel where series_name = \"Sky Radio\"",
          "select country from tv_channel where series_name = \"Sky Radio\"",
          "select distinct language from tv_channel where series_name = \"Sky Radio\"",
          "select language from tv_channel where Series_name = \"Sky Radio\"",
          "select language from tv_channel where series_name = \"SkyRadio\""
        ]
      },
      {
        "question": "Okay, now I want to know the Episode of all TV series showed on TV Channel with series name \"Sky Radio\".",
        "query": [
          "select t2.episode from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\"",
          "select t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = \"Sky Radio\"",
          "select t2.episode from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\"",
          "select t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = \"Sky Radio\"",
          "select t2.episode from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\"",
          "select t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = \"Sky Radio\"",
          "select distinct t2.episode from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\"",
          "select distinct t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = \"Sky Radio\""
        ]
      }
    ],
    [
      {
        "question": "Tell me the air date of the cartoon titled \"Fall of the Blue Beetle!\".",
        "query": [
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select distinct t1.original_air_date from cartoon as t1 join tv_series as t2 on t1.channel = t2.id where t1.title = \"Fall of the Blue Beetle!\"",
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date from cartoon where title = \"Fall of the Blue Beetle\""
        ]
      },
      {
        "question": "What is its production code?",
        "query": [
          "select production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select distinct production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date, production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select distinct production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select distinct production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select production_code from cartoon where title = \"Fall of the Blue Beetle!\"",
          "select original_air_date, production_code from cartoon where title = \"Fall of the Blue Beetle!\""
        ]
      },
      {
        "question": "tell me the production code and channel of the most recently aired cartoon.",
        "query": [
          "select production_code, channel from cartoon order by original_air_date desc limit 1",
          "select production_code, channel from cartoon order by original_air_date desc limit 1",
          "select production_code, channel from cartoon order by original_air_date desc limit 1",
          "select t1.production_code, t1.channel from cartoon as t1 order by t1.original_air_date desc limit 1",
          "select t1.production_code, t1.channel from cartoon as t1 order by t1.original_air_date desc limit 1",
          "select distinct t1.production_code, t1.channel from cartoon as t1 order by t1.original_air_date desc limit 1",
          "select t1.production_code, t1.channel from cartoon as t1 join tv_series as t2 on t1.channel = t2.channel order by t2.air_date desc limit 1",
          "select t1.production_code, t2.channel from cartoon as t1 join tv_series as t2 on t1.id = t2.channel order by t2.air_date desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Tell me the cartoons directed by Ben Jone.",
        "query": [
          "select * from cartoon where directed_by = \"Ben Jone\"",
          "select * from cartoon where directed_by = \"Ben Jone\"",
          "select distinct t1.title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Ben Jone\"",
          "select * from cartoon where directed_by = \"Ben Jone\"",
          "select * from cartoon where directed_by = \"Ben Jone\"",
          "select title from cartoon where directed_by = \"Ben Jone\"",
          "select title from cartoon where directed_by = \"Ben Jone\"",
          "select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Ben Jone\"",
          "select * from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Ben Jone\"",
          "select * from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Ben Jone\""
        ]
      },
      {
        "question": "Tell me the cartoons written by Todd Casey.",
        "query": [
          "select * from cartoon where written_by = \"Todd Casey\"",
          "select * from cartoon where written_by = \"Todd Casey\"",
          "select * from cartoon where written_by = \"Todd Casey\"",
          "select * from cartoon where written_by = \"Todd Casey\"",
          "select title from cartoon where written_by = \"Todd Casey\"",
          "select * from cartoon where written_by = \"Todd Casey\"",
          "select distinct * from cartoon where written_by = \"Todd Casey\"",
          "select distinct from cartoon where written_by = \"Todd Casey\"",
          "select distinct * from cartoon where written_by = \"Todd Casey\"",
          "select * from cartoon where written_by = \"Todd Casey\""
        ]
      },
      {
        "question": "Which countries' tv channels are playing some cartoon written by Todd Casey?",
        "query": [
          "select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Todd Casey\"",
          "select t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.written_by = \"Todd Casey\"",
          "select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Todd Casey\"",
          "select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Todd Casey\"",
          "select t1.country from tv_channel as t1 join cartoon as t2 where t1.id = t2.channel and t2.written_by = \"Todd Casey\"",
          "select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Todd Casey\"",
          "select t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.written_by = \"Todd Casey\"",
          "select distinct t1.country from tv_channel as t1 join cartoon as t2 where t1.id = t2.channel and t2.written_by = \"Todd Casey\"",
          "select distinct t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.written_by = \"Todd Casey\"",
          "select t1.country from tv_channel as t1 join cartoon as t2 where t1.id = t2.channel and t2.written_by = \"Todd Casey\""
        ]
      }
    ],
    [
      {
        "question": "which countries' tv channels are playing some cartoon written by Steven Melching?",
        "query": [
          "select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Steven Melching\"",
          "select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Steven Melching\"",
          "select t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.written_by = \"Steven Melching\"",
          "select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Steven Melching\"",
          "select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Steven Melching\"",
          "select country from tv_channel where id in (select channel from cartoon where written_by = \"Steven Melching\")",
          "select t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.written_by = \"Steven Melching\"",
          "select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Steven Melching\"",
          "select country from tv_channel where id in (select channel from cartoon where written_by = \"Steven Melching\")",
          "select distinct t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.written_by = \"Steven Melching\""
        ]
      },
      {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "query": [
          "select country from tv_channel except select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Todd Casey\"",
          "select distinct country from tv_channel except select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Todd Casey\"",
          "select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by!= \"Todd Casey\"",
          "select distinct country from tv_channel where id not in (select channel from cartoon where written_by = \"Todd Casey\")",
          "select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = \"Todd Casey\"",
          "select country from tv_channel where id not in (select channel from cartoon where written_by = \"Todd Casey\")",
          "select distinct count (*) from tv_channel where id not in (select channel from cartoon where written_by = \"Todd Casey\")"
        ]
      }
    ],
    [
      {
        "question": "Tell me the director of the cartoon titled \"Deep Cover for Batman!\".",
        "query": [
          "select directed_by from cartoon where title = \"Deep Cover for Batman!\"",
          "select directed_by from cartoon where title = \"Deep Cover for Batman!\"",
          "select directed_by from cartoon where title = \"Deep Cover for Batman!\"",
          "select directed_by from cartoon where title = \"Deep Cover for Batman!\"",
          "select directed_by from cartoon where title = \"Deep Cover for Batman!\"",
          "select directed_by from cartoon where title = \"Deep Cover for Batman!\"",
          "select directed_by from cartoon where title = \"Deep Cover for Batman!\"",
          "select directed_by from cartoon where title = \"Deep Cover for Batman!\"",
          "select directed_by from cartoon where title = \"Deep Cover for Batman\"",
          "select distinct directed_by from cartoon where title = \"Deep Cover for Batman!\""
        ]
      },
      {
        "question": "I want to know this cartoon's production code.",
        "query": [
          "select production_code from cartoon where title = \"Deep Cover for Batman!\"",
          "select production_code from cartoon where title = \"Deep Cover for Batman!\"",
          "select production_code from cartoon where title = \"Deep Cover for Batman!\"",
          "select distinct production_code from cartoon where title = \"Deep Cover for Batman!\"",
          "select production_code from cartoon where title = \"Deep Cover for Batman!\"",
          "select distinct production_code from cartoon where title = \"Deep Cover for Batman!\"",
          "select distinct channel from cartoon where title = \"Deep Cover for Batman!\"",
          "select production_code from cartoon where title = \"Deep Cover forBatman!\"",
          "select distinct production_code from cartoon where title = \"Deep Cover for Batman!\""
        ]
      },
      {
        "question": "Tell me the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang.",
        "query": [
          "select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = \"Michael Chang\" and t2.title = \"Deep Cover for Batman!\"",
          "select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = \"Michael Chang\" and t2.title = \"Deep Cover for Batman!\"",
          "select t2.series_name, t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Michael Chang\" and t1.title = \"Deep Cover for Batman!\"",
          "select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = \"Michael Chang\" and t2.title = \"Deep Cover for Batman!\"",
          "select t2.series_name, t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Michael Chang\" and t1.title = \"Deep Cover for Batman!\"",
          "select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = \"Michael Chang\" and t2.title = \"Deep Cover for Batman!\"",
          "select t2.series_name, t2.country from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Michael Chang\" and t1.title = \"Deep Cover for Batman!\"",
          "select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = \"Michael Chang\" and t2.title = \"Deep Cover for Batman!\"",
          "select distinct t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = \"Michael Chang\" and t2.title = \"Deep Cover for Batman!\"",
          "select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = \"Michael Chang\" and t2.title = \"Deep Cover for Batman\""
        ]
      }
    ],
    [
      {
        "question": "tell me the country of the TV channel with series named \"MTV Music\"",
        "query": [
          "select country from tv_channel where series_name = \"MTV Music\"",
          "select country from tv_channel where series_name = \"MTV Music\"",
          "select country from tv_channel where series_name = \"MTV Music\"",
          "select distinct country from tv_channel where series_name = \"MTV Music\"",
          "select country from tv_channel where series_name = \"MTV Music\"",
          "select country from tv_channel where series_name = \"TV Music\"",
          "select country from tv_channel where series_name = \"MTV Music\"",
          "select country from tv_channel where series_name = \"TV Music\"",
          "select country from tv_channel where series_name = \"MTV MUSIC\"",
          "select country from tv_channel where series_name = \"TV Channel Music\""
        ]
      },
      {
        "question": "Tell me the number of Italian channels.",
        "query": [
          "select count (*) from tv_channel where country = \"Italy\"",
          "select count (*) from tv_channel where country = \"Italy\"",
          "select distinct count (*) from tv_channel where country = \"Italy\"",
          "select count (*) from tv_channel where country = \"Italy\"",
          "select count (*) from tv_channel where language = \"Italian\"",
          "select count (*) from tv_channel where language = \"Italian\"",
          "select count (*) from tv_channel where country = \"Italian\"",
          "select count (*) from tv_channel where country = \"IT\"",
          "select count (*) from tv_channel where country = \"Italian\"",
          "select count (*) from tv_channel where country = \"IT\""
        ]
      },
      {
        "question": "find id of the tv channels that from the countries where have more than two tv channels.",
        "query": [
          "select id from tv_channel group by country having count (*) > 2",
          "select id from tv_channel group by country having count (*) > 2",
          "select id from tv_channel group by country having count (*) > 2",
          "select distinct t1.id from tv_channel as t1 join tv_channel as t2 on t1.id = t2.id group by t1.country having count (*) > 2",
          "select distinct count (*) from tv_channel group by country having count (*) > 2",
          "select t1.id from tv_channel as t1 join tv_channel as t2 on t1.id = t2.id group by t1.country having count (*) > 2",
          "select distinct t2.id from tv_channel as t1 join tv_channel as t2 on t1.id = t2.id group by t1.country having count (*) > 2"
        ]
      }
    ],
    [
      {
        "question": "Who is the director of the cartoon titled \"Return of the Fearsome Fangs!\"?",
        "query": [
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select written_by from cartoon where title = \"Return of the Fearsome Fangs!\"",
          "select directed_by from cartoon where title = \"Return of the Fearsome Fangs!\""
        ]
      },
      {
        "question": "Tell me the cartoons directed by Ben Jones.",
        "query": [
          "select * from cartoon where directed_by = \"Ben Jones\"",
          "select * from cartoon where directed_by = \"Ben Jones\"",
          "select title from cartoon where directed_by = \"Ben Jones\"",
          "select * from cartoon where directed_by = \"Benjamin Jones\"",
          "select * from cartoon where directed_by = \"Ben Jones\"",
          "select * from cartoon where directed_by = \"Benjamin Jones\"",
          "select * from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Ben Jones\"",
          "select title from cartoon where directed_by = \"Ben Jones\"",
          "select * from cartoon as t1 join tv_channel as t2 on t1.channel = t2.id where t1.directed_by = \"Ben Jones\"",
          "select * from cartoon as t1 join tv_series as t2 on t1.channel = t2.channel where t1.directed_by = \"Ben Jones\""
        ]
      },
      {
        "question": "Find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "query": [
          "select id from tv_channel except select channel from cartoon where directed_by = \"Ben Jones\"",
          "select id from tv_channel except select channel from cartoon where directed_by = \"Ben Jones\"",
          "select id from tv_channel except select channel from cartoon where directed_by = \"Ben Jones\"",
          "select id from tv_channel except select channel from cartoon where directed_by = \"ben Jones\"",
          "select id from tv_channel except select channel from cartoon where directed_by = \"Benjamin Jones\"",
          "select id from tv_channel except select channel from cartoon where directed_by = \"BenJones\""
        ]
      }
    ]
  ],
  "poker_player": [
    [
      {
        "question": "Show all the poker players.",
        "query": [
          "select * from poker_player",
          "select * from poker_player",
          "select * from poker_player",
          "select distinct * from poker_player"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from poker_player",
          "select count (*) from poker_player",
          "select distinct count (*) from poker_player",
          "select count (*) from poker_player",
          "select distinct poker_player_id from poker_player",
          "select distinct people_id from poker_player"
        ]
      }
    ],
    [
      {
        "question": "What is the earnings of each poker player?",
        "query": [
          "select earnings from poker_player",
          "select earnings from poker_player",
          "select distinct earnings from poker_player",
          "select distinct money_rank from poker_player",
          "select distinct poker_player.earnings from poker_player",
          "select money_rank from poker_player",
          "select distinct poker_player_id from poker_player"
        ]
      },
      {
        "question": "Sort them in descending order.",
        "query": [
          "select earnings from poker_player order by earnings desc",
          "select earnings from poker_player order by earnings desc",
          "select distinct earnings from poker_player order by earnings desc",
          "select distinct (earnings) from poker_player order by earnings desc",
          "select earnings from poker_player order by earnings asc",
          "select earnings from poker_player order by earnings asc",
          "select distinct t1.earnings from poker_player as t1"
        ]
      }
    ],
    [
      {
        "question": "Show all the information about each poker player.",
        "query": [
          "select * from poker_player",
          "select * from poker_player",
          "select * from poker_player",
          "select distinct * from poker_player",
          "select distinct poker_player_id from poker_player"
        ]
      },
      {
        "question": "What are their final table mades?",
        "query": [
          "select final_table_made from poker_player",
          "select final_table_made from poker_player",
          "select distinct final_table_made from poker_player",
          "select final_table_made from poker_player",
          "select distinct final_table_made from poker_player",
          "select distinct final_table_made from poker_player"
        ]
      },
      {
        "question": "What are their final table mades and best finishes?",
        "query": [
          "select final_table_made, best_finish from poker_player",
          "select final_table_made, best_finish from poker_player",
          "select final_table_made, best_finish from poker_player",
          "select distinct final_table_made, best_finish from poker_player",
          "select distinct final_table_made, best_finish from poker_player",
          "select final_table_made,best_finish from poker_player",
          "select final_table_made, best_finish from poker_player",
          "select final_table_made, best_finish from poker_player as t1"
        ]
      }
    ],
    [
      {
        "question": "What is the earnings of each poker player?",
        "query": [
          "select earnings from poker_player",
          "select earnings from poker_player",
          "select distinct earnings from poker_player",
          "select distinct money_rank from poker_player",
          "select distinct poker_player.earnings from poker_player",
          "select money_rank from poker_player",
          "select distinct poker_player_id from poker_player"
        ]
      },
      {
        "question": "Give me the average.",
        "query": [
          "select avg (earnings) from poker_player",
          "select avg (earnings) from poker_player",
          "select distinct avg (earnings) from poker_player",
          "select distinct sum (earnings) from poker_player",
          "select distinct earnings from poker_player group by earnings",
          "select distinct earnings from poker_player",
          "select distinct (earnings) from poker_player"
        ]
      }
    ],
    [
      {
        "question": "What is the money rank of each poker player?",
        "query": [
          "select money_rank from poker_player",
          "select money_rank from poker_player",
          "select distinct money_rank from poker_player"
        ]
      },
      {
        "question": "Sort them in the decreasing order.",
        "query": [
          "select money_rank from poker_player order by money_rank desc",
          "select money_rank from poker_player order by money_rank desc",
          "select distinct money_rank from poker_player order by money_rank desc",
          "select money_rank from poker_player order by money_rank asc",
          "select money_rank from poker_player order by money_rank asc",
          "select distinct money_rank from poker_player order by money_rank asc",
          "select money_rank from poker_player order by money_rank"
        ]
      },
      {
        "question": "Return the top one.",
        "query": [
          "select money_rank from poker_player order by money_rank desc limit 1",
          "select money_rank from poker_player order by money_rank desc limit 1",
          "select distinct money_rank from poker_player order by money_rank desc limit 1",
          "select money_rank from poker_player order by money_rank desc 1",
          "select distinct max (money_rank) from poker_player",
          "select distinct max (money_rank) from poker_player order by money_rank desc",
          "select money_rank from poker_player order by money_rank asc limit 1",
          "select distinct count (*) from poker_player order by money_rank desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Which poker player has earnings less than 200000?",
        "query": [
          "select * from poker_player where earnings < 200000",
          "select * from poker_player where earnings < 200000",
          "select distinct * from poker_player where earnings < 200000",
          "select distinct people_id from poker_player where earnings < 200000",
          "select * from poker_player where earnings < 2000000",
          "select * from poker_player where earnings < 20000",
          "select * from poker_player where earnings < 2000000"
        ]
      },
      {
        "question": "Among them, what is the maximum number of final tables made?",
        "query": [
          "select max (final_table_made) from poker_player where earnings < 200000",
          "select max (final_table_made) from poker_player where earnings < 200000",
          "select distinct max (final_table_made) from poker_player where earnings < 200000",
          "select max (final_table_made) from poker_player where earnings < 200000",
          "select distinct (max (final_table_made)) from poker_player where earnings < 200000",
          "select distinct count (*) from poker_player where earnings < 200000 order by final_table_made desc limit 1",
          "select distinct count (*) from poker_player where earnings < 200000 group by max (final_table_made)",
          "select distinct count (distinct final_table_made) from poker_player where earnings < 200000",
          "select distinct count (*) from poker_player where earnings < 200000 group by max (final_table_made) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show all the poker players.",
        "query": [
          "select * from poker_player",
          "select * from poker_player",
          "select * from poker_player",
          "select distinct * from poker_player"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select people.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select people.name from people join poker_player on people.people_id = poker_player.people_id",
          "select people.name from people join poker_player on people.people_id = poker_player.people_id",
          "select name from people",
          "select people.name from people join poker_player on poker_player.people_id = people.people_id",
          "select t1.name from people as t1 join poker_player as t2 on t1.people_id = best_finish"
        ]
      }
    ],
    [
      {
        "question": "Which poker players have earnings higher than 300000?",
        "query": [
          "select * from poker_player where earnings > 300000",
          "select * from poker_player where earnings > 300000",
          "select distinct * from poker_player where earnings > 300000",
          "select distinct people_id from poker_player where earnings > 300000",
          "select distinct poker_player_id from poker_player where earnings > 300000",
          "select * from poker_player where earnings > 3000",
          "select * from poker_player where earnings > 3000"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where earnings > 300000",
          "select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where earnings > 300000",
          "select distinct t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where earnings > 300000",
          "select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where earnings > 300000",
          "select name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where t2.earnings > 300000",
          "select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where earnings > 300000",
          "select name from people where people_id in (select people_id from poker_player where earnings > 300000)",
          "select t1.name from people as t1 join poker_player as t2 where t2.earnings > 300000"
        ]
      }
    ],
    [
      {
        "question": "What are the names of all poker players?",
        "query": [
          "select distinct poker_player_id from poker_player",
          "select distinct people.name from people",
          "select distinct t1.name from people as t1 join poker_player as t2",
          "select t1.name from people as t1 join poker_player as t2",
          "select distinct people.name from people as t1 join poker_player as t2"
        ]
      },
      {
        "question": "Sort them in the ascending order of the final tables made.",
        "query": [
          "select distinct poker_player_id from poker_player order by final_table_made asc",
          "select distinct poker_player_id from poker_player order by final_table_made asc",
          "select distinct poker_player_id from poker_player order by final_table_made",
          "select distinct poker_player_id from poker_player order by final_table_made",
          "select distinct poker_player_id from poker_player order by final_table_made desc",
          "select distinct poker_player_id from poker_player order by final_table_made",
          "select distinct poker_player_id from poker_player order by final_table_made desc"
        ]
      }
    ],
    [
      {
        "question": "What is the birth date of each poker player?",
        "query": [
          "select *select birth_date from poker_player",
          "select distinct people.birth_date from people where people_id in (select people_id from poker_player)",
          "select distinct people.birth_date from poker_player",
          "select distinct t1.birth_date from people as t1 join poker_player as t2"
        ]
      },
      {
        "question": "Sort the list by the poker player's earnings.",
        "query": [
          "select *select birth_date from poker_player order by earnings",
          "select from poker_player order by earnings",
          "select * from poker_player order by earnings",
          "select *select birth_date from poker_player order by earnings",
          "select distinct *select birth_date from poker_player order by earnings",
          "select *select * from poker_player order by earnings"
        ]
      },
      {
        "question": "Give me the result for the player with the lowest earnings.",
        "query": [
          "select distinct select birth_date from poker_player order by earnings asc limit 1",
          "select from poker_player order by earnings asc limit 1",
          "select sum (earnings) from poker_player order by earnings asc limit 1",
          "select min (earnings) from poker_player",
          "select max (earnings) from poker_player order by earnings asc",
          "select max (earnings) from poker_player order by earnings asc limit 1",
          "select min (earnings) from poker_player order by earnings",
          "select distinct *select birth_date from poker_player order by earnings limit 1"
        ]
      }
    ],
    [
      {
        "question": "What is the height of each poker player?",
        "query": [
          "select distinct t1.height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select distinct t2.height from poker_player as t1 join people as t2 on t1.people_id = t2.people_id",
          "select people.height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select t2.height from poker_player as t1 join people as t2 on t1.people_id = t2.people_id",
          "select people.height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select t1.height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select distinct people.height from poker_player",
          "select people.height from people join poker_player on people.people_id = poker_player.people_id"
        ]
      },
      {
        "question": "Who has the largest height?",
        "query": [
          "select distinct t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select distinct t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by height desc limit 1",
          "select * from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select * from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by height desc limit 1",
          "select * from people order by height desc limit 1",
          "select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by height desc limit 1",
          "select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by height desc limit 1",
          "select * from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select name from people order by height desc limit 1"
        ]
      },
      {
        "question": "What is his or her money rank?",
        "query": [
          "select t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select distinct t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select distinct t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select distinct t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1",
          "select t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by height desc limit 1",
          "select t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by height desc limit 1",
          "select distinct t1.name, t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by height desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What is the height of each poker player?",
        "query": [
          "select distinct t1.height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select distinct t2.height from poker_player as t1 join people as t2 on t1.people_id = t2.people_id",
          "select people.height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select t2.height from poker_player as t1 join people as t2 on t1.people_id = t2.people_id",
          "select people.height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select t1.height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select height from people as t1 join poker_player as t2 on t1.people_id = t2.people_id",
          "select distinct people.height from poker_player",
          "select people.height from people join poker_player on people.people_id = poker_player.people_id"
        ]
      },
      {
        "question": "Who all have heights greater than 200?",
        "query": [
          "select * from people where height > 200",
          "select * from people where height > 200",
          "select * from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where height > 200",
          "select distinct * from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where height > 200",
          "select distinct t1.name from people as t1 join poker_player as t2 where t1.height > 200"
        ]
      },
      {
        "question": "What is the average earnings among them?",
        "query": [
          "select avg (t2.earnings) from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where height > 200",
          "select avg (t2.earnings) from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where t1.height > 200",
          "select avg (t2.earnings) from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where height > 200",
          "select distinct avg (t2.earnings) from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where t1.height > 200",
          "select avg (t2.earnings) from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where height > 200",
          "select distinct t2.earnings from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where t1.height > 200",
          "select distinct t2.earnings from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where height > 200",
          "select distinct avg (t2.earnings) from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where height > 200"
        ]
      }
    ],
    [
      {
        "question": "Sort all the poker players in descending order of earnings.",
        "query": [
          "select * from poker_player order by earnings desc",
          "select * from poker_player order by earnings desc",
          "select distinct * from poker_player order by earnings desc",
          "select distinct poker_player_id from poker_player order by earnings desc",
          "select distinct (earnings) from poker_player order by earnings desc",
          "select * from poker_player order by earnings asc",
          "select * from poker_player order by earnings asc",
          "select distinct t1.earnings from poker_player as t1"
        ]
      },
      {
        "question": "What are the names of poker players in descending order of earnings?",
        "query": [
          "select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by earnings desc",
          "select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by earnings desc",
          "select distinct t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by earnings desc",
          "select name from people where people_id in (select people_id from poker_player order by earnings desc)",
          "select distinct t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by earnings desc",
          "select name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by earnings desc",
          "select t1.name from people as t1 join poker_player as t2 order by t2.earnings desc",
          "select t1.name from people as t1 join poker_player as t2 order by t2.earnings desc"
        ]
      }
    ],
    [
      {
        "question": "Show the nationality of each person.",
        "query": [
          "select nationality from people",
          "select nationality from people",
          "select distinct nationality from people"
        ]
      },
      {
        "question": "Group people by their nationality.",
        "query": [
          "select * from people group by nationality",
          "select * from people group by nationality",
          "select distinct * from people group by nationality"
        ]
      },
      {
        "question": "For each of the result, show the corresponding number of people of that nationality?",
        "query": [
          "select count (*) from people group by nationality",
          "select count (*) from people group by nationality",
          "select nationality, count (*) from people group by nationality",
          "select nationality, count (*) from people group by nationality",
          "select count (*), nationality from people group by nationality",
          "select distinct count (*) from people group by nationality",
          "select count (*), nationality from people group by nationality",
          "select distinct nationality, count (*) from people group by nationality",
          "select distinct nationality from people group by nationality",
          "select distinct count (*), nationality from people group by nationality"
        ]
      }
    ],
    [
      {
        "question": "Show the nationality of each person.",
        "query": [
          "select nationality from people",
          "select nationality from people",
          "select distinct nationality from people"
        ]
      },
      {
        "question": "Count the number of people for each nationality.",
        "query": [
          "select count (*) from people group by nationality",
          "select nationality, count (*) from people group by nationality",
          "select count (*) from people group by nationality",
          "select distinct count (*) from people group by nationality",
          "select count (*) from people group by nationality",
          "select nationality from people group by nationality",
          "select distinct nationality from people group by nationality",
          "select distinct nationality, count (*) from people group by nationality",
          "select count (*), nationality from people group by nationality",
          "select distinct nationality from people"
        ]
      },
      {
        "question": "What is the most common nationality of people?",
        "query": [
          "select nationality from people group by nationality order by count (*) desc limit 1",
          "select distinct nationality from people group by nationality order by count (*) desc limit 1",
          "select nationality from people group by nationality desc limit 1",
          "select nationality from people group by nationality order by count (*) asc limit 1",
          "select distinct nationality from people group by nationality desc limit 1",
          "select distinct nationality from people order by count (*) desc limit 1",
          "select nationality from people group by nationality desc limit 1",
          "select nationality from people group by nationality order by count (*) desc 1",
          "select distinct nationality from people group by nationality order by count (*) asc limit 1",
          "select nationality from people group by nationality order by count (*) desc 1"
        ]
      }
    ],
    [
      {
        "question": "Count the number of people for each nationality.",
        "query": [
          "select count (*) from people group by nationality",
          "select count (*) from people group by nationality",
          "select distinct nationality from people",
          "select distinct count (*) from people group by nationality",
          "select nationality from people group by nationality",
          "select count (*) from people group by nationality",
          "select nationality from people group by nationality",
          "select distinct nationality from people group by nationality",
          "select distinct count (*) from people",
          "select distinct people_id, nationality from people group by nationality"
        ]
      },
      {
        "question": "Which nationalities are held by at least two people?",
        "query": [
          "select nationality from people group by nationality having count (*) >= 2",
          "select nationality from people group by nationality having count (*) >= 2",
          "select distinct nationality from people group by nationality having count (*) >= 2",
          "select distinct nationality from people group by nationality having count (*) >= 2",
          "select nationality from people group by nationality having count (*) = 2",
          "select nationality from people group by nationality having count (*) = 2"
        ]
      }
    ],
    [
      {
        "question": "What are the names and birth dates of people?",
        "query": [
          "select name, birth_date from people",
          "select name, birth_date from people",
          "select distinct name, birth_date from people",
          "select name, birth_date from people"
        ]
      },
      {
        "question": "Sort the results in ascending alphabetical order of name.",
        "query": [
          "select name from people order by name asc",
          "select name from people order by name asc",
          "select distinct name from people order by name asc",
          "select distinct name from people order by name",
          "select name from people order by name",
          "select name from people order by name desc",
          "select name from people order by name"
        ]
      }
    ],
    [
      {
        "question": "What are the names of all people?",
        "query": [
          "select name from people",
          "select name from people",
          "select distinct name from people"
        ]
      },
      {
        "question": "What about people whose nationality is not \"Russia\"?",
        "query": [
          "select name from people where nationality!= \"Russia\"",
          "select name from people where nationality!= \"Russia\"",
          "select distinct name from people where nationality!= \"Russia\"",
          "select name from people where nationality!= \"Russia\"",
          "select name from people where nationality!= \"Russian\"",
          "select name from people where nationality!= \"Russian\""
        ]
      }
    ],
    [
      {
        "question": "Show all the poker players.",
        "query": [
          "select * from poker_player",
          "select * from poker_player",
          "select * from poker_player",
          "select distinct * from poker_player"
        ]
      },
      {
        "question": "Show all people who are not poker players.",
        "query": [
          "select * from people where people_id not in (select people_id from poker_player)",
          "select * from people where people_id not in (select people_id from poker_player)",
          "select * from people where people_id not in (select people_id from poker_player)",
          "select distinct * from people where people_id not in (select people_id from poker_player)",
          "select distinct name from people where people_id not in (select people_id from poker_player)",
          "select * from people except select * from poker_player",
          "select * from people except select * from poker_player",
          "select distinct * from people where people_id not in (select distinct people_id from poker_player)"
        ]
      },
      {
        "question": "Give me their names.",
        "query": [
          "select name from people where people_id not in (select people_id from poker_player)",
          "select name from people where people_id not in (select people_id from poker_player)",
          "select distinct name from people where people_id not in (select people_id from poker_player)",
          "select name from people where people_id not in (select people_id from poker_player)",
          "select name from people where people_id not in (select people_id from poker_player)"
        ]
      }
    ]
  ],
  "battle_death": [
    [
      {
        "question": "What are the death tolls each time?",
        "query": [
          "select killed from death",
          "select note from death",
          "select count (*) from death",
          "select killed from death",
          "select * from death",
          "select distinct killed from death",
          "select note from death group by note",
          "select note from death",
          "select id, note from death",
          "select t1.killed, t1.injured from death as t1"
        ]
      },
      {
        "question": "What is the maximum number of deaths in any one time?",
        "query": [
          "select max (killed) from death",
          "select max (killed) from death",
          "select distinct max (killed) from death",
          "select max (killed) from death",
          "select distinct killed from death order by killed desc limit 1",
          "select distinct count (*) from death",
          "select distinct (max (killed)) from death",
          "select max (injured) from death",
          "select count (*) from death"
        ]
      },
      {
        "question": "What about the minimum?",
        "query": [
          "select min (killed) from death",
          "select min (killed) from death",
          "select distinct min (killed) from death",
          "select min (killed) from death",
          "select distinct max (killed) from death",
          "select distinct killed from death order by killed asc limit 1",
          "select max (killed) from death",
          "select max (killed) from death",
          "select distinct (min (killed)) from death",
          "select distinct (killed) from death"
        ]
      },
      {
        "question": "Give me the maximum and also the minimum.",
        "query": [
          "select max (killed), min (killed) from death",
          "select max (killed), min (killed) from death",
          "select distinct max (killed), min (killed) from death",
          "select max (killed), min (killed) from death",
          "select max (killed), max (killed) from death",
          "select distinct (killed) from death order by killed desc limit 1",
          "select max (killed), max (killed) from death",
          "select min (killed), max (killed) from death",
          "select max (killed),min (killed) from death",
          "select distinct max (killed) from death"
        ]
      }
    ],
    [
      {
        "question": "Show me information about deaths caused by ships.",
        "query": [
          "select * from death where caused_by_ship_id in (select id from ship)",
          "select * from death as t1 join ship as t2 on t1.killed = t2.id",
          "select * from death where caused_by_ship_id in (select id from ship)",
          "select * from death as t1 join ship as t2 on t1.killed = t2.id",
          "select killed from death where caused_by_ship_id in (select id from ship)",
          "select * from death where caused_by_ship_id in (select id from ship)",
          "select * from death as t1 join ship as t2 on t1.killed = t2.id",
          "select * from ship as t1 join death as t2 on t1.id = t2.killed",
          "select * from ship as t1 join death as t2 on t1.id = t2.killed",
          "select * from ship as t1 join death as t2 on t1.id = t2.killed"
        ]
      },
      {
        "question": "Only ships with tonnage 't'.",
        "query": [
          "select * from ship where tonnage = \"t\"",
          "select * from ship where tonnage = \"t\"",
          "select * from ship where tonnage = \"t\"",
          "select distinct * from ship where tonnage = \"t\""
        ]
      },
      {
        "question": "Only return the death and injury information for those ships.",
        "query": [
          "select t1.killed, t1.injured from death as t1 join ship as t2 on t1.caused_by_ship_id = t2.id where t2.tonnage = \"t\"",
          "select t1.killed, t1.injured from death as t1 join ship as t2 on t1.caused_by_ship_id = t2.id where t2.tonnage = \"t\"",
          "select killed, injured from death where caused_by_ship_id in (select id from ship where tonnage = \"t\")",
          "select t2.killed, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id where t1.tonnage = \"t\"",
          "select t1.note, t1.injured from death as t1 join ship as t2 on t1.caused_by_ship_id = t2.id where t2.tonnage = \"t\"",
          "select t1.note, t1.killed from death as t1 join ship as t2 on t1.caused_by_ship_id = t2.id where t2.tonnage = \"t\"",
          "select * from death as t1 join ship as t2 on t1.caused_by_ship_id = t2.id where t2.tonnage = \"t\"",
          "select killed, injured from death where caused_by_ship_id in (select id from ship where tonnage = \"t\")",
          "select t1.killed, t1.injured from death as t1 join ship as t2 on t2.id = t1.caused_by_ship_id where t2.tonnage = \"t\"",
          "select t2.killed, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id where tonnage = \"t\""
        ]
      }
    ],
    [
      {
        "question": "What are the ids and names of the battles?",
        "query": [
          "select id, name from battle",
          "select id, name from battle",
          "select distinct id, name from battle"
        ]
      },
      {
        "question": "Only show those that ships were lost in.",
        "query": [
          "select id, name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle",
          "select id, name from battle as t1 join ship as t2 on t1.id = lost_in_battle"
        ]
      },
      {
        "question": "Please, just the ones with 'Brig' ship type.",
        "query": [
          "select id, name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = \"Brig\"",
          "select id, name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where ship_type = \"Brig\"",
          "select id, name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = \"Brig\"",
          "select id, name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where ship_type = \"Brig\"",
          "select id, name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = \"Brig\"",
          "select id, name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = \"Brig\""
        ]
      }
    ],
    [
      {
        "question": "How many people were killed or injured in each battle?",
        "query": [
          "select killed from death",
          "select killed, injured from death",
          "select killed from death",
          "select killed from death group by id",
          "select killed from death group by id",
          "select killed, injured from death",
          "select distinct killed from death",
          "select killed, injured from death",
          "select killed from death",
          "select killed from death group by id"
        ]
      },
      {
        "question": "Only show the deaths for those battles that produced at least ten deaths.",
        "query": [
          "select killed from death where killed >= 10",
          "select count (*) from death where killed >= 10",
          "select * from death where killed >= 10",
          "select t1.killed from death as t1 join battle as t2 on t1.id = t2.id group by t2.id having count (*) >= 10",
          "select count (*) from death where killed >= 10",
          "select killed from death where killed >= 10",
          "select t1.killed from death as t1 join battle as t2 on t1.id = t2.id group by t1.id having count (*) >= 10",
          "select killed from death group by id having count (*) >= 10",
          "select t1.killed from death as t1 join battle as t2 on t1.id = t2.id group by t2.id having count (killed) >= 10",
          "select count (*) from death as t1 join battle as t2 on t1.killed = t2.id group by t2.id having count (*) >= 10"
        ]
      }
    ],
    [
      {
        "question": "List the injuries caused by each ship (give ship id and name please).",
        "query": [
          "select t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id",
          "select id, name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id",
          "select id, name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id",
          "select t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id",
          "select id, name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id",
          "select id, name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id",
          "select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id",
          "select t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.killed"
        ]
      },
      {
        "question": "Sort it by decreasing number of injuries.",
        "query": [
          "select t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id order by t2.injured desc",
          "select t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id order by t2.injured",
          "select t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id order by t2.injured",
          "select distinct t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id order by t2.injured",
          "select distinct t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id order by t2.injured desc",
          "select t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id order by t2.injured",
          "select t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id order by t2.injured asc",
          "select * from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id order by t2.injured desc",
          "select * from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by count (*) desc",
          "select t1.id, t1.name, t2.injured from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id"
        ]
      },
      {
        "question": "Only show the ship id and name that caused the most total injuries.",
        "query": [
          "select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum (t2.injured) desc limit 1",
          "select distinct t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum (t2.injured) desc limit 1",
          "select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum (injured) desc limit 1",
          "select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum (t2.injured) desc limit 1",
          "select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum (t2.injured) desc limit 1",
          "select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum (t2.injured) asc limit 1",
          "select distinct count (*) from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by count (*) desc limit 1",
          "select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum (t2.injured) desc limit 1",
          "select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum (injured) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Which battles did the bulgarian commander 'Kaloyan' fight in?",
        "query": [
          "select * from battle where bulgarian_commander = \"Kaloyan\"",
          "select * from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t1.bulgarian_commander = \"Kaloyan\"",
          "select * from battle where bulgarian_commander = \"Kaloyan\"",
          "select * from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t1.bulgarian_commander = \"Kaloyan\"",
          "select * from battle where latin_commander = \"Kaloyan\"",
          "select * from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t1.latin_commander = \"Kaloyan\"",
          "select * from battle where bulgarian_commander = \"Kaloyan\"",
          "select * from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t1.bulgarian_commander = \"Kaloyan\"",
          "select * from battle where latin_commander = \"Kaloyan\"",
          "select * from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t1.latin_commander = \"Kaloyan\""
        ]
      },
      {
        "question": "How about the latin commander 'Baldwin I'?",
        "query": [
          "select * from battle where latin_commander = \"Baldwin I\"",
          "select * from battle where latin_commander = \"Baldwin I\"",
          "select * from battle where latin_commander = \"Baldwin I\"",
          "select * from Battle where latin_commander = \"Baldwin I\"",
          "select * from Battle where latin_commander = \"Baldwin I\"",
          "select result from battle where latin_commander = \"Baldwin I\"",
          "select * from battle where Latin_commander = \"Baldwin I\"",
          "select name from battle where latin_commander = \"Baldwin I\"",
          "select * from battle where Latin_commander = \"Baldwin I\"",
          "select * from battle where latin_commander = \"BaldwinI\""
        ]
      },
      {
        "question": "Just the ones where they were fighting one another, please.",
        "query": [
          "select * from battle where latin_commander = \"Baldwin I\" intersect select * from battle where bulgarian_commander = \"Kaloyan\"",
          "select * from battle where latin_commander = \"Baldwin I\" intersect select * from battle where bulgarian_commander = \"Kaloyan\"",
          "select * from battle where bulgarian_commander = \"Kaloyan\" intersect select * from battle where latin_commander = \"Baldwin I\"",
          "select * from battle where bulgarian_commander = \"Kaloyan\" intersect select * from battle where latin_commander = \"Baldwin I\"",
          "select * from battle where latin_commander = \"Baldwin I\" and bulgarian_commander = \"Kaloyan\"",
          "select * from battle where latin_commander = \"Baldwin I\" and bulgarian_commander = \"Kaloyan\"",
          "select * from battle where latin_commander = \"Kaloyan\" intersect select * from battle where bulgarian_commander = \"Baldwin I\"",
          "select * from battle where latin_commander = \"Kaloyan\" intersect select * from battle where bulgarian_commander = \"Baldwin I\"",
          "select * from battle where latin_commander = \"Baldwin I\" or bulgarian_commander = \"Kaloyan\"",
          "select * from battle where latin_commander = \"Baldwin I\" or bulgarian_commander = \"Kaloyan\""
        ]
      }
    ],
    [
      {
        "question": "Which battle ids lost ships with tonnage '225'?",
        "query": [
          "select id from ship where tonnage = \"225\"",
          "select id from ship where tonnage = 225",
          "select id from ship where tonnage = 225",
          "select id from ship where tonnage = \"225\"",
          "select lost_in_battle from ship where tonnage = \"225\"",
          "select lost_in_battle from ship where tonnage = 225",
          "select lost_in_battle from ship where tonnage = 225",
          "select lost_in_battle from ship where tonnage = \"225\""
        ]
      },
      {
        "question": "Give the names of these battles, too.",
        "query": [
          "select t1.name, t2.id from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select t1.name, t2.id from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select t1.name, t1.id from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select t2.name, t1.id from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select t1.name, t1.id from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select t2.name, t1.id from ship as t1 join battle as t2 on t1.id = t2.id where t1.tonnage = \"225\"",
          "select t2.name, t1.id from ship as t1 join battle as t2 on t1.id = t2.id where t1.tonnage = \"225\"",
          "select t2.name, t1.id from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select t1.name, t2.id from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\""
        ]
      },
      {
        "question": "Which battle ids and names did not lose any ship with tonnage '225'?",
        "query": [
          "select id, name from battle except select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select distinct id, name from battle except select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select distinct t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage!= \"225\"",
          "select id, name from battle where id not in (select id from ship where tonnage = \"225\")",
          "select id, name from battle where id not in (select id from ship where tonnage = \"225\")",
          "select distinct t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id except select id, name from ship where tonnage = \"225\""
        ]
      },
      {
        "question": "How many is that?",
        "query": [
          "select distinct count (*) from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select count (*) from battle except select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select count (*) from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select count (*) from battle except select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select count (*) from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage!= \"225\"",
          "select count (*) from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select count (*) from battle where id not in (select t1.id from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\")",
          "select count (*) from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select distinct count (t1.id) from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\"",
          "select count (*) from battle except select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.tonnage = \"225\""
        ]
      }
    ],
    [
      {
        "question": "List the name and date of the battle that has lost the ship named 'Lettice'",
        "query": [
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"Lettice\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"Lettice\")",
          "select name, date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = \"Lettice\"",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"Lettice\")",
          "select name, date from battle where name = \"Lettice\"",
          "select name, date from battle where name = \"Lettice\"",
          "select name, date from battle as t1 join ship as t2 on t1.id = t2.id where t2.name = \"Lettice\"",
          "select name, date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where name = \"Lettice\""
        ]
      },
      {
        "question": "Same for 'HMS Atlanta', please.",
        "query": [
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select distinct name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select distinct name from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from Battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"Lettice\")"
        ]
      },
      {
        "question": "Can you intersect those?",
        "query": [
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"Lettice\") intersect select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\") intersect select name, date from battle where id in (select lost_in_battle from ship where name = \"Lettice\")",
          "select name from battle where id in (select lost_in_battle from ship where name = \"Lettice\") intersect select name from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\") and id in (select lost_in_battle from ship where name = \"Lettice\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select name from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\") intersect select name from battle where id in (select lost_in_battle from ship where name = \"Lettice\")",
          "select distinct name, date from battle where id in (select lost_in_battle from ship where name = \"Lettice\") intersect select name, date from battle where id in (select lost_in_battle from ship where name = \"HMS Atlanta\")",
          "select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = \"HMS Atlanta\""
        ]
      }
    ],
    [
      {
        "question": "Which battle ids and names lost ships in the 'English Channel'?",
        "query": [
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = \"English Channel\"",
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = \"English Channel\"",
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = \"English Channel\"",
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.location = \"English Channel\"",
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = \"English Channel\"",
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.id where t2.location = \"English Channel\"",
          "select distinct t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = \"English Channel\"",
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = \"English Channel\"",
          "select id, name from ship where location = \"English Channel\""
        ]
      },
      {
        "question": "Which did not?",
        "query": [
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\"",
          "select distinct t1.id from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\"",
          "select id from ship where location!= \"English Channel\"",
          "select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\""
        ]
      },
      {
        "question": "For these ones, show their names, results, and bulgarian commanders.",
        "query": [
          "select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\"",
          "select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\"",
          "select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\"",
          "select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\"",
          "select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\"",
          "select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location!= \"English Channel\""
        ]
      }
    ]
  ],
  "car_1": [
    [
      {
        "question": "How many continents are there?",
        "query": [
          "select count (*) from continents",
          "select count (*) from continents",
          "select distinct count (*) from continents",
          "select count (*) from continents",
          "select distinct continent from continents",
          "select distinct contid from continents",
          "select count (distinct continent) from continents",
          "select distinct count (continent) from continents",
          "select count (continent) from continents"
        ]
      },
      {
        "question": "Show all their ids and names!",
        "query": [
          "select contid, continent from continents",
          "select contid, continent from continents",
          "select continent, contid from continents",
          "select distinct contid, continent from continents",
          "select continent from continents",
          "select * from continents",
          "select continent, contid from continents"
        ]
      },
      {
        "question": "What countries do they each have?",
        "query": [
          "select t1.continent, t2.countryname from continents as t1 join countries as t2 on t1.contid = t2.continent",
          "select * from continents as t1 join countries as t2 on t1.contid = t2.continent",
          "select t1.continent, t2.countryname from continents as t1 join countries as t2 on t1.contid = t2.continent",
          "select * from continents as t1 join countries as t2 on t1.contid = t2.continent",
          "select t2.continent, t1.countryid from countries as t1 join continents as t2 on t1.continent = t2.contid",
          "select countryid, countryname from continents as t1 join countries as t2 on t1.contid = t2.continent",
          "select * from countries as t1 join continents as t2 on t1.continent = t2.contid",
          "select t2.continent, t1.countryid from countries as t1 join continents as t2 on t1.continent = t2.contid",
          "select t2.continent, t1.countryname from countries as t1 join continents as t2 on t1.continent = t2.contid",
          "select count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid"
        ]
      },
      {
        "question": "Count how many there are for each continent name and id!",
        "query": [
          "select t1.continent, count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.continent",
          "select count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid",
          "select t1.continent, count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.continent",
          "select count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid",
          "select distinct t1.continent, t2.countryname from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.continent",
          "select distinct count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid",
          "select distinct t1.continent, t1.contid from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid",
          "select count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.continent",
          "select distinct t1.continent, t1.contid from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.continent",
          "select t1.continent, count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid"
        ]
      }
    ],
    [
      {
        "question": "What are the names and ids of the different car makers?",
        "query": [
          "select distinct maker from car_makers",
          "select distinct maker from car_makers",
          "select maker, id from car_makers",
          "select maker, id from car_makers",
          "select distinct maker from car_makers",
          "select distinct t1.maker from car_makers as t1"
        ]
      },
      {
        "question": "What countries are they each from?",
        "query": [
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t1.maker, t1.country from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t1.maker, t1.country from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t1.country from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t1.country from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t1.maker from car_makers as t1 join countries as t2 on t1.id = t2.countryid",
          "select t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country"
        ]
      },
      {
        "question": "For each, how many models do they each produce?",
        "query": [
          "select t1.maker, t2.countryname, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select distinct t1.maker, t2.countryname, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select t1.maker, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select t1.maker, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select distinct t1.maker, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select distinct maker, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname"
        ]
      },
      {
        "question": "Can actually just show the name, id and the number of models?",
        "query": [
          "select distinct t1.maker, t1.id, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select distinct t1.maker, t1.id, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.id",
          "select t1.maker, t1.id, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.maker",
          "select t1.maker, t1.id, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.id",
          "select distinct t1.maker, t2.countryname, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t1.maker, t1.id, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid"
        ]
      }
    ],
    [
      {
        "question": "What is the average horsepower of all cars?",
        "query": [
          "select avg (horsepower) from cars_data",
          "select avg (horsepower) from cars_data",
          "select distinct avg (horsepower) from cars_data",
          "select avg (horsepower) from cars_data",
          "select avg (horsepower) from cars_data",
          "select avg (horsepower) from cars_data",
          "select distinct max (horsepower) from cars_data",
          "select distinct avg (horsepower) from cars_data",
          "select distinct t1.horsepower from cars_data as t1"
        ]
      },
      {
        "question": "How about the maximum?",
        "query": [
          "select max (horsepower) from cars_data",
          "select max (horsepower) from cars_data",
          "select distinct max (horsepower) from cars_data",
          "select max (horsepower) from cars_data",
          "select distinct (max (horsepower)) from cars_data",
          "select min (horsepower) from cars_data",
          "select max (horsepower) from cars_data"
        ]
      },
      {
        "question": "What about the minimum?",
        "query": [
          "select min (horsepower) from cars_data",
          "select min (horsepower) from cars_data",
          "select min (horsepower) from cars_data",
          "select distinct min (horsepower) from cars_data",
          "select max (horsepower) from cars_data",
          "select max (horsepower) from cars_data",
          "select distinct max (horsepower) from cars_data",
          "select distinct (min (horsepower)) from cars_data",
          "select max (horsepower) from cars_data",
          "select distinct (max (horsepower)) from cars_data"
        ]
      },
      {
        "question": "What is the model of the car with this horsepower?",
        "query": [
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.horsepower = (select max (horsepower) from cars_data)",
          "select t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.horsepower = (select max (horsepower) from cars_data)",
          "select t1.model from model_list as t1 join cars_data as t2 on t1.modelid = t2.id where t2.horsepower = (select max (horsepower) from cars_data)",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.horsepower = (select min (horsepower) from cars_data)",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower desc limit 1",
          "select model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.horsepower = (select max (horsepower) from cars_data)"
        ]
      }
    ],
    [
      {
        "question": "What is the average weight of all the cars?",
        "query": [
          "select avg (weight) from cars_data",
          "select avg (weight) from cars_data",
          "select avg (weight) from cars_data",
          "select distinct avg (weight) from cars_data",
          "select distinct weight from cars_data",
          "select distinct sum (weight) from cars_data",
          "select distinct max (weight) from cars_data",
          "select distinct (weight) from cars_data",
          "select distinct count (*) from cars_data"
        ]
      },
      {
        "question": "List all the car information with weights above this?",
        "query": [
          "select * from cars_data where weight > (select avg (weight) from cars_data)",
          "select * from cars_data where weight > (select avg (weight) from cars_data)",
          "select * from cars_data where weight > (select avg (weight) from cars_data)",
          "select distinct * from cars_data where weight > (select avg (weight) from cars_data)",
          "select * from cars_data where weight >= (select avg (weight) from cars_data)",
          "select * from cars_data where weight > (select avg (weight) from cars_data)"
        ]
      },
      {
        "question": "How about below this?",
        "query": [
          "select * from cars_data where weight < (select avg (weight) from cars_data)",
          "select * from cars_data where weight < (select avg (weight) from cars_data)",
          "select * from cars_data where weight < (select avg (weight) from cars_data)",
          "select distinct * from cars_data where weight < (select avg (weight) from cars_data)",
          "select * from cars_data where weight < (select max (weight) from cars_data)",
          "select * from cars_data where weight < (select max (weight) from cars_data)",
          "select * from cars_data where weight < (select avg (weight) from cars_data)"
        ]
      },
      {
        "question": "Please, show just their model names!",
        "query": [
          "select t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.weight < (select avg (weight) from cars_data)",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg (weight) from cars_data)",
          "select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.weight < (select avg (weight) from cars_data)",
          "select t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where weight < (select avg (weight) from cars_data)"
        ]
      }
    ],
    [
      {
        "question": "What are the ids, and models of the cars were made in 1970?",
        "query": [
          "select distinct t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t2.makeid, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.year = 1970",
          "select distinct t1.id, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.year = 1970",
          "select t1.id, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.year = 1970",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970"
        ]
      },
      {
        "question": "Show their horsepower and MPG as well?",
        "query": [
          "select distinct t1.makeid, t1.model, t2.horsepower, t2.mpg from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.model, t1.makeid, t2.horsepower, t2.mpg from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.makeid, t1.model, t2.horsepower, t2.MPG from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.model, t2.horsepower, t2.mpg from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.makeid, t1.model, t2.year, t2.mpg from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.makeid, t1.model, t2.mpg, t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select t1.makeid, t1.model, t2.horsepower, t2.mpg from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.makeid, t1.model, t2.horsepower, t2.mpg from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970"
        ]
      },
      {
        "question": "Also provide the names of their makers!",
        "query": [
          "select distinct t1.makeid, t1.model, t2.horsepower, t2.mpg from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970"
        ]
      },
      {
        "question": "Just show a unique list of all these different makers.",
        "query": [
          "select distinct t1.makeid from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.model, t1.makeid from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.model, t2.horsepower, t2.mpg from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct count (distinct t1.makeid) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970",
          "select distinct t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970 group by t1.makeid",
          "select distinct t1.makeid from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970 group by t1.makeid",
          "select distinct t1.model, t1.makeid from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970 group by t1.makeid",
          "select distinct t1.model, t1.makeid from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = 1970 group by t1.model"
        ]
      }
    ],
    [
      {
        "question": "Show me the makes and models of each car!",
        "query": [
          "select makeid, model from car_names",
          "select makeid, model from car_names",
          "select make, model from car_names",
          "select make, model from car_names",
          "select t1.make, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select t1.make, t2.model from car_names as t1 join model_list as t2 on t1.makeid = t2.maker",
          "select makeid, model from car_names",
          "select make, model from car_names",
          "select distinct makeid, model from car_names",
          "select t1.make, t2.model from car_names as t1 join model_list as t2 on t1.model = t2.model"
        ]
      },
      {
        "question": "Also provide which the year they were produced?",
        "query": [
          "select t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select t2.makeid, t2.model, t1.year from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t2.makeid, t2.model, t1.year from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select distinct t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select t2.makeid, t2.model, t1.year from cars_data as t1 join car_names as t2 on t1.id = t2.makeid"
        ]
      },
      {
        "question": "Which ones been produce in the earliest year?",
        "query": [
          "select t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select distinct t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select max (year) from cars_data)",
          "select distinct t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select max (year) from cars_data)",
          "select t1.makeid, t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (t2.year) from cars_data)",
          "select t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.year asc limit 1"
        ]
      },
      {
        "question": "Show just the make and year!",
        "query": [
          "select t1.makeid, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select t1.makeid, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select distinct t1.makeid, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select t1.makeid, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)",
          "select t1.makeid, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select max (year) from cars_data)",
          "select t1.makeid, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select max (year) from cars_data)",
          "select t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year = (select min (year) from cars_data)"
        ]
      }
    ],
    [
      {
        "question": "What are all the different car models?",
        "query": [
          "select distinct model from car_names",
          "select distinct model from model_list",
          "select distinct modelid from model_list",
          "select distinct (model) from car_names",
          "select distinct model from car_names group by model",
          "select distinct * from model_list",
          "select distinct model from car_names",
          "select distinct model from model_list group by model",
          "select * distinct model from car_names",
          "select distinct model from model_list"
        ]
      },
      {
        "question": "Show also all the car makes and the years that they were produced!",
        "query": [
          "select distinct t1.model, t1.make, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select distinct t1.make, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select distinct t2.model, t2.make, t1.year from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select distinct t1.makeid, t1.model, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id"
        ]
      },
      {
        "question": "Show only those that were made after 1980!",
        "query": [
          "select distinct t1.model, t1.make, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t1.model, t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t1.make, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t1.model, t1.make, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t1.model, t1.make, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where year > 1980",
          "select distinct t1.model, t1.make, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year >1980",
          "select distinct t1.model, t1.make, t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1981"
        ]
      },
      {
        "question": "What are the distinct car models for these?",
        "query": [
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct (t1.model) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year >1980",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year > 1980 group by t1.model",
          "select distinct distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.year >1980"
        ]
      }
    ],
    [
      {
        "question": "What are the names and country name of each car maker?",
        "query": [
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.id = t2.countryid",
          "select t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.id = t2.countryid",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid"
        ]
      },
      {
        "question": "Also provide the continent name for each!",
        "query": [
          "select t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t2.continent = t3.contid",
          "select t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t3.contid = t2.continent",
          "select t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t2.continent = t3.contid",
          "select t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t2.continent = t3.contid",
          "select t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t3.contid = t2.continent",
          "select t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t1.country = t3.contid",
          "select t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t3.contid = t2.continent",
          "select distinct t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t2.continent = t3.contid",
          "select t1.maker, t2.countryname, t2.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t2.continent = t3.contid",
          "select distinct t1.maker, t2.countryname, t3.continent from car_makers as t1 join countries as t2 on t1.country = t2.countryid join continents as t3 on t3.contid = t2.continent"
        ]
      },
      {
        "question": "How many car makers are there per continent?",
        "query": [
          "select count (*) from car_makers as t1 join continents as t2 on t1.country = t2.contid group by t2.continent",
          "select t2.continent, count (*) from car_makers as t1 join continents as t2 on t1.country = t2.contid group by t2.continent",
          "select t2.continent, count (*) from car_makers as t1 join continents as t2 on t1.country = t2.contid group by t2.continent",
          "select count (*) from car_makers as t1 join continents as t2 on t1.country = t2.contid group by t2.continent",
          "select count (*) from car_makers as t1 join continents as t2 on t1.country = t2.contid group by t2.contid"
        ]
      }
    ],
    [
      {
        "question": "How many countries are there?",
        "query": [
          "select count (*) from countries",
          "select count (*) from countries",
          "select distinct count (*) from countries",
          "select count (*) from countries",
          "select count (*) from continents",
          "select distinct countryid from countries",
          "select distinct count (countryid) from countries",
          "select distinct countryname from countries",
          "select count (*) from continents"
        ]
      },
      {
        "question": "How many car makers belong to each one?",
        "query": [
          "select count (*) from car_makers group by country",
          "select count (*) from car_makers group by country",
          "select count (*) from car_makers group by maker",
          "select count (*) from car_makers group by maker",
          "select count (*) from car_makers group by count (*)",
          "select count (*) from car_makers group by count (*)",
          "select count (*) from car_makers group by country",
          "select count (*) from car_makers",
          "select count (*) from car_makers",
          "select count (*) from car_makers group by maker"
        ]
      },
      {
        "question": "What is the name of the country that has the least number?",
        "query": [
          "select countryname from countries order by count (*) asc limit 1",
          "select countryname from countries group by countryname order by count (*) asc limit 1",
          "select countryname from countries order by count (*) asc limit 1",
          "select countryname from countries group by countryname order by count (*) asc limit 1",
          "select distinct count (*) from car_makers group by country order by count (*) asc limit 1",
          "select distinct countryname from countries group by countryname order by count (*) asc limit 1",
          "select countryname from countries group by countryid order by count (*) asc limit 1",
          "select countryname from countries group by countryname order by count (*) desc limit 1",
          "select countryname from countries group by countryname order by count (*) limit 1"
        ]
      },
      {
        "question": "How about the most?",
        "query": [
          "select countryname from countries order by count (*) desc limit 1",
          "select countryname from countries order by count (*) desc limit 1",
          "select distinct countryname from countries order by count (*) desc limit 1",
          "select countryname from countries order by count (*) desc limit 1",
          "select countryname from countries order by count (*) asc limit 1",
          "select countryname from countries order by count (*) desc limit1"
        ]
      }
    ],
    [
      {
        "question": "How many makers are there?",
        "query": [
          "select count (*) from car_makers",
          "select count (distinct maker) from car_makers",
          "select count (*) from car_makers",
          "select distinct maker from car_makers",
          "select distinct count (maker) from car_makers",
          "select count (*) from car_makers",
          "select count (maker) from car_makers",
          "select distinct count (*) from car_makers",
          "select distinct count (distinct maker) from car_makers",
          "select count (maker) from car_makers"
        ]
      },
      {
        "question": "What are their full names and ids?",
        "query": [
          "select maker, id from car_makers",
          "select maker, id from car_makers",
          "select distinct maker, id from car_makers",
          "select t1.maker, t1.id from car_makers as t1"
        ]
      },
      {
        "question": "What models have they each produced?",
        "query": [
          "select t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select t1.maker, t1.id, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select t1.maker, t1.id, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select model from car_names as t1 join car_makers as t2 on t1.makeid = t2.id",
          "select model from car_names as t1 join car_makers as t2 on t1.makeid = t2.id",
          "select maker, model from car_names as t1 join car_makers as t2 on t1.makeid = t2.id",
          "select t2.model, t1.maker, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select maker, model from car_names as t1 join car_makers as t2 on t1.makeid = t2.id",
          "select t2.model, t1.maker, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker"
        ]
      },
      {
        "question": "Count how many modes there are per maker.",
        "query": [
          "select count (*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id",
          "select t1.maker, count (*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.maker",
          "select count (*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id",
          "select distinct t1.maker, count (*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.maker",
          "select count (*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.maker",
          "select count (*), t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.maker",
          "select count (*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.maker",
          "select t1.maker, count (*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id",
          "select distinct count (*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id",
          "select count (*) from car_names as t1 join car_makers as t2 on t1.makeid = t2.id group by t2.maker"
        ]
      }
    ],
    [
      {
        "question": "Show all the car ids with the make amc hornet sporabout (sw)?",
        "query": [
          "select makeid from car_names where make = \"amc hornet sporabout\"",
          "select makeid from car_names where make = \"amc hornet sporabout\"",
          "select makeid from car_names where make = \"amc hornet sporabout (sw)\"",
          "select makeid from car_names where make = \"amc hornet sporabout (sw)\""
        ]
      },
      {
        "question": "What is its horsepower?",
        "query": [
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t1.make = \"amc hornet sporabout\"",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t1.make = \"amc hornet sporabout\"",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t2.makeid = t1.id where t2.make = \"amc hornet sporabout\""
        ]
      },
      {
        "question": "How about its MPG?",
        "query": [
          "select t1.mpg from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t1.mpg from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t1.mpg from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select distinct t1.mpg from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t1.MPG from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t1.MPG from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select mpg from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select MPG from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t1.mpg from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc Hornet sporabout\""
        ]
      },
      {
        "question": "How about its accelerate?",
        "query": [
          "select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select distinct t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select distinct accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = \"amc hornet sporabout\"",
          "select accelerate from cars_data where id in (select makeid from car_names where make = \"amc hornet sporabout\")"
        ]
      }
    ],
    [
      {
        "question": "Show all the different car makers?",
        "query": [
          "select distinct maker from car_makers",
          "select distinct maker from car_makers",
          "select distinct maker from car_makers",
          "select distinct maker from car_makers"
        ]
      },
      {
        "question": "What are the names of the countries they belong to?",
        "query": [
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t1.country from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t1.country from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country"
        ]
      },
      {
        "question": "Show just the car makers from France!",
        "query": [
          "select t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select distinct t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select distinct t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select maker from car_makers where country = \"France\"",
          "select maker from car_makers where country = \"France\"",
          "select t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"French\"",
          "select t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"French\"",
          "select t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"FRANCE\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select distinct count (t1.maker) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select distinct count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select distinct t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select distinct count (maker) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select count (t1.maker) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"France\"",
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"French\"",
          "select distinct count (t1.maker) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = \"French\""
        ]
      }
    ],
    [
      {
        "question": "How many car models are produced in total?",
        "query": [
          "select distinct count (*) from model_list",
          "select distinct count (model) from model_list",
          "select distinct modelid from model_list",
          "select distinct count (model) from car_names",
          "select distinct count (*) from car_names",
          "select count (*) from model_list",
          "select sum (model) from model_list",
          "select distinct count (distinct model) from model_list",
          "select distinct model from model_list",
          "select distinct count (distinct model) from car_names"
        ]
      },
      {
        "question": "How many in Germany?",
        "query": [
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"Germany\"",
          "select distinct count (*) from car_names as t1 join model_list as t2 on t1.model = t2.model where t1.make = \"Germany\""
        ]
      },
      {
        "question": "How about in Japan?",
        "query": [
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"Japan\"",
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"Japan\"",
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"Japanese\"",
          "select distinct count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent where t2.countryname = \"Japan\"",
          "select from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"Japan\"",
          "select distinct t1.countryname from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"Japan\"",
          "select count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"Japan\"",
          "select distinct count (*) from model_list as t1 join countries as t2 on t1.modelid = t2.countryid where t2.countryname = \"Japan\"",
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"JP\""
        ]
      },
      {
        "question": "How about the USA?",
        "query": [
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"USA\"",
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"United States\"",
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"US\"",
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"USA\"",
          "select from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"USA\"",
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"America\"",
          "select distinct count (*) from continents as t1 join countries as t2 on t1.contid = t2.continent where t2.countryname = \"USA\"",
          "select distinct t1.countryname from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"USA\"",
          "select distinct count (*) from countries as t1 join model_list as t2 on t1.countryid = t2.model where t1.countryname = \"United Kingdom\""
        ]
      }
    ],
    [
      {
        "question": "What is all the car information for cars produced in 1974?",
        "query": [
          "select * from cars_data where year = 1974",
          "select * from cars_data where year = 1974",
          "select * from cars_data where year = 1974",
          "select * from cars_data where year = \"1974\"",
          "select * from cars_data where year = \"1974\"",
          "select * from car_names where makeid in (select id from cars_data where year = 1974)",
          "select distinct * from cars_data where year = 1974",
          "select * from cars_data where year = 1973",
          "select * from cars_data where year = 1973",
          "select * from cars_data where year = 2014"
        ]
      },
      {
        "question": "Now, show me just the weight and cylinders of these cars.",
        "query": [
          "select weight, cylinders from cars_data where year = 1974",
          "select weight, cylinders from cars_data where year = 1974",
          "select weight, cylinders from cars_data where year = 1974",
          "select distinct t1.weight, t1.cylinders from cars_data as t1 where t1.year = 1974",
          "select t1.weight, t1.cylinders from cars_data as t1 where t1.year = 1974",
          "select weight, cylinders from cars_data where year = 1973",
          "select weight, cylinders from cars_data where year = 1973",
          "select weight from cars_data where year = 1974"
        ]
      },
      {
        "question": "List just those with 8 cylinders!",
        "query": [
          "select weight, cylinders from cars_data where year = 1974 and cylinders = 8",
          "select weight from cars_data where cylinders = 8 and year = 1974",
          "select weight from cars_data where cylinders = 8 and year = 1974",
          "select weight, cylinders from cars_data where year = 1974 and cylinders = 8",
          "select weight from cars_data where cylinders = \"8\" and year = 1974",
          "select weight from cars_data where year = 1974 and cylinders = 8",
          "select weight, cylinders from cars_data where cylinders = 8 and year = 1974",
          "select weight, cylinders from cars_data where year = 1974 and cylinders = 8",
          "select weight from cars_data where cylinders = 8 and year = 1974",
          "select weight from cars_data where year = 1974 and cylinders = 8"
        ]
      },
      {
        "question": "What is the smallest weight?",
        "query": [
          "select min (weight) from cars_data where year = 1974 and cylinders = 8",
          "select min (weight) from cars_data where year = 1974 and cylinders = 8",
          "select distinct min (weight) from cars_data where year = 1974 and cylinders = 8",
          "select distinct max (weight) from cars_data where year = 1974 and cylinders = 8",
          "select max (weight) from cars_data where year = 1974 and cylinders = 8",
          "select weight from cars_data where year = 1974 order by weight asc limit 1",
          "select distinct (weight) from cars_data where year = 1974 and cylinders = 8",
          "select weight from cars_data where year = 1974 order by weight asc limit 1",
          "select distinct sum (weight) from cars_data where year = 1974 and cylinders = 8",
          "select distinct weight from cars_data where year = 1974 order by weight asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What are all the different country names?",
        "query": [
          "select distinct countryname from countries",
          "select distinct countryname from countries",
          "select countryname from countries",
          "select countryname from countries"
        ]
      },
      {
        "question": "Which ones have no car makers?",
        "query": [
          "select countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country"
        ]
      },
      {
        "question": "Which ones have at least one?",
        "query": [
          "select countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid"
        ]
      },
      {
        "question": "Also provide the country id!",
        "query": [
          "select countryname, countryid from countries except select t1.countryname, t1.countryid from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct t1.countryname, t1.countryid from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname, countryid from countries except select t1.countryname, t1.countryid from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select t1.countryname, t1.countryid from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select t1.countryname, t1.countryid from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct countryname, countryid from countries except select t1.countryname, t1.countryid from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname, countryid from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname, countryid from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname, countryid from countries except select t1.countryname, t1.countryid from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select t1.countryname, t1.countryid from countries as t1 join car_names as t2 on t1.countryid = t2.makeid group by t1.countryid"
        ]
      }
    ],
    [
      {
        "question": "Show all the car makers and their country name?",
        "query": [
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.id = t2.countryid",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.id = t2.countryid",
          "select distinct t2.maker, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country"
        ]
      },
      {
        "question": "Count how many there are per country name?",
        "query": [
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select count (*), t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select t2.countryname, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select distinct t2.countryname, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select distinct count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select distinct count (*), t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname",
          "select t2.countryname, count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.country"
        ]
      },
      {
        "question": "Show just those from countries in the continent Europe.",
        "query": [
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\"",
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\"",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\"",
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\" group by t2.countryname",
          "select distinct t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\"",
          "select distinct count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\"",
          "select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\"",
          "select distinct t1.maker from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\"",
          "select count (*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\"",
          "select distinct t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\""
        ]
      },
      {
        "question": "List the country names of those with at least 3 manufacturers!",
        "query": [
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname having count (*) >= 3",
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname having count (*) >= 3",
          "select distinct t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\" group by t2.countryname having count (*) >= 3",
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.continent = \"Europe\" group by t2.countryname having count (*) >= 3",
          "select distinct t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname having count (*) >= 3",
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname having count (*) >= 3",
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.country having count (*) >= 3",
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.country having count (*) >= 3",
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t2.countryname having count (t1.maker) >= 3"
        ]
      }
    ],
    [
      {
        "question": "What is the horsepower, make for each car!",
        "query": [
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t2.make, t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t2.make, t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t2.horsepower, t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select t2.makeid, t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t2.makeid, t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t2.horsepower, t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select t1.makeid, t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select t2.model, t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid"
        ]
      },
      {
        "question": "Show those with 8 cylinders!",
        "query": [
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 8",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 8",
          "select distinct t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 8",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 8",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where cylinders = 8",
          "select distinct t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 8",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where cylinders = 8",
          "select distinct t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 8"
        ]
      },
      {
        "question": "How about 3?",
        "query": [
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3",
          "select distinct t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3",
          "select distinct t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3",
          "select distinct count (*) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3",
          "select distinct t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3",
          "select distinct (t1.horsepower) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 4",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 8"
        ]
      },
      {
        "question": "Show the one with the maximum horsepower.",
        "query": [
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3 order by t1.horsepower desc limit 1",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3 order by t1.horsepower desc limit 1",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.horsepower desc limit 1",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3 order by t1.horsepower desc limit 1",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3 order by t1.horsepower desc limit 1",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t1.horsepower order by count (*) desc limit 1",
          "select distinct t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3 order by t1.horsepower desc limit 1",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.horsepower desc limit 1",
          "select t1.horsepower, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3 order by t1.horsepower desc limit 1",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t1.horsepower order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What is id of the car with the max horsepower?",
        "query": [
          "select id from cars_data order by horsepower desc limit 1",
          "select id from cars_data order by horsepower desc limit 1",
          "select distinct id from cars_data order by horsepower desc limit 1",
          "select id from cars_data group by id order by horsepower desc limit 1",
          "select id from cars_data order by horsepower desc limit 1",
          "select id from cars_data order by horsepower asc limit 1",
          "select id from cars_data order by horsepower desc limit 1",
          "select id from cars_data order by horsepower desc 1",
          "select id from cars_data order by horsepower desc desc limit 1"
        ]
      },
      {
        "question": "How about with the max MPG?",
        "query": [
          "select id from cars_data order by mpg desc limit 1",
          "select id from cars_data order by mpg desc limit 1",
          "select id from cars_data order by mpg desc limit 1",
          "select id from cars_data order by mpg desc limit 1",
          "select distinct id from cars_data order by mpg desc limit 1",
          "select id from cars_data order by MPG desc limit 1",
          "select id from cars_data order by MPG desc limit 1",
          "select id from cars_data order by MPG desc limit 1",
          "select id from cars_data order by MPG desc limit 1",
          "select distinct max (mpg) from cars_data"
        ]
      },
      {
        "question": "Show its make!",
        "query": [
          "select t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.mpg desc limit 1",
          "select t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.mpg desc limit 1",
          "select t1.makeid from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.mpg desc limit 1",
          "select t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t1.makeid from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1"
        ]
      },
      {
        "question": "Now show its model!",
        "query": [
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What is the average edispl of all cars?",
        "query": [
          "select avg (edispl) from cars_data",
          "select avg (edispl) from cars_data",
          "select avg (edispl) from cars_data",
          "select distinct avg (edispl) from cars_data",
          "select distinct edispl from cars_data",
          "select distinct t1.edispl from cars_data as t1",
          "select distinct sum (edispl) from cars_data",
          "select distinct edispl from cars_data group by edispl",
          "select distinct (edispl) from cars_data"
        ]
      },
      {
        "question": "Can you show the average per car make?",
        "query": [
          "select avg (edispl), t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.make"
        ]
      },
      {
        "question": "How about per car model?",
        "query": [
          "select avg (edispl), t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.model",
          "select avg (edispl), t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.model",
          "select avg (edispl), t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.model",
          "select t2.model, avg (edispl) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.model",
          "select t2.model, avg (edispl) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.model",
          "select distinct t1.id, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.model",
          "select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.model"
        ]
      },
      {
        "question": "Show the average for the model volvo!",
        "query": [
          "select avg (edispl) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\"",
          "select avg (edispl) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\"",
          "select avg (t1.edispl) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\"",
          "select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" group by t2.model",
          "select avg (t1.edispl) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\"",
          "select avg (edispl) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\"",
          "select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\"",
          "select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid group by t2.model having t2.model = \"volvo\""
        ]
      }
    ],
    [
      {
        "question": "What are all the different models for each car?",
        "query": [
          "select distinct model from car_names",
          "select distinct model from car_names",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select distinct model from car_names",
          "select distinct t2.model from car_names as t1 join model_list as t2 on t1.makeid = t2.maker",
          "select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid",
          "select distinct model from car_names",
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model"
        ]
      },
      {
        "question": "What are the makes for each?",
        "query": [
          "select distinct make from car_names",
          "select make from car_names",
          "select distinct make from car_names",
          "select distinct makeid from car_names",
          "select make from car_names",
          "select distinct t1.makeid, t1.model from car_names as t1",
          "select makeid from car_names",
          "select distinct t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select distinct make from car_names",
          "select t1.makeid, t1.model from car_names as t1"
        ]
      },
      {
        "question": "How many makes are there for each?",
        "query": [
          "select count (distinct make) from car_names",
          "select count (distinct make) from car_names",
          "select distinct count (distinct make) from car_names",
          "select count (*) from car_names group by make",
          "select count (distinct make) from car_names",
          "select distinct count (make) from car_names",
          "select count (*) from car_names group by make",
          "select distinct count (*) from car_names group by make",
          "select distinct count (*) from car_names"
        ]
      },
      {
        "question": "What is the model name with the most makes?",
        "query": [
          "select model from car_names group by model order by count (distinct make) desc limit 1",
          "select distinct model from car_names group by model order by count (distinct make) desc limit 1",
          "select distinct model from car_names group by model order by count (distinct make) desc limit 1",
          "select model from car_names group by model order by count (distinct make) desc limit 1",
          "select model from car_names group by model order by count (*) desc limit 1",
          "select distinct model from car_names group by model order by count (distinct make) desc limit 1",
          "select model from car_names group by model order by count (*) desc limit 1",
          "select distinct model from car_names group by model order by count (*) desc limit 1",
          "select distinct model from car_names group by distinct model order by count (distinct make) desc limit 1",
          "select distinct model from car_names group by model order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show the full names of all the different car makers?",
        "query": [
          "select distinct maker from car_makers",
          "select distinct maker from car_makers",
          "select distinct maker from car_makers",
          "select distinct maker from car_makers",
          "select maker from car_makers",
          "select maker from car_makers",
          "select distinct maker from car_makers group by maker"
        ]
      },
      {
        "question": "Also include the car models produced by each!",
        "query": [
          "select t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select distinct t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select distinct t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select distinct t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select distinct t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select distinct t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t2.maker, t1.model from car_names as t1 join car_makers as t2 on t1.makeid = t2.id"
        ]
      },
      {
        "question": "Show me just those produced by the maker with full name American Motor Company!",
        "query": [
          "select t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select distinct t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select distinct t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select distinct t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select distinct t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select distinct t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Corporation\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select count (*) from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select distinct count (*) from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select count (*) from car_names as t1 join car_makers as t2 on t1.makeid = t2.id where t2.maker = \"American Motor Company\"",
          "select count (*) from car_names as t1 join car_makers as t2 on t1.makeid = t2.id where t2.maker = \"American Motor Company\"",
          "select distinct count (*) from car_names as t1 join car_makers as t2 on t1.makeid = t2.id where t2.maker = \"American Motor Company\"",
          "select distinct t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select count (*) from car_makers as t1 join car_names as t2 on t1.id = t2.makeid where t1.maker = \"American Motor Company\"",
          "select count (*) from car_names as t1 join car_makers as t2 on t1.makeid = t2.id where t2.maker = \"American Motor Company\""
        ]
      }
    ],
    [
      {
        "question": "What is all the information for the makers that have designed at least 1 car model!",
        "query": [
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >= 1",
          "select * from car_names as t1 join car_makers as t2 on t1.makeid = t2.id",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select * from car_names as t1 join car_makers as t2 on t1.makeid = t2.id",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >= 1",
          "select * from car_names as t1 join model_list as t2 on t1.model = t2.model",
          "select * from car_names as t1 join model_list as t2 on t1.model = t2.model",
          "select * from car_names as t1 join car_makers as t2 on t1.makeid = t2.id group by t2.id having count (*) >= 1",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id"
        ]
      },
      {
        "question": "Which ones have designed more than 1?",
        "query": [
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 1",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >= 2",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >= 2",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 1",
          "select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 1",
          "select t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 1",
          "select distinct t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 1",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >= 1",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 1",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >= 2"
        ]
      },
      {
        "question": "How about more than 3?",
        "query": [
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select distinct * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select distinct from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >3",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >3",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 2",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >= 3",
          "select * from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 4"
        ]
      },
      {
        "question": "List just the full name and id!",
        "query": [
          "select t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select t1.maker, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select t1.maker, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select distinct t1.maker, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select distinct t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3",
          "select t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >3",
          "select t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) >3",
          "select t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count (*) > 3"
        ]
      }
    ],
    [
      {
        "question": "How many different models has maker with full name General Motors produced?",
        "query": [
          "select count (distinct t1.model) from model_list as t1 join car_makers as t2 on t1.maker = t2.id where t2.maker = \"General Motors\"",
          "select count (distinct model) from model_list as t1 join car_makers as t2 on t1.maker = t2.id where t2.maker = \"General Motors\"",
          "select count (distinct model) from model_list as t1 join car_makers as t2 on t1.maker = t2.id where t2.maker = \"General Motors\"",
          "select count (distinct model) from model_list where maker = \"General Motors\"",
          "select count (distinct model) from model_list where maker = \"General Motors\"",
          "select distinct count (*) from model_list as t1 join car_makers as t2 on t1.maker = t2.id where t2.maker = \"General Motors\"",
          "select count (distinct t2.model) from car_makers as t1 join model_list as t2 on t1.id = t2.maker where t1.maker = \"General Motors\"",
          "select count (distinct model) from model_list as t1 join car_names as t2 on t1.model = t2.model where t1.maker = \"General Motors\"",
          "select count (distinct model) from model_list as t1 join car_names as t2 on t1.model = t2.model where t1.maker = \"General Motors\"",
          "select count (*) from model_list as t1 join car_makers as t2 on t1.maker = t2.id where t2.maker = \"General Motors\""
        ]
      },
      {
        "question": "How many different models weigh over 3500 pounds?",
        "query": [
          "select count (distinct t1.model) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500",
          "select count (distinct t1.model) from model_list as t1 join cars_data as t2 on t1.model = t2.id where t2.weight > 3500",
          "select distinct t1.model from model_list as t1 join cars_data as t2 on t1.model = t2.id where t2.weight > 3500",
          "select count (distinct t1.model) from model_list as t1 join cars_data as t2 on t1.model = t2.id where t2.weight > 3500",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500",
          "select distinct count (*) from cars_data where weight > 3500"
        ]
      },
      {
        "question": "How many models have either of these features?",
        "query": [
          "select count (distinct t1.model) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select count (distinct t1.model) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.weight < 3500",
          "select count (*) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select count (distinct t1.model) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.weight < 3500",
          "select count (distinct t1.model) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 35",
          "select count (*) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select count (distinct t1.model) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.weight > 3500",
          "select count (distinct t1.model) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 350",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select count (*) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.weight < 3500"
        ]
      },
      {
        "question": "Show me the distinct list of their model names!",
        "query": [
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select distinct t1.model from cars_data as t2 join car_names as t1 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500",
          "select distinct model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > 3500 or t2.mpg > 3500"
        ]
      }
    ],
    [
      {
        "question": "Show the years and weight of all the cars!",
        "query": [
          "select year, weight from cars_data",
          "select year, weight from cars_data",
          "select year, weight from cars_data",
          "select distinct year, weight from cars_data",
          "select weight, year from cars_data"
        ]
      },
      {
        "question": "Show distinct years that the cars that weigh more than 3000 were produced!",
        "query": [
          "select distinct year from cars_data where weight > 3000",
          "select distinct t1.year from cars_data as t1 where t1.weight > 3000",
          "select distinct (year) from cars_data where weight > 3000",
          "select distinct year from cars_data where weight > 3000",
          "select distinct t1.year from cars_data as t1 where t1.weight > 3000",
          "select distinct year from cars_data where weight > 3000",
          "select distinct t1.year from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where weight > 3000",
          "select distinct t1.year from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.weight > 3000",
          "select distinct t1.year from cars_data as t1 join cars_data as t2 on t1.id = t2.id where t2.weight > 3000",
          "select distinct t1.year from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where weight > 3000"
        ]
      },
      {
        "question": "How about the different years for those that weight less than 4000.",
        "query": [
          "select distinct year from cars_data where weight < 4000",
          "select distinct year from cars_data where weight < 4000",
          "select distinct year from cars_data where weight < 4000",
          "select distinct year from cars_data where weight < 4000",
          "select distinct year from cars_data where weight < 3000",
          "select distinct year from cars_data where weight < 3000"
        ]
      },
      {
        "question": "What are the distinct years, for the cars that are both?",
        "query": [
          "select distinct year from cars_data where weight > 3000 and weight < 4000",
          "select distinct year from cars_data where weight > 3000 and weight < 4000",
          "select distinct year from cars_data where weight > 3000 and weight < 4000",
          "select distinct year from cars_data where weight < 4000",
          "select distinct year from cars_data where weight > 3000 and weight < 4000",
          "select distinct year from cars_data where weight > 4000 and weight < 4000",
          "select distinct year from cars_data where weight < 4000 and weight > 3000",
          "select distinct year from cars_data where weight > 3000 and weight < 40000",
          "select distinct year from cars_data where weight > 3000 and weight < 4500",
          "select distinct year from cars_data where weight > 3000 and weight <4000"
        ]
      }
    ],
    [
      {
        "question": "What is the lowest accelerate for any car?",
        "query": [
          "select min (accelerate) from cars_data",
          "select accelerate from cars_data order by accelerate asc limit 1",
          "select min (accelerate) from cars_data",
          "select max (accelerate) from cars_data",
          "select distinct min (accelerate) from cars_data",
          "select max (accelerate) from cars_data",
          "select distinct accelerate from cars_data order by accelerate asc limit 1",
          "select distinct max (accelerate) from cars_data",
          "select accelerate from cars_data order by accelerate limit 1",
          "select accelerate from cars_data order by accelerate limit 1"
        ]
      },
      {
        "question": "How about the highest?",
        "query": [
          "select max (accelerate) from cars_data",
          "select max (accelerate) from cars_data",
          "select max (accelerate) from cars_data",
          "select distinct max (accelerate) from cars_data",
          "select distinct (max (accelerate)) from cars_data",
          "select max (accelerate) from cars_data"
        ]
      },
      {
        "question": "What is the ID, Make and Model of this car?",
        "query": [
          "select t1.id, t2.make, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select t1.id, t2.make, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select t1.id, t2.makeid, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1"
        ]
      },
      {
        "question": "Show just its horsepower.",
        "query": [
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select distinct t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select distinct t1.id, t2.make, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select t2.make, t2.model, t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select t2.model, t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1",
          "select t1.id, t2.make, t2.model from cars_data as t1 join car_names as t2 on t1.id = t2.makeid order by t1.accelerate desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show all the car information for any car of the model volvo!",
        "query": [
          "select * from car_names where model = \"volvo\"",
          "select * from car_names where model = \"volvo\"",
          "select * from car_names where model = \"volvo\"",
          "select * from car_names where make = \"volvo\"",
          "select * from car_names where model = \"volvo!\"",
          "select * from car_names where model = \"volvo!\"",
          "select * from car_names where make = \"volvo\"",
          "select * from car_names where model = \"Volvo\"",
          "select * from cars_data"
        ]
      },
      {
        "question": "What is the car with the least accelerate?",
        "query": [
          "select * from cars_data order by accelerate asc limit 1",
          "select * from cars_data order by accelerate asc limit 1",
          "select * from cars_data where accelerate = (select min (accelerate) from cars_data)",
          "select * from cars_data where accelerate = (select min (accelerate) from cars_data)",
          "select * from cars_data order by accelerate limit 1"
        ]
      },
      {
        "question": "What is its horsepower?",
        "query": [
          "select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit 1",
          "select horsepower from cars_data order by accelerate asc limit 1",
          "select t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t1.model = \"volvo\" order by t2.accelerate asc limit 1",
          "select t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.accelerate asc limit 1",
          "select distinct t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit 1",
          "select horsepower from cars_data order by accelerate asc limit 1",
          "select min (horsepower) from cars_data order by accelerate asc limit 1",
          "select max (horsepower) from cars_data order by accelerate asc limit 1",
          "select t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.accelerate asc limit 1",
          "select min (horsepower) from cars_data order by accelerate asc limit 1"
        ]
      },
      {
        "question": "What about its number of cylinders?",
        "query": [
          "select t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit 1",
          "select t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit 1",
          "select distinct t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit 1",
          "select t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit 1",
          "select t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate desc limit 1",
          "select t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate desc limit 1",
          "select distinct t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate desc limit 1",
          "select count (*) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit 1",
          "select distinct count (*) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit 1",
          "select t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = \"volvo\" order by t1.accelerate asc limit1"
        ]
      }
    ],
    [
      {
        "question": "What is largest horsepower of all cars?",
        "query": [
          "select max (horsepower) from cars_data",
          "select max (horsepower) from cars_data",
          "select distinct max (horsepower) from cars_data",
          "select max (horsepower) from cars_data",
          "select max (horsepower) from cars_data",
          "select distinct max (horsepower) from cars_data",
          "select max (horsepower) from cars_data"
        ]
      },
      {
        "question": "What is the accelerate of the car with this horsepower?",
        "query": [
          "select accelerate from cars_data where horsepower = (select max (horsepower) from cars_data)",
          "select accelerate from cars_data where horsepower = (select max (horsepower) from cars_data)",
          "select accelerate from cars_data order by horsepower desc limit 1",
          "select accelerate from cars_data order by horsepower desc limit 1",
          "select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.horsepower = (select max (horsepower) from cars_data)",
          "select max (accelerate) from cars_data where horsepower = (select max (horsepower) from cars_data)",
          "select max (accelerate) from cars_data where horsepower = (select max (horsepower) from cars_data)",
          "select accelerate from cars_data where horsepower = (select max (horsepower) from cars_data)",
          "select distinct t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.horsepower = (select max (horsepower) from cars_data)",
          "select accelerate from cars_data order by horsepower desc limit 1"
        ]
      },
      {
        "question": "What are the car ids of the cars with a greater accelerate than this?",
        "query": [
          "select id from cars_data where accelerate > (select max (horsepower) from cars_data)",
          "select id from cars_data where accelerate > (select max (horsepower) from cars_data)",
          "select t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.accelerate > (select max (accelerate) from cars_data)",
          "select distinct id from cars_data where accelerate > (select max (horsepower) from cars_data)",
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.accelerate > (select max (accelerate) from cars_data)",
          "select t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.accelerate > (select max (horsepower) from cars_data)",
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.accelerate > (select max (horsepower) from cars_data)",
          "select t1.id from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t1.accelerate > (select max (accelerate) from cars_data)"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from cars_data where accelerate > (select max (horsepower) from cars_data)",
          "select count (*) from cars_data where accelerate > (select max (horsepower) from cars_data)",
          "select distinct count (*) from cars_data where accelerate > (select max (horsepower) from cars_data)",
          "select count (*) from cars_data where accelerate > (select max (horsepower) from cars_data)",
          "select distinct count (id) from cars_data where accelerate > (select max (horsepower) from cars_data)",
          "select count (*) from cars_data where accelerate > (select max (horsepower) from cars_data)"
        ]
      }
    ],
    [
      {
        "question": "What are the names of the countries that have no car makers?",
        "query": [
          "select countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid"
        ]
      },
      {
        "question": "Show me all the names of all the different countries outside of those!",
        "query": [
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct (countryname) from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct count (*) from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country"
        ]
      },
      {
        "question": "How many of these have more than 1 car maker?",
        "query": [
          "select count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 1",
          "select count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 1",
          "select count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryname having count (*) > 1",
          "select distinct t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryname having count (*) > 1",
          "select distinct count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 1",
          "select count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryname having count (*) > 1",
          "select count (distinct t1.countryname) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryname having count (*) > 1",
          "select count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 1",
          "select distinct count (t1.countryname) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryname having count (*) > 1",
          "select distinct t1.countryname, count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryname having count (*) > 1"
        ]
      },
      {
        "question": "How about more than 2?",
        "query": [
          "select count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 2",
          "select count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 2",
          "select distinct count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 2",
          "select distinct t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 2",
          "select count (*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 2",
          "select distinct countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count (*) > 2"
        ]
      }
    ],
    [
      {
        "question": "Show all models and horsepowers of all cars!",
        "query": [
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select from model_list as t1 join cars_data as t2 on t1.modelid = t2.id",
          "select distinct model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id",
          "select distinct model from car_names",
          "select from cars_data as t1 join car_names as t2 on t1.id = t2.makeid"
        ]
      },
      {
        "question": "Now show just the ones with 4 cylinders.",
        "query": [
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4",
          "select distinct t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4",
          "select distinct t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4",
          "select distinct model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4",
          "select distinct from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = \"4\"",
          "select distinct count (*) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where cylinders = 4",
          "select * from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4"
        ]
      },
      {
        "question": "What is the model of that with the lowest horsepower?",
        "query": [
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower asc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by horsepower asc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower asc limit 1",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower asc limit 1",
          "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower asc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower asc limit 1",
          "select distinct model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower asc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower asc limit 1"
        ]
      },
      {
        "question": "How about the greatest horsepower?",
        "query": [
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select distinct model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select distinct count (*) from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1",
          "select distinct t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc"
        ]
      }
    ],
    [
      {
        "question": "What is the lowest horsepower of all cars?",
        "query": [
          "select distinct min (horsepower) from cars_data",
          "select distinct max (horsepower) from cars_data",
          "select min (horsepower) from cars_data",
          "select min (horsepower) from cars_data",
          "select max (horsepower) from cars_data",
          "select distinct (min (horsepower)) from cars_data",
          "select *select min (horsepower) from cars_data",
          "select from cars_data order by horsepower asc limit 1"
        ]
      },
      {
        "question": "Show all the ids and makes of those with a horsepower greater than this!",
        "query": [
          "select from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.horsepower > (select min (horsepower) from cars_data)",
          "select from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.horsepower > (select max (horsepower) from cars_data)"
        ]
      },
      {
        "question": "Which ones have 5 cylinders or less?",
        "query": [
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 5",
          "select distinct t2.makeid from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 5",
          "select from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 5",
          "select distinct from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 5",
          "select distinct count (*) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 5",
          "select distinct * from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 5",
          "select distinct id from cars_data where cylinders <= 5",
          "select distinct from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders <= 5",
          "select distinct t1.id, t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders < 5",
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders >= 5"
        ]
      },
      {
        "question": "How about 3 or less?",
        "query": [
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 3",
          "select from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 3",
          "select distinct from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 3",
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 3",
          "select distinct count (*) from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 3",
          "select distinct id from cars_data where cylinders <= 3",
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 3",
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders <= 3",
          "select distinct t1.id from car_names as t2 join cars_data as t1 on t1.id = t2.makeid where t1.cylinders <= 3",
          "select distinct t1.id from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders >= 3"
        ]
      }
    ],
    [
      {
        "question": "Show me the mpg, horsepower and accelerate for all the cars that were produced before 1980!",
        "query": [
          "select mpg, horsepower, accelerate from cars_data where year < 1980",
          "select mpg, horsepower, accelerate from cars_data where year < 1980",
          "select mpg, horsepower, accelerate from cars_data where year < 1980",
          "select mpg from cars_data where year < 1980",
          "select mpg from cars_data where year < 1980",
          "select * from cars_data where year < 1980",
          "select mpg, horsepower, accelerate from cars_data where year <1980",
          "select mpg, horsepower, accelerate from cars_data where year < 1981"
        ]
      },
      {
        "question": "Also include the cars that have 8 cylinders!",
        "query": [
          "select mpg, horsepower, accelerate from cars_data where year < 1980 or cylinders = 8",
          "select mpg, horsepower, accelerate from cars_data where year < 1980 or cylinders = 8",
          "select mpg, horsepower, accelerate from cars_data where year < 1980 and cylinders = 8",
          "select mpg, horsepower, accelerate from cars_data where year < 1980 or cylinders = 8",
          "select mpg, horsepower, accelerate from cars_data where year < 1980 intersect select mpg, horsepower, accelerate from cars_data where cylinders = 8",
          "select mpg, horsepower, accelerate from cars_data where year < 1980 and cylinders = 8",
          "select mpg, horsepower, accelerate from cars_data where year < 1980 intersect select mpg, horsepower, accelerate from cars_data where cylinders = 8",
          "select max (mpg), max (horsepower), max (accelerate) from cars_data where cylinders = 8",
          "select mpg, horsepower, accelerate from cars_data where cylinders = 8 and year < 1980",
          "select mpg, horsepower, accelerate from cars_data where year < 1980 or cylinders = \"8\""
        ]
      },
      {
        "question": "What is the max horsepower for this group?",
        "query": [
          "select max (horsepower) from cars_data where year < 1980 or cylinders = 8",
          "select max (horsepower) from cars_data where year < 1980 or cylinders = 8",
          "select distinct max (horsepower) from cars_data where year < 1980 or cylinders = 8",
          "select max (horsepower) from cars_data where year < 1980 or cylinders = 8",
          "select distinct (max (horsepower)) from cars_data where year < 1980 or cylinders = 8",
          "select max (horsepower) from cars_data where year < 1980 or cylinders = 8",
          "select max (horsepower) from cars_data where year < 1980 or cylinders = 1",
          "select max (horsepower) from cars_data where year < 1980 or cylinders = 9"
        ]
      },
      {
        "question": "how about the max mpg?",
        "query": [
          "select max (mpg) from cars_data where year < 1980 or cylinders = 8",
          "select max (mpg) from cars_data where year < 1980 or cylinders = 8",
          "select max (mpg) from cars_data where year < 1980 or cylinders = 8",
          "select distinct max (mpg) from cars_data where year < 1980 or cylinders = 8",
          "select distinct (max (mpg)) from cars_data where year < 1980 or cylinders = 8",
          "select distinct (mpg) from cars_data where year < 1980 or cylinders = 8",
          "select max (mpg) from cars_data where year < 1980 and cylinders = 8"
        ]
      }
    ],
    [
      {
        "question": "Show all the models that were built by the Ford Motor Company.",
        "query": [
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select distinct t1.model from model_list as t1 join car_makers as t2 on t1.maker = t2.id where t2.maker = \"Ford Motor Company\"",
          "select distinct t2.model from car_names as t1 join model_list as t2 on t1.makeid = t2.maker where t1.make = \"Ford Motor Company\"",
          "select distinct t1.model from car_names as t1 join car_makers as t2 on t1.makeid = t2.id where t2.maker = \"Ford Motor Company\"",
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model where t2.make = \"Ford Motor Company\"",
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model where t2.makeid = \"Ford Motor Company\"",
          "select distinct t2.model from car_names as t1 join model_list as t2 on t1.model = t2.model where t1.make = \"Ford Motor Company\"",
          "select distinct t1.model from car_names as t2 join model_list as t1 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select distinct t1.model from car_names as t2 join model_list as t1 on t2.model = t1.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select distinct t2.model from car_names as t1 join model_list as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t2.maker where t3.maker = \"Ford Motor Company\""
        ]
      },
      {
        "question": "What are all the models except those!",
        "query": [
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker!= \"Ford Motor Company\"",
          "select distinct model from model_list except select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model except select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select distinct model from model_list except select t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker except select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select except select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model except select t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select distinct model from model_list where model not in (select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\")",
          "select distinct model from car_names except select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\"",
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\""
        ]
      },
      {
        "question": "Also provide the weights for all different makes for each of these models.",
        "query": [
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker!= \"Ford Motor Company\""
        ]
      },
      {
        "question": "List all the different models from these that have makes that are lighter than 3500!",
        "query": [
          "select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t2.makeid in (select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join car_makers as t3 on t3.id = t1.maker where t3.maker = \"Ford Motor Company\" and t2.makeid < 3500)"
        ]
      }
    ],
    [
      {
        "question": "What are all the names of countries?",
        "query": [
          "select countryname from countries",
          "select countryname from countries",
          "select distinct countryname from countries",
          "select countryname from countries",
          "select distinct countryname from countries",
          "select * from countries"
        ]
      },
      {
        "question": "Which ones have at least one car maker?",
        "query": [
          "select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.countryname, t2.maker from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select distinct t1.countryname, t2.maker from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.countryname, t2.maker from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid",
          "select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid"
        ]
      },
      {
        "question": "Show me all of car names other than these!",
        "query": [
          "select model from car_names where model not in (select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country)",
          "select model from car_names where model not in (select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country)",
          "select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select makeid from car_names where makeid not in (select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country)",
          "select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select makeid from car_names where makeid not in (select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country)",
          "select model from car_names except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select distinct t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid except select t1.countryname from countries as t1 join car_names as t2 on t1.countryid = t2.makeid",
          "select makeid from car_names except select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country",
          "select makeid from car_names where makeid not in (select t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.country)"
        ]
      }
    ],
    [
      {
        "question": "Show all the car maker id, names, the models and makes they produce!",
        "query": [
          "select t1.id, t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.id, t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.id, t1.maker, t2.model, t2.make from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.id, t1.maker, t2.model from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.id, t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker",
          "select t2.id, t2.maker, t1.model from car_names as t1 join car_makers as t2 on t1.makeid = t2.id",
          "select t1.id, t1.maker, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker"
        ]
      },
      {
        "question": "How many model does each car maker produce? List the id and maker!",
        "query": [
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id",
          "select distinct t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id",
          "select distinct t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id",
          "select id, maker, count (*) from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id",
          "select id, maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id"
        ]
      },
      {
        "question": "Show me those that produce at least 2!",
        "query": [
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 2",
          "select distinct t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 2",
          "select distinct t1.id from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 2",
          "select distinct count (*) from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 2",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) = 2",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) = 2",
          "select distinct t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) = 2"
        ]
      },
      {
        "question": "For each of these, only show those that have more than 3 car makes!",
        "query": [
          "select distinct t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 2",
          "select distinct t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 3",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 3",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 2",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) > 3",
          "select distinct t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) > 3",
          "select t1.id, t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) > 3",
          "select distinct count (*) from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 2",
          "select distinct count (*) from car_makers as t1 join car_names as t2 on t1.id = t2.makeid group by t1.id having count (*) >= 3"
        ]
      }
    ]
  ],
  "wta_1": [
    [
      {
        "question": "How many matches are there?",
        "query": [
          "select count (*) from matches",
          "select distinct count (*) from matches",
          "select distinct match_num from matches"
        ]
      },
      {
        "question": "What was the maximum length in minutes for the matches?",
        "query": [
          "select max (minutes) from matches",
          "select max (minutes) from matches",
          "select distinct max (minutes) from matches",
          "select max (minutes) from matches",
          "select max (minutes) from matches",
          "select min (minutes) from matches"
        ]
      },
      {
        "question": "Average?",
        "query": [
          "select avg (minutes) from matches",
          "select avg (minutes) from matches",
          "select distinct avg (minutes) from matches",
          "select avg (minutes) from matches",
          "select distinct count (*) from matches",
          "select distinct (minutes) from matches",
          "select distinct sum (minutes) from matches",
          "select distinct (minutes) from matches group by minutes"
        ]
      },
      {
        "question": "How about for the age of losers and winners?",
        "query": [
          "select avg (winner_age), avg (loser_age) from matches",
          "select avg (loser_age), avg (winner_age) from matches",
          "select avg (winner_age), avg (loser_age) from matches",
          "select avg (loser_age), avg (winner_age) from matches",
          "select avg (winner_age), avg (winner_age) from matches",
          "select max (winner_age), max (loser_age) from matches",
          "select max (winner_age), avg (winner_age) from matches",
          "select avg (winner_age), avg (loser_age) from matches",
          "select avg (winner_age), avg (winner_age) from matches",
          "select avg (loser_age), avg (winner_age) from matches"
        ]
      }
    ],
    [
      {
        "question": "How many distinct tourney names are there?",
        "query": [
          "select distinct tourney_name from matches"
        ]
      },
      {
        "question": "Which ones have more than 20 matches?",
        "query": [
          "select distinct tourney_name from matches group by tourney_name having count (*) > 20",
          "select tourney_name from matches group by tourney_name having count (*) > 20",
          "select distinct tourney_name from matches group by tourney_name having count (*) > 20",
          "select distinct tourney_name from matches group by tourney_name having count (*) > 20",
          "select tourney_name from matches group by tourney_name having count (*) > 20",
          "select t1.tourney_name from matches as t1 join matches as t2 on t1.tourney_id = t2.tourney_id group by t1.tourney_name having count (*) > 20",
          "select distinct tourney_name from matches where count (*) > 20"
        ]
      },
      {
        "question": "More than 10?",
        "query": [
          "select distinct tourney_name from matches group by tourney_name having count (*) > 10",
          "select distinct tourney_name from matches group by tourney_name having count (*) > 10",
          "select distinct tourney_name from matches group by tourney_name having count (*) > 10",
          "select distinct tourney_name from matches group by tourney_name having count (*) > 10",
          "select distinct tourney_name from matches group by tourney_name having count (*) > 20",
          "select distinct tourney_name from matches group by tourney_name having count (*) > 20"
        ]
      }
    ],
    [
      {
        "question": "How many distinct winners played in 2013?",
        "query": [
          "select count (distinct winner_id) from matches where year = 2013",
          "select count (distinct winner_name) from matches where year = 2013",
          "select count (distinct winner_age) from matches where year = 2013",
          "select count (distinct winner_name) from matches where year = 2013",
          "select count (distinct winner_id) from matches where year = 2013",
          "select count (distinct winner_entry) from matches where year = 2013",
          "select distinct count (*) from matches where year = 2013",
          "select count (*) from matches where year = 2013",
          "select count (distinct winner_age) from matches where year = 2013",
          "select count (distinct winner_id) from matches where year = 2013"
        ]
      },
      {
        "question": "Of those, how many also played in 2016.",
        "query": [
          "select count (distinct winner_id) from matches where year = 2013 intersect select count (distinct winner_id) from matches where year = 2016",
          "select count (*) from matches where year = 2013 intersect select count (*) from matches where year = 2016",
          "select distinct count (*) from matches where year = 2013 intersect select count (*) from matches where year = 2016",
          "select count (distinct winner_id) from matches where year = 2016 and year = 2013",
          "select count (distinct winner_id) from matches where year = 2013 and year = 2016",
          "select count (distinct winner_id) from matches where year = 2016",
          "select count (*) from matches where year = 2013 intersect select count (*) from matches where year = 2016",
          "select distinct count (distinct winner_id) from matches where year = 2013 intersect select count (distinct winner_id) from matches where year = 2016",
          "select count (distinct winner_id) from matches where year = 2013 or year = 2016",
          "select count (*) from matches where year = 2016 and winner_id in (select distinct winner_id from matches where year = 2013)"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select distinct winner_name from matches where year = 2013 intersect select distinct winner_name from matches where year = 2016",
          "select distinct winner_name from matches where year = 2013 intersect select distinct winner_name from matches where year = 2016",
          "select distinct winner_name from matches where year = 2013 intersect select distinct winner_name from matches where year = 2016",
          "select winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016",
          "select distinct t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.year = 2013 intersect select distinct t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.year = 2016",
          "select winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016",
          "select t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.year = 2013 intersect select t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.year = 2016",
          "select t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.year = 2013 intersect select t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.year = 2016",
          "select distinct winner_id from matches where year = 2013 intersect select distinct winner_id from matches where year = 2016",
          "select distinct t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.year = 2013 intersect select t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.year = 2016"
        ]
      }
    ],
    [
      {
        "question": "How many matches were played?",
        "query": [
          "select count (*) from matches",
          "select count (*) from matches",
          "select count (*) from matches",
          "select distinct count (*) from matches",
          "select distinct match_num from matches"
        ]
      },
      {
        "question": "How many where the loser hand is L?",
        "query": [
          "select count (*) from matches where loser_hand = \"L\"",
          "select count (*) from matches where loser_hand = \"L\"",
          "select count (*) from matches where loser_hand = \"L\"",
          "select distinct count (*) from matches where loser_hand = \"L\"",
          "select count (*) from matches where loser_hand = \"Left\"",
          "select count (distinct loser_hand) from matches where loser_hand = \"L\"",
          "select count (*) from matches where loser_hand = \"R\"",
          "select count (*) from matches where loser_hand = \"LH\""
        ]
      },
      {
        "question": "How many played in year 2013 or 2016?",
        "query": [
          "select count (*) from matches where year = 2013 or year = 2016",
          "select count (*) from matches where year = 2013 or year = 2016",
          "select count (*) from matches where year = 2013 or year = 2016",
          "select distinct count (*) from matches where year = 2013 or year = 2016",
          "select count (*) from matches where year = 2016 or year = 2013",
          "select count (*) from matches where year = 2016 or year = 2013",
          "select count (*) from matches where year = 2014 or year = 2016",
          "select count (*) from matches where year = 13 or year = 2016",
          "select count (*) from matches where tourney_date like \"2013%\""
        ]
      }
    ],
    [
      {
        "question": "How many players are there?",
        "query": [
          "select count (*) from players",
          "select count (*) from players",
          "select distinct count (*) from players",
          "select count (*) from players",
          "select distinct player_id from players"
        ]
      },
      {
        "question": "Which ones won in the tourney WTA Championships? Give their last name and birth date.",
        "query": [
          "select t1.last_name, t1.birth_date from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.last_name, t1.birth_date from players as t1 join matches as t2 on t1.player_id = t2.winner_id where tourney_name = \"WTA Championships\"",
          "select t1.last_name, t1.birth_date from players as t1 join matches as t2 where t2.tourney_name = \"WTA Championships\"",
          "select t1.last_name, t1.birth_date from players as t1 join matches as t2 on t1.player_id = t2.winner_id where tourney_name = \"WTA Championships\"",
          "select t1.first_name, t1.birth_date from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.last_name, t1.birth_date from players as t1 join matches as t2 where t2.tourney_name = \"WTA Championships\"",
          "select distinct t1.last_name, t1.birth_date from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.last_name, t1.birth_date from players as t1 join matches as t2 where t1.player_id in (select winner_id from matches where tourney_name = \"WTA Championships\")",
          "select t1.last_name, t1.birth_date from players as t1 join matches as t2 on t1.player_id = winner_id where t2.tourney_name = \"WTA Championships\""
        ]
      },
      {
        "question": "Give first name and country code instead.",
        "query": [
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select distinct t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.first_name, country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.first_name, country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select first_name, country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select first_name, country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"Wta Championships\""
        ]
      },
      {
        "question": "Which ones also won in the Australian Open?",
        "query": [
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" and t1.country_code = \"Australia\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" or t2.tourney_name = \"Australian Open\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" and t1.country_code = \"Australia\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" or t2.tourney_name = \"Australian Open\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" or t1.country_code = \"Australia\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" or t1.country_code = \"Australia\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" and t1.country_code = \"AU\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" and t1.country_code = \"Australia\"",
          "select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" or t2.tourney_name = \"Australian Open\"",
          "select t1.last_name, t1.birth_date from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = \"WTA Championships\" and t1.country_code = \"Australia\""
        ]
      }
    ],
    [
      {
        "question": "What is the birth date of the oldest player?",
        "query": [
          "select birth_date from players order by birth_date desc limit 1",
          "select birth_date from players order by birth_date asc limit 1",
          "select birth_date from players order by birth_date desc limit 1",
          "select birth_date from players order by birth_date asc limit 1",
          "select distinct birth_date from players order by birth_date desc limit 1",
          "select birth_date from players order by birth_date limit 1",
          "select birth_date from players order by birth_date desc limit 1",
          "select distinct birth_date from players order by birth_date asc limit 1",
          "select birth_date from players order by birth_date asc limit 1",
          "select birth_date from players order by birth_date limit 1"
        ]
      },
      {
        "question": "Give the player id and last name instead.",
        "query": [
          "select player_id, last_name from players order by birth_date desc limit 1",
          "select player_id, last_name from players order by birth_date desc limit 1",
          "select player_id, last_name from players order by birth_date desc limit 1",
          "select first_name, last_name from players order by birth_date desc limit 1",
          "select first_name, last_name from players order by birth_date desc limit 1",
          "select distinct player_id, last_name from players order by birth_date desc limit 1",
          "select player_id, last_name from players order by birth_date asc limit 1",
          "select distinct t1.player_id, t1.last_name from players as t1"
        ]
      },
      {
        "question": "Give the first name and country code instead.",
        "query": [
          "select first_name, country_code from players order by birth_date desc limit 1",
          "select first_name, country_code from players order by birth_date desc limit 1",
          "select first_name, country_code from players order by birth_date desc limit 1",
          "select distinct first_name, country_code from players order by birth_date desc limit 1",
          "select distinct player_id, last_name from players order by birth_date desc limit 1",
          "select distinct player_id, first_name, country_code from players order by birth_date desc limit 1",
          "select first_name, country_code from players order by birth_date asc limit 1",
          "select distinct t1.first_name, t1.country_code from players as t1"
        ]
      }
    ],
    [
      {
        "question": "How many players have right / R hand?",
        "query": [
          "select count (*) from players where hand = \"R\"",
          "select count (*) from players where hand = \"R\"",
          "select distinct count (*) from players where hand = \"R\"",
          "select count (*) from players where hand = \"R\"",
          "select count (*) from players where Hand = \"R\""
        ]
      },
      {
        "question": "Left / L hand?",
        "query": [
          "select count (*) from players where hand = \"L\"",
          "select count (*) from players where hand = \"L\"",
          "select count (*) from players where hand = \"L\"",
          "select distinct count (*) from players where hand = \"L\"",
          "select count (*) from players where hand = \"Left\"",
          "select count (*) from players where hand = \"Left\"",
          "select count (*) from players where hand = \"R\"",
          "select * from players where hand = \"L\"",
          "select distinct count (*) from players where hand = \"Left\""
        ]
      },
      {
        "question": "Give their country code and birth date.",
        "query": [
          "select country_code, birth_date from players where hand = \"L\"",
          "select country_code, birth_date from players where hand = \"L\"",
          "select country_code, birth_date from players where hand = \"L\"",
          "select country_code, birth_date from players where hand = \"R\"",
          "select country_code, birth_date from players where hand = \"R\"",
          "select distinct country_code, birth_date from players where hand = \"L\"",
          "select country_code, birth_date from players where hand = \"R\""
        ]
      },
      {
        "question": "Order by their birth date, and give the first and last name instead.",
        "query": [
          "select first_name, last_name from players where hand = \"L\" order by birth_date asc",
          "select first_name, last_name from players where hand = \"L\" order by birth_date",
          "select first_name, last_name from players where hand = \"L\" order by birth_date asc",
          "select first_name, last_name from players where hand = \"L\" order by birth_date desc",
          "select first_name, last_name from players where hand = \"L\" order by birth_date",
          "select first_name, last_name from players where hand = \"L\" order by birth_date, first_name",
          "select first_name, last_name from players where hand = \"L\" order by birth_date desc",
          "select first_name, last_name from players where hand = \"L\" order by birth_date desc limit 1",
          "select first_name, last_name from players where hand = \"L\" order by birth_date asc limit 1",
          "select first_name, last_name from players where hand = \"L\" order by birth_date"
        ]
      }
    ],
    [
      {
        "question": "How many players are there?",
        "query": [
          "select count (*) from players",
          "select count (*) from players",
          "select distinct count (*) from players",
          "select count (*) from players",
          "select distinct player_id from players"
        ]
      },
      {
        "question": "How many tours did the player who did the least number of tours do?",
        "query": [
          "select count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) asc limit 1",
          "select count (*) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) asc limit 1",
          "select count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t2.player_id order by count (*) asc limit 1",
          "select t1.tours from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) asc limit 1",
          "select t2.tours from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) asc limit 1",
          "select count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t2.first_name order by count (*) asc limit 1",
          "select t1.tours from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t2.player_id order by count (*) asc limit 1",
          "select count (*) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name order by count (*) asc limit 1",
          "select tourney_level from matches group by tourney_level order by count (*) asc limit 1"
        ]
      },
      {
        "question": "Most number of tours?",
        "query": [
          "select count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select distinct count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) asc limit 1",
          "select count (*) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select count (*) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select count (*) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) asc limit 1",
          "select count (*) from matches as t1 join players as t2 on t1.winner_id = t2.player_id group by t1.winner_id order by count (*) desc limit 1",
          "select count (*) from matches as t1 join players as t2 on t1.winner_id = t2.player_id group by t1.winner_id order by count (*) desc limit 1"
        ]
      },
      {
        "question": "Give the first name and country code instead.",
        "query": [
          "select t2.first_name, t2.country_code from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select t2.first_name, t2.country_code from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select distinct t2.first_name, t2.country_code from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select t2.first_name, t2.country_code from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select t2.first_name, t1.player_id from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select t2.first_name, t1.player_id from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) desc limit 1",
          "select t2.first_name, t2.country_code from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) asc limit 1",
          "select t2.first_name, t2.country_code from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t1.player_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "How many matches are there?",
        "query": [
          "select count (*) from matches",
          "select distinct count (*) from matches",
          "select distinct match_num from matches"
        ]
      },
      {
        "question": "Find the surface that has the most number.",
        "query": [
          "select surface from matches group by surface order by count (*) desc limit 1",
          "select distinct surface from matches group by surface order by count (*) desc limit 1",
          "select surface from matches order by surface desc limit 1",
          "select distinct surface from matches order by surface desc limit 1",
          "select surface from matches group by surface order by count (*) asc limit 1",
          "select surface from matches order by surface desc limit 1",
          "select Surface from matches group by Surface order by count (*) desc limit 1",
          "select distinct surface from matches",
          "select surface from matches order by surface asc limit 1",
          "select surface from matches group by surface order by count (*) desc 1"
        ]
      },
      {
        "question": "What about the year?",
        "query": [
          "select year from matches group by year order by count (*) desc limit 1",
          "select year from matches group by year order by count (*) desc limit 1",
          "select distinct year from matches group by year order by count (*) desc limit 1",
          "select year from matches group by year order by count (*) desc limit 1",
          "select tourney_date from matches order by year desc limit 1",
          "select tourney_date from matches order by year desc limit 1",
          "select year from matches order by year desc limit 1",
          "select year from matches order by year desc limit 1",
          "select tourney_date from matches order by tourney_date desc limit 1",
          "select distinct year from matches order by year desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Find the name of the loser who lost the most times.",
        "query": [
          "select loser_name from matches group by loser_name order by count (*) desc limit 1",
          "select loser_name from matches group by loser_name order by count (*) desc limit 1",
          "select loser_name from matches order by loser_entry desc limit 1",
          "select t1.loser_name from matches as t1 join players as t2 on t1.loser_id = t2.player_id group by t1.loser_id order by count (*) desc limit 1",
          "select loser_name from matches order by loser_entry desc limit 1",
          "select loser_name from matches group by loser_id order by count (*) desc limit 1",
          "select loser_name from matches order by count (*) desc limit 1",
          "select loser_name from matches group by loser_id order by count (*) desc limit 1",
          "select loser_name from matches group by loser_name order by count (*) desc limit 1",
          "select distinct loser_name from matches group by loser_name order by count (*) desc limit 1"
        ]
      },
      {
        "question": "Give the rank points as well.",
        "query": [
          "select loser_rank_points, loser_name from matches group by loser_name order by count (*) desc limit 1",
          "select loser_rank_points, loser_name from matches group by loser_name order by count (*) desc limit 1",
          "select winner_rank_points, loser_rank_points from matches group by loser_name order by count (*) desc limit 1",
          "select loser_name, loser_rank_points from matches group by loser_name order by count (*) desc limit 1",
          "select t1.loser_name, t1.loser_rank_points from matches as t1 join players as t2 on t1.loser_id = t2.player_id group by t1.loser_name order by count (*) desc limit 1",
          "select loser_rank_points, loser_name from matches group by loser_name order by count (*) desc limit 1",
          "select winner_rank_points, loser_rank_points from matches group by loser_name order by count (*) desc limit 1",
          "select loser_rank_points from matches group by loser_name order by count (*) desc limit 1",
          "select t1.loser_name, t1.loser_rank_points from matches as t1 join rankings as t2 on t1.loser_id = t2.player_id group by t1.loser_name order by count (*) desc limit 1",
          "select t1.loser_rank_points, t1.loser_name from matches as t1 join players as t2 on t1.loser_id = t2.player_id group by t1.loser_name order by count (*) desc limit 1"
        ]
      },
      {
        "question": "Give the same, but for the winner who won the most times.",
        "query": [
          "select winner_rank_points, winner_name from matches group by winner_name order by count (*) desc limit 1",
          "select winner_rank_points, winner_name from matches group by winner_name order by count (*) desc limit 1",
          "select winner_rank_points, winner_name from matches group by winner_name order by count (*) desc limit 1",
          "select winner_name, winner_rank_points from matches group by winner_name order by count (*) desc limit 1",
          "select winner_name, winner_rank_points from matches group by winner_name order by count (*) desc limit 1",
          "select distinct winner_name from matches group by winner_name order by count (*) desc limit 1",
          "select distinct winner_name, winner_rank_points from matches group by winner_name order by count (*) desc limit 1",
          "select distinct count (*) from matches group by winner_name order by count (*) desc limit 1",
          "select winner_rank_points,winner_name from matches group by winner_name order by count (*) desc limit 1",
          "select distinct winner_rank_points, winner_name from matches group by winner_name order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Give the name of the loser who has the highest rank points.",
        "query": [
          "select loser_name from matches order by loser_rank_points desc limit 1",
          "select loser_name from matches order by loser_rank_points desc limit 1",
          "select loser_name from matches order by loser_rank_points desc limit 1",
          "select distinct loser_name from matches order by loser_rank_points desc limit 1",
          "select winner_name from matches order by winner_rank_points desc limit 1",
          "select winner_name from matches order by winner_rank_points desc limit 1",
          "select t1.loser_name from matches as t1 join players as t2 on t1.loser_id = t2.player_id order by loser_rank_points desc limit 1",
          "select winner_name from matches order by loser_rank_points desc limit 1",
          "select distinct winner_name from matches order by winner_rank_points desc limit 1",
          "select loser_name from matches order by loser_rank_points asc limit 1"
        ]
      },
      {
        "question": "Do the same but for the Australian Open tourney.",
        "query": [
          "select loser_name from matches where tourney_name = \"Australian Open\" order by loser_rank_points desc limit 1",
          "select loser_name from matches where tourney_name = \"Australian Open\" order by loser_rank_points desc limit 1",
          "select loser_name from matches where tourney_name = \"Australia Open\" order by loser_rank_points desc limit 1",
          "select winner_name from matches where tourney_name = \"Australian Open\" order by winner_rank_points desc limit 1",
          "select loser_name from matches where tourney_name = \"Australian Open\" order by loser_rank_points desc limit 1",
          "select winner_name from matches where tourney_name = \"Australian Open\" order by winner_rank_points desc limit 1",
          "select loser_name from matches where tourney_name = \"Australia Open\" order by loser_rank_points desc limit 1"
        ]
      },
      {
        "question": "Give the winner name instead.",
        "query": [
          "select winner_name from matches where tourney_name = \"Australian Open\" order by winner_rank_points desc limit 1",
          "select winner_name from matches where tourney_name = \"Australian Open\" order by winner_rank_points desc limit 1",
          "select winner_name from matches where tourney_name = \"Australian Open\" order by loser_rank_points desc limit 1",
          "select winner_name from matches where tourney_name = \"Australian Open\" order by winner_rank_points desc limit 1",
          "select winner_name from matches where tourney_name = \"Australian Open\" order by loser_rank_points desc limit 1",
          "select winner_name from matches order by winner_rank_points desc limit 1",
          "select distinct winner_name from matches where tourney_name = \"Australian Open\" order by winner_rank_points desc limit 1",
          "select winner_name from matches order by winner_rank_points desc limit 1",
          "select winner_name from matches where tourney_name = \"Australian Open\" order by loser_rank_points desc limit 1",
          "select loser_name from matches where tourney_name = \"Australian Open\" order by loser_rank_points desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Give the length of the match in minutes of the shortest match.",
        "query": [
          "select minutes from matches order by minutes asc limit 1",
          "select min (minutes) from matches",
          "select min (minutes) from matches",
          "select distinct min (minutes) from matches",
          "select distinct minutes from matches order by minutes asc limit 1",
          "select max (minutes) from matches",
          "select min (minutes) from matches",
          "select max (minutes) from matches",
          "select minutes from matches order by minutes limit 1",
          "select distinct max (minutes) from matches"
        ]
      },
      {
        "question": "Longest match?",
        "query": [
          "select minutes from matches order by minutes desc limit 1",
          "select minutes from matches order by minutes desc limit 1",
          "select minutes from matches order by minutes desc limit 1",
          "select max (minutes) from matches",
          "select max (minutes) from matches",
          "select distinct max (minutes) from matches",
          "select distinct minutes from matches order by minutes desc limit 1",
          "select * from matches order by minutes desc limit 1",
          "select minutes from matches order by minutes asc limit 1",
          "select min (minutes) from matches"
        ]
      },
      {
        "question": "Give the winner and loser name instead.",
        "query": [
          "select winner_name, loser_name from matches order by minutes desc limit 1",
          "select winner_name, loser_name from matches order by minutes desc limit 1",
          "select t1.winner_name, t1.loser_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id order by minutes desc limit 1",
          "select t1.winner_name, t1.loser_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id order by minutes desc limit 1",
          "select distinct winner_name, loser_name from matches order by minutes desc limit 1",
          "select t1.winner_name, t1.loser_name from matches as t1 order by t1.minutes desc limit 1",
          "select t1.winner_name, t1.loser_name from matches as t1 order by t1.minutes desc limit 1",
          "select winner_name, loser_name from matches order by minutes desc limit 1",
          "select t1.winner_name, t1.loser_name from matches as t1 order by minutes desc limit 1",
          "select distinct t1.winner_name, t1.loser_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id order by minutes desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Find the birth dates of each of the players.",
        "query": [
          "select birth_date from players",
          "select birth_date from players",
          "select distinct birth_date from players",
          "select birth_date from players"
        ]
      },
      {
        "question": "Find tours and first name instead.",
        "query": [
          "select t2.tours, t1.first_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id",
          "select t1.tours, t2.first_name from rankings as t1 join players as t2 on t1.player_id = t2.player_id"
        ]
      },
      {
        "question": "Give the average ranking instead of the tours.",
        "query": [
          "select avg (t2.ranking) from players as t1 join rankings as t2 on t1.player_id = t2.player_id",
          "select avg (t2.ranking) from players as t1 join rankings as t2 on t1.player_id = t2.player_id",
          "select avg (t2.tours) from players as t1 join rankings as t2 on t1.player_id = t2.player_id",
          "select avg (ranking) from rankings",
          "select avg (t2.tours) from players as t1 join rankings as t2 on t1.player_id = t2.player_id",
          "select avg (t2.ranking) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select avg (t1.first_name) from players as t1 join rankings as t2 on t1.player_id = t2.player_id",
          "select avg (ranking) from rankings",
          "select avg (t2.tours) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select avg (t1.first_name) from players as t1 join rankings as t2 on t1.player_id = t2.player_id"
        ]
      }
    ],
    [
      {
        "question": "Give the number of tours for each player.",
        "query": [
          "select from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id",
          "select distinct player_id, tours from rankings",
          "select from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select distinct count (*) from players",
          "select distinct tours from rankings as t1 join players as t2 on t1.player_id = t2.player_id",
          "select distinct player_id, count (*) from rankings group by player_id",
          "select distinct t2.tours from players as t1 join rankings as t2 on t1.player_id = t2.player_id",
          "select distinct count (*) from players as t1 join rankings as t2 on t1.player_id = t2.player_id"
        ]
      },
      {
        "question": "Give the average rank points and first name.",
        "query": [
          "select distinct t1.first_name, t2.ranking_points from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select distinct count (*), t1.first_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id",
          "select distinct player_id, avg (ranking_points) from rankings group by player_id",
          "select distinct count (*), t1.first_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id"
        ]
      },
      {
        "question": "Find the total ranking points instead.",
        "query": [
          "select distinct sum (t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select sum (t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select distinct t2.ranking_points from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select sum (t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select sum distinct t2.ranking_points from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select distinct ranking_points from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name sum (t2.ranking_points)",
          "select sum (distinct t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name",
          "select from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name sum (ranking_points)"
        ]
      }
    ],
    [
      {
        "question": "Find the number of players for each country.",
        "query": [
          "select count (*) from players group by country_code",
          "select count (*) from players group by country_code",
          "select distinct count (*) from players group by country_code",
          "select count (*) from players group by country_code",
          "select country_code, count (*) from players group by country_code",
          "select distinct country_code from players",
          "select count (*), country_code from players group by country_code",
          "select distinct country_code from players group by country_code",
          "select distinct country_code, count (*) from players group by country_code",
          "select distinct count (*), country_code from players group by country_code"
        ]
      },
      {
        "question": "Which country has the least number of players? Give the country code.",
        "query": [
          "select country_code from players group by country_code order by count (*) asc limit 1",
          "select country_code from players group by country_code order by count (*) asc limit 1",
          "select distinct country_code from players group by country_code order by count (*) asc limit 1",
          "select distinct count (*) from players group by country_code order by count (*) asc limit 1",
          "select country_code from players group by country_code asc limit 1",
          "select country_code from players group by country_code asc limit 1",
          "select distinct country_code from players group by country_code asc limit 1",
          "select country_code from players group by country_code order by count (*) asc asc limit 1",
          "select country_code from players group by country_code order by count (*) desc limit 1",
          "select country_code from players group by country_code order by count (*) limit 1"
        ]
      },
      {
        "question": "Greatest number?",
        "query": [
          "select country_code from players group by country_code order by count (*) desc limit 1",
          "select country_code from players group by country_code order by count (*) desc limit 1",
          "select distinct count (*) from players group by country_code order by count (*) desc limit 1",
          "select distinct country_code from players group by country_code order by count (*) desc limit 1",
          "select country_code from players group by country_code order by count (*) desc limit 1",
          "select count (*) from players group by country_code order by count (*) desc limit 1",
          "select country_code from players group by country_code order by count (*) asc limit 1",
          "select country_code from players group by country_code order by count (*) desc max",
          "select country_code from players group by country_code order by count (*) desc limit1",
          "select country_code from players group by country_code order by count (*) desc limit 1 asc"
        ]
      }
    ],
    [
      {
        "question": "What is the number of players for each hand type? Give the hand type as well.",
        "query": [
          "select count (*), hand from players group by hand",
          "select count (*), hand from players group by hand",
          "select hand, count (*) from players group by hand",
          "select count (*) from players group by hand",
          "select hand, count (*) from players group by hand",
          "select count (*) from players group by hand",
          "select distinct count (*), hand from players group by hand",
          "select distinct count (*) from players group by hand",
          "select count (*), hand from players group by hand",
          "select distinct hand, count (*) from players group by hand"
        ]
      },
      {
        "question": "For each country?",
        "query": [
          "select count (*), country_code from players group by country_code",
          "select count (*) from players group by country_code",
          "select count (*) from players group by country_code",
          "select country_code, count (*) from players group by country_code",
          "select distinct count (*), country_code from players group by country_code",
          "select distinct country_code from players group by country_code",
          "select country_code from players group by country_code",
          "select distinct count (*) from players group by country_code",
          "select country_code from players group by country_code",
          "select count (*) from players group by country_code"
        ]
      },
      {
        "question": "Give the ones that have more than 50 players.",
        "query": [
          "select country_code from players group by country_code having count (*) > 50",
          "select count (*) from players group by country_code having count (*) > 50",
          "select country_code from players group by country_code having count (*) > 50",
          "select distinct country_code from players group by country_code having count (*) > 50",
          "select count (*) from players group by country_code having count (*) > 50",
          "select * from players group by country_code having count (*) > 50",
          "select count (*), country_code from players where count (*) > 50",
          "select country_code from players group by country_code having count (*) > 50",
          "select * from players where count (*) > 50",
          "select distinct country_code from players group by country_code having count (*) > 50"
        ]
      },
      {
        "question": "Give the country code only.",
        "query": [
          "select country_code from players group by country_code having count (*) > 50",
          "select distinct country_code from players group by country_code having count (*) > 50",
          "select country_code from players group by country_code having count (*) > 50",
          "select distinct country_code from players group by country_code having count (*) > 50",
          "select country_code from players where count (*) > 50",
          "select count (*) from players group by country_code having count (*) > 50"
        ]
      }
    ],
    [
      {
        "question": "Give the name of the 3 oldest losers across all matches.",
        "query": [
          "select loser_name from matches order by loser_age desc limit 3",
          "select t1.loser_name from matches as t1 join players as t2 on t1.loser_id = t2.player_id order by t1.loser_age desc limit 3",
          "select t1.loser_name from matches as t1 join players as t2 on t1.loser_id = t2.player_id order by t2.last_name desc limit 3",
          "select loser_name from matches order by loser_age desc limit 3",
          "select distinct loser_name from matches order by loser_age desc limit 3",
          "select t1.loser_name from matches as t1 join players as t2 on t1.loser_id = t2.player_id order by loser_age desc limit 3",
          "select distinct t1.loser_name from matches as t1 join players as t2 on t1.loser_id = t2.player_id order by t1.loser_age desc limit 3",
          "select winner_name from matches order by winner_age desc limit 3",
          "select distinct t1.loser_name from matches as t1 join players as t2 on t1.loser_id = t2.player_id order by t2.last_name desc limit 3",
          "select distinct loser_name from matches order by loser_age desc limit 3"
        ]
      },
      {
        "question": "How about the 3 oldest winners.",
        "query": [
          "select winner_name from matches order by winner_age desc limit 3",
          "select winner_name from matches order by winner_age desc limit 3",
          "select distinct winner_name from matches order by winner_age desc limit 3",
          "select winner_name from matches order by winner_age desc limit 3",
          "select winner_name from matches order by winner_age desc limit 3",
          "select loser_name from matches order by winner_age desc limit 3",
          "select winner_name from matches order by winner_age asc limit 3",
          "select winner_name from matches order by winner_age desc limit3",
          "select winner_name from matches order by winner_age desc limit3"
        ]
      },
      {
        "question": "Youngest? Give the rank as well.",
        "query": [
          "select winner_rank, winner_name from matches order by winner_age desc limit 1",
          "select winner_name, winner_rank from matches order by winner_age desc limit 1",
          "select winner_rank, winner_name from matches order by winner_age desc limit 1",
          "select winner_rank, winner_name from matches order by winner_age desc limit 3",
          "select winner_name, winner_rank from matches order by winner_age desc limit 1",
          "select winner_rank, winner_rank_points from matches order by winner_age desc limit 1",
          "select winner_rank, winner_name from matches order by winner_age desc limit 3",
          "select winner_rank from matches order by winner_age desc limit 1",
          "select winner_name, winner_rank from matches order by winner_age desc limit 3",
          "select winner_rank_points, winner_name from matches order by winner_age desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "How  many different losers participated in the Australian Open?",
        "query": [
          "select count (distinct loser_name) from matches where tourney_name = \"Australian Open\"",
          "select count (distinct loser_id) from matches where tourney_name = \"Australian Open\""
        ]
      },
      {
        "question": "Winners?",
        "query": [
          "select distinct winner_name from matches where tourney_name = \"Australian Open\"",
          "select distinct winner_name from matches where tourney_name = \"Australian Open\"",
          "select count (distinct winner_name) from matches where tourney_name = \"Australian Open\"",
          "select distinct winner_name from matches where tourney_name = \"Australian Open\"",
          "select count (distinct winner_name) from matches where tourney_name = \"Australian Open\"",
          "select winner_name from matches where tourney_name = \"Australian Open\"",
          "select count (*) from matches where tourney_name = \"Australian Open\"",
          "select winner_name from matches where tourney_name = \"Australian Open\"",
          "select count (*) from matches where tourney_name = \"Australian Open\"",
          "select distinct winner_name from matches where tourney_name = \"Australian Open\""
        ]
      },
      {
        "question": "How about in the WTA Championships, and were also left handed?",
        "query": [
          "select distinct winner_name from matches where tourney_name = \"WTA Championships\" and winner_hand = \"Left\"",
          "select distinct winner_name from matches where tourney_name = \"WTA Championships\" and loser_hand = \"Left\"",
          "select distinct t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id = t2.player_id where t1.tourney_name = \"WTA Championships\" and t1.winner_hand = \"Left\"",
          "select distinct winner_name from matches where tourney_name = \"WTA Championships\" and winner_hand = \"Left\"",
          "select distinct winner_name from matches where tourney_name = \"WTA Championships\" and winner_hand = \"left\"",
          "select distinct winner_name from matches where tourney_name = \"WTA Championships\"",
          "select distinct t1.winner_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.tourney_name = \"WTA Championships\" and t2.hand = \"Left\"",
          "select distinct winner_name from matches where tourney_name = \"WTA Championships\" and winner_hand = \"Left handed\"",
          "select distinct winner_name from matches where tourney_name = \"WTA Championships\" and loser_hand = \"Left\"",
          "select distinct t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id = t2.player_id where t1.tourney_name = \"WTA Championships\" and t1.winner_hand = \"left\""
        ]
      }
    ]
  ],
  "orchestra": [
    [
      {
        "question": "List all conductor information.",
        "query": [
          "select * from conductor",
          "select * from conductor",
          "select distinct * from conductor",
          "select * from conductor"
        ]
      },
      {
        "question": "How many conductors are there?",
        "query": [
          "select count (*) from conductor",
          "select count (*) from conductor",
          "select distinct count (*) from conductor",
          "select count (*) from conductor"
        ]
      }
    ],
    [
      {
        "question": "What are the names of the conductors?",
        "query": [
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select name from conductor"
        ]
      },
      {
        "question": "What are the ages of the conductors?",
        "query": [
          "select age from conductor",
          "select age from conductor",
          "select distinct age from conductor",
          "select age from conductor"
        ]
      },
      {
        "question": "List the names of conductors in ascending order of age.",
        "query": [
          "select name from conductor order by age asc",
          "select distinct name from conductor order by age asc",
          "select name from conductor order by age desc",
          "select distinct name from conductor order by age desc",
          "select name from conductor order by age",
          "select distinct name from conductor order by age",
          "select name from conductor order by age",
          "select name from conductor order by age ASC"
        ]
      }
    ],
    [
      {
        "question": "List the names of conductors",
        "query": [
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select * from conductor"
        ]
      },
      {
        "question": "Among these conductors, which of them are not from the USA?",
        "query": [
          "select name from conductor where nationality!= \"USA\"",
          "select name from conductor where nationality!= \"USA\"",
          "select distinct name from conductor where nationality!= \"USA\"",
          "select name from conductor where nationality!= \"USA\"",
          "select name from conductor where nationality!= \"United States\"",
          "select name from conductor where nationality!= \"United States\"",
          "select name from conductor where nationality!= \"US\"",
          "select name from conductor where nationality!= \"US\"",
          "select distinct name from conductor where nationality!= \"United States\""
        ]
      }
    ],
    [
      {
        "question": "List the information of record companies.",
        "query": [
          "select record_company from orchestra",
          "select * from orchestra",
          "select record_company from orchestra",
          "select distinct record_company from orchestra",
          "select * from orchestra",
          "select record_company from orchestra",
          "select * from orchestra",
          "select distinct record_company from orchestra",
          "select * from Orchestra"
        ]
      },
      {
        "question": "When were they founded?",
        "query": [
          "select year_of_founded from orchestra",
          "select year_of_founded from orchestra",
          "select distinct year_of_founded from orchestra",
          "select year_of_founded from orchestra",
          "select year_of_founded from Orchestra",
          "select year_of_founded from orchestra",
          "select year_of_founded from Orchestra",
          "select year_of_founded from orchestra"
        ]
      },
      {
        "question": "Please list the record companies of orchestras in descending order of years in which they were founded.",
        "query": [
          "select record_company from orchestra order by year_of_founded desc",
          "select record_company from orchestra order by year_of_founded desc",
          "select distinct record_company from orchestra order by year_of_founded desc",
          "select distinct record_company from orchestra order by year_of_founded desc",
          "select * from orchestra order by year_of_founded desc",
          "select record_company from orchestra order by year_of_founded asc",
          "select distinct record_company from orchestra order by year_of_founded desc",
          "select record_company from Orchestra order by year_of_founded desc",
          "select record_company from orchestra order by year_of_founded desc",
          "select record_company from orchestra order by year_of_founded asc"
        ]
      }
    ],
    [
      {
        "question": "What is the attendance of each show?",
        "query": [
          "select attendance from show",
          "select attendance from show",
          "select attendance from show",
          "select distinct attendance from show"
        ]
      },
      {
        "question": "What is the average attendance?",
        "query": [
          "select avg (attendance) from show",
          "select avg (attendance) from show",
          "select avg (attendance) from show",
          "select distinct avg (attendance) from show",
          "select distinct attendance from show",
          "select min (attendance) from show",
          "select distinct count (*) from show",
          "select distinct count (attendance) from show",
          "select distinct (attendance) from show",
          "select min (attendance) from show"
        ]
      }
    ],
    [
      {
        "question": "What are the shares of performances?",
        "query": [
          "select share from performance",
          "select share from performance",
          "select distinct performance_id from performance",
          "select weekly_rank from performance",
          "select weekly_rank from performance",
          "select share from performance",
          "select performance_id, share from performance",
          "select distinct performance_id, share from performance",
          "select performance_id, share from performance",
          "select distinct t1.share from performance as t1"
        ]
      },
      {
        "question": "What are the shares of performances whose type is not \"Live final\"?",
        "query": [
          "select share from performance where type!= \"Live final\"",
          "select share from performance where type!= \"Live final\"",
          "select share from performance where type!= \"Live Final\"",
          "select share from performance where type!= \"Live final\"",
          "select share from performance where type!= \"Live Final\"",
          "select distinct share from performance where type!= \"Live final\"",
          "select share from performance where type!= \"Live final\"",
          "select distinct performance_id from performance where type!= \"Live final\"",
          "select sum (share) from performance where type!= \"Live final\"",
          "select sum (share) from performance where type!= \"Live final\""
        ]
      },
      {
        "question": "What are the maximum and the minimum of these values?",
        "query": [
          "select max (share), min (share) from performance where type!= \"Live final\"",
          "select max (share), min (share) from performance where type!= \"Live final\"",
          "select max (share), min (share) from performance where type!= \"Live final\"",
          "select distinct max (share), min (share) from performance where type!= \"Live final\"",
          "select distinct max (share), min (share) from performance where type!= \"Live final\"",
          "select max (share), min (share) from performance where type!= \"Live final\"",
          "select max (share), min (share) from performance where type!= \"Live final\"",
          "select max (share), min (share) from performance where type!= \"Live final\"",
          "select max (share), min (share) from performance where type!= \"Live final\"",
          "select max (share), min (share) from performance where type!= \"Live Final\""
        ]
      }
    ],
    [
      {
        "question": "List the nationalities of conductors.",
        "query": [
          "select nationality from conductor",
          "select nationality from conductor",
          "select distinct nationality from conductor",
          "select nationality from conductor",
          "select distinct nationality from conductor",
          "select nationality from conductor",
          "select distinct nationality from conductor",
          "select nationality from conductor",
          "select nationality from conductor"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from conductor",
          "select count (*) from conductor",
          "select count (distinct nationality) from conductor",
          "select distinct nationality from conductor",
          "select count (*) from conductor",
          "select count (nationality) from conductor",
          "select distinct count (nationality) from conductor",
          "select count (*) from conductor",
          "select count (nationality) from conductor",
          "select distinct count (*) from conductor"
        ]
      }
    ],
    [
      {
        "question": "List the names of conductors.",
        "query": [
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select name from conductor",
          "select name from conductor"
        ]
      },
      {
        "question": "List years of work of conductors.",
        "query": [
          "select year_of_work from conductor",
          "select year_of_work from conductor",
          "select distinct year_of_work from conductor",
          "select year_of_work from conductor",
          "select year_of_work from conductor"
        ]
      },
      {
        "question": "List names of conductors in descending order of years of work.",
        "query": [
          "select name from conductor order by year_of_work desc",
          "select name from conductor order by year_of_work desc",
          "select distinct name from conductor order by year_of_work desc",
          "select name from conductor order by year_of_work desc",
          "select name from conductor order by year_of_work asc",
          "select name from conductor order by age desc"
        ]
      }
    ],
    [
      {
        "question": "List the names of the conductors.",
        "query": [
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select name from conductor",
          "select name from conductor"
        ]
      },
      {
        "question": "List years of work of conductors.",
        "query": [
          "select year_of_work from conductor",
          "select year_of_work from conductor",
          "select distinct year_of_work from conductor",
          "select year_of_work from conductor",
          "select year_of_work from conductor",
          "select year_of_work from conductor"
        ]
      },
      {
        "question": "List the name of the conductor with the most years of work.",
        "query": [
          "select name from conductor order by year_of_work desc limit 1",
          "select name from conductor order by year_of_work desc limit 1",
          "select distinct name from conductor order by year_of_work desc limit 1",
          "select name from conductor order by year_of_work asc limit 1",
          "select name from conductor order by year_of_work desc limit 1",
          "select distinct max (year_of_work) from conductor",
          "select name from conductor order by year_of_work asc limit 1",
          "select name from conductor order by year_of_work desc desc limit 1",
          "select name from conductor order by year_of_work desc",
          "select name from conductor order by year_of_work limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show the names of conductors.",
        "query": [
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select name from conductor"
        ]
      },
      {
        "question": "Please list these names with the orchestras they have conducted.",
        "query": [
          "select t1.name, t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id",
          "select t1.name, t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id",
          "select t2.name, t1.orchestra from orchestra as t1 join conductor as t2 on t1.orchestra_id = t2.conductor_id",
          "select t2.name, t1.orchestra from orchestra as t1 join conductor as t2 on t1.orchestra_id = t2.conductor_id",
          "select t2.name, t1.orchestra from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id",
          "select t2.name, t1.orchestra from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id",
          "select t1.name, t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id",
          "select distinct t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id"
        ]
      }
    ],
    [
      {
        "question": "Please show the names of the conductors.",
        "query": [
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select name from conductor",
          "select name from conductor",
          "select * from conductor",
          "select distinct conductor_id from conductor"
        ]
      },
      {
        "question": "Which of them have conducted more than one orchestras?",
        "query": [
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id having count (*) > 1",
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.name having count (*) > 1",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id having count (*) > 1",
          "select name from conductor group by name having count (*) > 1",
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.name having count (*) > 1",
          "select distinct t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.name having count (*) > 1",
          "select distinct t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id having count (*) > 1",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.orchestra_id = t2.conductor_id group by t1.orchestra_id having count (*) > 1",
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t2.orchestra_id having count (*) > 1",
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t2.conductor_id having count (*) > 1"
        ]
      }
    ],
    [
      {
        "question": "Please show the names of the conductors.",
        "query": [
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select name from conductor",
          "select name from conductor",
          "select * from conductor",
          "select distinct conductor_id from conductor"
        ]
      },
      {
        "question": "Who has conducted the most orchestras?",
        "query": [
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.name order by count (*) desc limit 1",
          "select name from conductor group by name order by count (*) desc limit 1",
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.name order by count (*) desc limit 1",
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id order by count (*) desc limit 1",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id order by count (*) desc limit 1",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t1.orchestra_id order by count (*) desc limit 1",
          "select name from conductor group by count (*) desc limit 1",
          "select distinct count (*) from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id order by count (*) desc limit 1",
          "select distinct count (*) from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t1.orchestra_id order by count (*) desc limit 1",
          "select * from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Please show the names of the conductors.",
        "query": [
          "select name from conductor",
          "select name from conductor",
          "select distinct name from conductor",
          "select name from conductor",
          "select name from conductor",
          "select * from conductor",
          "select distinct conductor_id from conductor"
        ]
      },
      {
        "question": "Who has conducted orchestras founded after 2008?",
        "query": [
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.orchestra_id = t2.conductor_id where year_of_founded > 2008",
          "select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.orchestra_id = t2.conductor_id where year_of_founded > 2008",
          "select distinct t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008",
          "select * from orchestra where year_of_founded > 2008",
          "select * from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008",
          "select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008",
          "select distinct t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008"
        ]
      }
    ],
    [
      {
        "question": "Please show the record companies without duplicates.",
        "query": [
          "select distinct record_company from orchestra",
          "select distinct record_company from orchestra",
          "select distinct record_company from orchestra",
          "select record_company from orchestra"
        ]
      },
      {
        "question": "Please also show their corresponding number of orchestras.",
        "query": [
          "select count (*), record_company from orchestra group by record_company",
          "select count (*), record_company from orchestra group by record_company",
          "select count (*), record_company from orchestra group by record_company",
          "select distinct count (*), count (*) from orchestra",
          "select record_company, count (*) from orchestra group by record_company",
          "select distinct record_company, count (*) from orchestra group by record_company",
          "select record_company, count (*) from orchestra group by record_company",
          "select distinct count (*), record_company from orchestra group by record_company",
          "select distinct record_company, count (*) from orchestra",
          "select distinct record_company, count (*) from orchestra group by record_company"
        ]
      }
    ],
    [
      {
        "question": "Please show the record formats of orchestras.",
        "query": [
          "select major_record_format from orchestra",
          "select major_record_format from orchestra",
          "select distinct major_record_format from orchestra",
          "select distinct major_record_format from orchestra",
          "select major_record_format from orchestra",
          "select distinct major_record_format from orchestra",
          "select major_record_format from orchestra",
          "select distinct major_record_format from orchestra",
          "select major_record_format from Orchestra"
        ]
      },
      {
        "question": "Please list them in ascending order of count.",
        "query": [
          "select major_record_format from orchestra order by count (*) asc",
          "select major_record_format from orchestra order by count (*) asc",
          "select distinct major_record_format from orchestra order by count (*) asc",
          "select major_record_format from orchestra order by count (*) desc",
          "select major_record_format from orchestra order by count (*)",
          "select major_record_format from orchestra order by count (*) asc",
          "select distinct major_record_format from orchestra order by count (*)",
          "select major_record_format from orchestra order by count (*) desc",
          "select major_record_format from orchestra order by count (*)",
          "select distinct major_record_format from orchestra order by count (*) desc"
        ]
      }
    ],
    [
      {
        "question": "List the information of all record companies.",
        "query": [
          "select * from orchestra",
          "select * from orchestra",
          "select distinct record_company from orchestra",
          "select record_company from orchestra",
          "select record_company from orchestra",
          "select * from orchestra",
          "select record_company from orchestra",
          "select * from orchestra",
          "select distinct record_company from orchestra"
        ]
      },
      {
        "question": "Which one is shared by the most orchestras?",
        "query": [
          "select record_company from orchestra group by record_company order by count (*) desc limit 1",
          "select record_company from orchestra group by record_company order by count (*) desc limit 1",
          "select distinct count (*) from orchestra group by record_company order by count (*) desc limit 1",
          "select * from orchestra group by orchestra order by count (*) desc limit 1",
          "select record_company from orchestra group by record_company order by count (*) desc limit 1",
          "select distinct record_company from orchestra group by record_company order by count (*) desc limit 1",
          "select * from orchestra group by record_company order by count (*) desc limit 1",
          "select t1.record_company from orchestra as t1 group by t1.record_company order by count (*) desc limit 1",
          "select distinct count (*) from orchestra as t1 join orchestra as t2 on t1.orchestra_id = t2.orchestra_id group by t1.orchestra_id order by count (*) desc limit 1",
          "select distinct count (*) from orchestra as t1 join orchestra as t2 on t1.orchestra_id = t2.orchestra_id group by t1.record_company order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "List the names of orchestras.",
        "query": [
          "select orchestra from orchestra",
          "select orchestra from orchestra",
          "select distinct orchestra from orchestra",
          "select distinct orchestra from orchestra",
          "select orchestra from orchestra",
          "select distinct orchestra from orchestra",
          "select * from orchestra",
          "select Orchestra from orchestra",
          "select Orchestra from orchestra",
          "select * from orchestra"
        ]
      },
      {
        "question": "Which of them have had no performances?",
        "query": [
          "select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)",
          "select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)",
          "select distinct orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)",
          "select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)",
          "select * from orchestra where orchestra_id not in (select orchestra_id from performance)",
          "select orchestra from orchestra where orchestra_id not in (select Orchestra_id from performance)",
          "select distinct orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)",
          "select orchestra from orchestra where Orchestra_id not in (select orchestra_id from performance)",
          "select * from orchestra where orchestra_id not in (select orchestra_id from performance)",
          "select orchestra from orchestra where orchestra_id in (select orchestra_id from performance)"
        ]
      }
    ],
    [
      {
        "question": "Please list the record companies.",
        "query": [
          "select record_company from orchestra",
          "select record_company from orchestra",
          "select distinct record_company from orchestra",
          "select record_company from orchestra",
          "select distinct record_company from orchestra",
          "select record_company from orchestra",
          "select distinct record_company from orchestra"
        ]
      },
      {
        "question": "Which of them are shared by orchestras founded before 2003?",
        "query": [
          "select record_company from orchestra where year_of_founded < 2003",
          "select record_company from orchestra where year_of_founded < 2003",
          "select distinct record_company from orchestra where year_of_founded < 2003",
          "select distinct record_company from orchestra where year_of_founded < 2003",
          "select distinct record_company from orchestra where year_of_founded < 2003",
          "select * from orchestra where year_of_founded < 2003",
          "select record_company from orchestra where year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded < 2003"
        ]
      },
      {
        "question": "Which of them are shared by orchestras founded after 2003?",
        "query": [
          "select record_company from orchestra where year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded > 2003",
          "select distinct record_company from orchestra where year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded > 2003",
          "select distinct (record_company) from orchestra where year_of_founded > 2003",
          "select distinct record_company from orchestra where year_of_founded > 2003",
          "select distinct t1.record_company from orchestra as t1 join orchestra where t1.year_of_founded > 2003",
          "select distinct t1.record_company from orchestra as t1 join orchestra where year_of_founded > 2003"
        ]
      },
      {
        "question": "Which of them are shared by orchestras founded before 2003 and after 2003?",
        "query": [
          "select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003",
          "select distinct record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded < 2003 or year_of_founded > 2003",
          "select distinct record_company from orchestra where year_of_founded < 2003 intersect select distinct record_company from orchestra where year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded < 2003 or year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded < 2003 union select record_company from orchestra where year_of_founded > 2003",
          "select distinct record_company from orchestra where year_of_founded < 2003 or year_of_founded > 2003",
          "select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003"
        ]
      }
    ],
    [
      {
        "question": "List the orchestras whose record format is \"CD\" or \"DVD\".",
        "query": [
          "select * from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select * from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select distinct orchestra from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select * from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select distinct * from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select orchestra from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select orchestra from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select * from orchestra where major_record_format = \"CD\"",
          "select * from orchestra where major_record_format = \"DVD\" or major_record_format = \"CD\"",
          "select * from orchestra where major_record_format = \"CD\""
        ]
      },
      {
        "question": "How many of these orchestras are there?",
        "query": [
          "select count (*) from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select count (*) from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select distinct count (*) from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select count (*) from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"",
          "select count (*) from orchestra where major_record_format = \"DVD\"",
          "select count (*) from orchestra where major_record_format = \"DVD\"",
          "select count (*) from orchestra where major_record_format = \"DVD\" or major_record_format = \"CD\"",
          "select count (*) from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\""
        ]
      }
    ]
  ],
  "cre_Doc_Template_Mgt": [
    [
      {
        "question": "Show information for all documents.",
        "query": [
          "select * from documents",
          "select * from documents",
          "select * from documents",
          "select distinct * from documents",
          "select distinct document_id from documents"
        ]
      },
      {
        "question": "Show their ids.",
        "query": [
          "select document_id from documents",
          "select document_id from documents",
          "select distinct document_id from documents"
        ]
      },
      {
        "question": "Also show their document names and document descriptions.",
        "query": [
          "select document_id, document_name, document_description from documents",
          "select document_id, document_name, document_description from documents",
          "select document_id, document_name, document_description from documents",
          "select distinct document_id, document_name, document_description from documents"
        ]
      }
    ],
    [
      {
        "question": "Show the document name for all documents.",
        "query": [
          "select document_name from documents",
          "select document_name from documents",
          "select distinct document_name from documents",
          "select document_name from documents"
        ]
      },
      {
        "question": "Also show their description.",
        "query": [
          "select document_name, document_description from documents",
          "select document_name, document_description from documents",
          "select document_name, document_description from documents",
          "select distinct document_name, document_description from documents"
        ]
      },
      {
        "question": "Which one has description with the letter 'w' in it?",
        "query": [
          "select document_name from documents where document_description like \"%w%\"",
          "select document_name, document_description from documents where document_description like \"%w%\"",
          "select document_name from documents where document_description like \"%w%\"",
          "select document_name from documents where document_description like \"%w%\"",
          "select document_name from documents where document_description like \"% w%\"",
          "select distinct document_name from documents where document_description like \"%w%\"",
          "select document_name, document_description from documents where document_description like \"% w%\"",
          "select document_description from documents where document_name like \"%w%\"",
          "select document_name from documents where document_description like \"% w%\"",
          "select document_name from documents where document_description like \"w%\""
        ]
      },
      {
        "question": "Show its name and template id.",
        "query": [
          "select document_name, template_id from documents where document_description like \"%w%\"",
          "select document_name, template_id from documents where document_description like \"%w%\"",
          "select t1.document_name, t2.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_description like \"%w%\"",
          "select t1.document_name, t2.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_description like \"%w%\"",
          "select t2.document_name, t1.template_id from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_description like \"%w%\"",
          "select t2.document_name, t1.template_id from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_description like \"%w%\"",
          "select document_name, template_id from documents where document_description like \"%w%\"",
          "select distinct t1.document_name, t2.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_description like \"%w%\"",
          "select t1.document_name, t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_description like \"%w%\"",
          "select t1.document_name, t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_description like \"%w%\""
        ]
      }
    ],
    [
      {
        "question": "Show the the document name for all documents.",
        "query": [
          "select document_name from documents",
          "select document_name from documents",
          "select distinct document_name from documents",
          "select document_name from documents"
        ]
      },
      {
        "question": "Show the document id for the one named \"Robbin CV\"?",
        "query": [
          "select document_id from documents where document_name = \"Robbin CV\"",
          "select document_id from documents where document_name = \"Robbin CV\"",
          "select document_id from documents where document_name = \"Robbin CV\"",
          "select document_id from documents where document_name = \"Robin CV\"",
          "select document_id from documents where document_name = \"Robin CV\"",
          "select document_id from documents where document_name = \"Robbing CV\"",
          "select document_id from documents where document_name = \"Robin CV\"",
          "select document_id from documents where document_name = \"Robben CV\"",
          "select document_id from documents where document_name = \"Robby CV\"",
          "select document_id from documents where document_name = \"Robin CV\""
        ]
      },
      {
        "question": "Also show its template id and description.",
        "query": [
          "select t1.document_id, t1.template_id, t1.document_name from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_name = \"Robbin CV\"",
          "select t1.document_id, t1.template_id, t1.document_name from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_name = \"Robbin CV\"",
          "select t1.document_id, t2.template_details from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_name = \"Robbin CV\"",
          "select t2.document_id, t1.template_details from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = \"Robbin CV\"",
          "select t1.document_id, t2.template_details from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_name = \"Robbin CV\"",
          "select t2.document_id, t1.template_id, t1.template_details from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = \"Robbin CV\"",
          "select t2.document_id, t1.template_details from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = \"Robbin CV\"",
          "select t2.template_id, t2.template_details, t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_name = \"Robbin CV\"",
          "select t2.template_id, t2.template_details, t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_name = \"Robbin CV\"",
          "select t2.document_id, t1.template_id, t1.template_details from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = \"Robbin CV\""
        ]
      }
    ],
    [
      {
        "question": "Show the template id for all documents.",
        "query": [
          "select template_id from documents",
          "select template_id from documents",
          "select distinct template_id from documents",
          "select template_id from documents"
        ]
      },
      {
        "question": "Show all distinct results.",
        "query": [
          "select distinct template_id from documents",
          "select distinct template_id from documents",
          "select distinct template_id from documents",
          "select distinct template_id from documents",
          "select distinct (template_id) from documents",
          "select distinct templates.template_id from documents",
          "select distinct templates.template_id from templates"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select distinct count (template_id) from documents",
          "select distinct count (*) from documents",
          "select distinct template_id from documents",
          "select count (*) from documents",
          "select count (*) from documents"
        ]
      }
    ],
    [
      {
        "question": "Show the document ids.",
        "query": [
          "select document_id from documents",
          "select document_id from documents",
          "select distinct document_id from documents",
          "select document_id from documents"
        ]
      },
      {
        "question": "Also show their template id and template type code.",
        "query": [
          "select t1.document_id, t2.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t2.document_id, t1.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select distinct t1.document_id, t2.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t1.document_id, t2.template_type_code, t2.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select template_id, document_id from documents"
        ]
      },
      {
        "question": "Which documents are using the template with type code 'PPT'?",
        "query": [
          "select t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select * from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select distinct t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select * from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select * from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PTT\"",
          "select t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PDF\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select distinct count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select distinct t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\"",
          "select count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = \"PPT\""
        ]
      }
    ],
    [
      {
        "question": "Show the template id for all documents.",
        "query": [
          "select template_id from documents",
          "select template_id from documents",
          "select distinct template_id from documents",
          "select template_id from documents"
        ]
      },
      {
        "question": "For each of them, show the number of documents using it.",
        "query": [
          "select template_id, count (*) from documents group by template_id",
          "select template_id, count (*) from documents group by template_id",
          "select t2.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_id",
          "select t1.template_id, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select t1.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select template_id, count (*) from documents group by template_id",
          "select distinct t1.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select t2.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select count (*) from documents group by template_id",
          "select distinct t2.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_id"
        ]
      }
    ],
    [
      {
        "question": "Show the template id for all Documents.",
        "query": [
          "select template_id from documents",
          "select template_id from documents",
          "select distinct template_id from documents",
          "select template_id from documents"
        ]
      },
      {
        "question": "Also show its template type code.",
        "query": [
          "select t1.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t2.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select distinct t2.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select distinct t1.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t1.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select distinct t1.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id"
        ]
      },
      {
        "question": "For each of them, show the number of documents using it.",
        "query": [
          "select t1.template_id, t2.template_type_code, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select t1.template_id, t2.template_type_code, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select t2.template_type_code, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_type_code",
          "select t1.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select t2.template_type_code, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_type_code",
          "select t1.template_id, t2.template_type_code, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select t1.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select distinct t1.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select distinct t1.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_type_code",
          "select distinct t1.template_id, t2.template_type_code, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id"
        ]
      },
      {
        "question": "Which one has the most?",
        "query": [
          "select t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count (*) desc limit 1",
          "select t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count (*) desc limit 1",
          "select distinct t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count (*) desc limit 1",
          "select t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count (*) desc limit 1",
          "select distinct count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count (*) desc limit 1",
          "select distinct t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count (*) desc limit 1",
          "select t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count (*) asc limit 1",
          "select t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count (*) asc limit 1",
          "select distinct t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_type_code order by count (*) desc limit 1",
          "select t1.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show the template id for all documents.",
        "query": [
          "select template_id from documents",
          "select template_id from documents",
          "select distinct template_id from documents",
          "select template_id from documents"
        ]
      },
      {
        "question": "For each of them, show the number of documents.",
        "query": [
          "select template_id, count (*) from documents group by template_id",
          "select template_id, count (*) from documents group by template_id",
          "select t2.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_id",
          "select t1.template_id, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select t1.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select template_id, count (*) from documents group by template_id",
          "select t2.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select distinct t1.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id",
          "select distinct t2.template_id, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_id",
          "select distinct template_id, count (*) from documents group by template_id"
        ]
      },
      {
        "question": "Which of them are used by more than one document?",
        "query": [
          "select template_id from documents group by template_id having count (*) > 1",
          "select template_id from documents group by template_id having count (*) > 1",
          "select t1.template_id from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_id having count (*) > 1",
          "select t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id having count (*) > 1",
          "select template_id from documents group by template_id having count (*) > 1",
          "select distinct template_id from documents group by template_id having count (*) > 1",
          "select distinct t1.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id having count (*) > 1",
          "select t2.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_id having count (*) > 1",
          "select distinct t2.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_id having count (*) > 1",
          "select t2.template_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id having count (*) > 1"
        ]
      }
    ],
    [
      {
        "question": "Show template ids used by some document.",
        "query": [
          "select template_id from documents",
          "select template_id from documents",
          "select distinct template_id from documents",
          "select template_id from documents"
        ]
      },
      {
        "question": "Show all template ids.",
        "query": [
          "select template_id from templates",
          "select template_id from templates",
          "select distinct template_id from templates",
          "select distinct template_id from documents",
          "select distinct template_id from templates",
          "select template_id from templates",
          "select distinct template_id from documents",
          "select * from templates",
          "select template_id from documents"
        ]
      },
      {
        "question": "Which of them are not used by any document?",
        "query": [
          "select template_id from templates except select template_id from documents",
          "select template_id from templates except select template_id from documents",
          "select distinct template_id from templates except select template_id from documents",
          "select template_id from templates where template_id not in (select template_id from documents)",
          "select distinct template_id from templates where template_id not in (select template_id from documents)"
        ]
      }
    ],
    [
      {
        "question": "Show info for all templates.",
        "query": [
          "select * from templates",
          "select * from templates",
          "select * from templates",
          "select distinct * from templates",
          "select distinct template_id from templates"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from templates",
          "select count (*) from templates",
          "select count (*) from templates",
          "select distinct count (*) from templates",
          "select distinct template_id from templates"
        ]
      }
    ],
    [
      {
        "question": "Show template ids for all templates.",
        "query": [
          "select template_id from templates",
          "select template_id from templates",
          "select distinct template_id from templates",
          "select template_id from templates"
        ]
      },
      {
        "question": "Also show their version numbers and template type codes.",
        "query": [
          "select template_id, version_number, template_type_code from templates",
          "select template_id, version_number, template_type_code from templates",
          "select template_id, version_number, template_type_code from templates",
          "select distinct template_id, version_number, template_type_code from templates"
        ]
      }
    ],
    [
      {
        "question": "Show all template type codes for all templates.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates"
        ]
      },
      {
        "question": "Filter out duplicates.",
        "query": [
          "select distinct template_type_code from templates",
          "select distinct template_type_code from templates",
          "select distinct template_type_code from templates",
          "select distinct template_type_code from templates",
          "select distinct (template_type_code) from templates"
        ]
      }
    ],
    [
      {
        "question": "Show the template ids for all templates.",
        "query": [
          "select template_id from templates",
          "select template_id from templates",
          "select distinct template_id from templates",
          "select template_id from templates"
        ]
      },
      {
        "question": "How about the ids with template type code PP or PPT?",
        "query": [
          "select template_id from templates where template_type_code = \"PPT\"",
          "select template_id from templates where template_type_code = \"PP\"",
          "select template_id from templates where template_type_code = \"PP\"",
          "select template_id from templates where template_type_code = \"PPT\""
        ]
      }
    ],
    [
      {
        "question": "Show the template type codes for all templates.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates"
        ]
      },
      {
        "question": "How many of them have template type code CV?",
        "query": [
          "select count (*) from templates where template_type_code = \"CV\"",
          "select count (*) from templates where template_type_code = \"CV\"",
          "select distinct count (*) from templates where template_type_code = \"CV\"",
          "select count (*) from templates where template_type_code = \"CV\"",
          "select distinct count (template_type_code) from templates where template_type_code = \"CV\"",
          "select count (template_type_code) from templates where template_type_code = \"CV\"",
          "select distinct template_type_code from templates where template_type_code = \"CV\"",
          "select count (*) from templates where template_type_code = \"CV\"",
          "select distinct count (template_type_code) from templates where template_type_code = \"CV\""
        ]
      }
    ],
    [
      {
        "question": "What is the version number for all template?",
        "query": [
          "select version_number from templates",
          "select version_number from templates",
          "select distinct version_number from templates",
          "select version_number from templates",
          "select distinct template_id from templates"
        ]
      },
      {
        "question": "Only show those with version number later than 5.",
        "query": [
          "select version_number from templates where version_number > 5",
          "select version_number from templates where version_number > 5",
          "select version_number from templates where version_number > 5",
          "select distinct version_number from templates where version_number > 5",
          "select distinct template_id from templates where version_number > 5",
          "select template_details from templates where version_number > 5",
          "select distinct template_details from templates where version_number > 5",
          "select template_details from templates where version_number > 5"
        ]
      },
      {
        "question": "Also show their template type code.",
        "query": [
          "select version_number, template_type_code from templates where version_number > 5",
          "select version_number, template_type_code from templates where version_number > 5",
          "select version_number, template_type_code from templates where version_number > 5",
          "select distinct version_number, template_type_code from templates where version_number > 5",
          "select template_type_code, version_number from templates where version_number > 5",
          "select distinct template_type_code, version_number from templates where version_number > 5",
          "select template_type_code, version_number from templates where version_number > 5",
          "select version_number, template_type_code from templates where version_number > 5 group by template_type_code"
        ]
      }
    ],
    [
      {
        "question": "Show the template type code for all templates.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates"
        ]
      },
      {
        "question": "For each of them, count the number of templates",
        "query": [
          "select template_type_code, count (*) from templates group by template_type_code",
          "select distinct template_type_code from templates group by template_type_code",
          "select distinct template_type_code, count (*) from templates group by template_type_code",
          "select count (*) from templates group by template_type_code",
          "select count (*) from templates group by template_type_code",
          "select distinct template_type_code from templates",
          "select template_type_code from templates group by template_type_code",
          "select distinct count (*) from templates",
          "select distinct count (*) from templates group by template_type_code"
        ]
      }
    ],
    [
      {
        "question": "Show all type codes for templates.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates"
        ]
      },
      {
        "question": "For each of them, how many templates do they contain?",
        "query": [
          "select template_type_code, count (*) from templates group by template_type_code",
          "select template_type_code, count (*) from templates group by template_type_code",
          "select template_type_code, count (*) from templates group by template_type_code",
          "select count (*) from templates group by template_type_code",
          "select count (*) from templates group by template_type_code",
          "select distinct template_type_code, count (*) from templates group by template_type_code",
          "select distinct template_type_code from templates group by template_type_code",
          "select distinct count (*) from templates group by template_type_code",
          "select distinct template_type_code from templates",
          "select distinct count (*) from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code"
        ]
      },
      {
        "question": "Which of them contains the most templates?",
        "query": [
          "select template_type_code from templates group by template_type_code order by count (*) desc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) desc limit 1",
          "select distinct template_type_code from templates group by template_type_code order by count (*) desc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) desc limit 1",
          "select distinct count (*) from templates group by template_type_code order by count (*) desc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) asc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) asc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) desc 1",
          "select template_type_code from templates group by template_type_code order by count (*) desc 1",
          "select template_type_code from templates group by template_type_code order by count (*) desc 1"
        ]
      }
    ],
    [
      {
        "question": "Show all template type codes.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates"
        ]
      },
      {
        "question": "For each of them, show the count of templates.",
        "query": [
          "select template_type_code, count (*) from templates group by template_type_code",
          "select template_type_code, count (*) from templates group by template_type_code",
          "select template_type_code, count (*) from templates group by template_type_code",
          "select distinct template_type_code, count (*) from templates group by template_type_code",
          "select distinct template_type_code from templates group by template_type_code",
          "select distinct template_type_code from templates",
          "select count (*) from templates group by template_type_code",
          "select distinct count (*) from templates"
        ]
      },
      {
        "question": "Which of them have fewer than three templates?",
        "query": [
          "select template_type_code from templates group by template_type_code having count (*) < 3",
          "select template_type_code from templates group by template_type_code having count (*) < 3",
          "select distinct template_type_code from templates group by template_type_code having count (*) < 3",
          "select template_type_code from templates group by template_type_code having count (*) < 3",
          "select template_type_code from templates group by template_type_code having count (*) > 3",
          "select template_type_code from templates group by template_type_code having count (*) > 3",
          "select template_type_code from templates group by template_type_code having count (*) <3",
          "select template_type_code from templates group by template_type_code having count (*) <3",
          "select template_type_code from templates group by template_type_code having count (*) >= 3",
          "select template_type_code from templates group by template_type_code having count (*) <= 3"
        ]
      }
    ],
    [
      {
        "question": "Show the version number for all templates.",
        "query": [
          "select version_number from templates",
          "select version_number from templates",
          "select distinct version_number from templates",
          "select version_number from templates"
        ]
      },
      {
        "question": "What is the smallest value?",
        "query": [
          "select min (version_number) from templates",
          "select min (version_number) from templates",
          "select version_number from templates order by version_number asc limit 1",
          "select distinct min (version_number) from templates",
          "select distinct version_number from templates order by version_number asc limit 1",
          "select min (version_number) from templates",
          "select distinct max (version_number) from templates",
          "select max (version_number) from templates",
          "select max (version_number) from templates",
          "select min (version_number) from templates"
        ]
      },
      {
        "question": "Also show its template type code.",
        "query": [
          "select min (version_number), template_type_code from templates",
          "select version_number, template_type_code from templates order by version_number asc limit 1",
          "select min (version_number), template_type_code from templates",
          "select min (version_number), template_type_code from templates order by version_number asc limit 1",
          "select version_number, template_type_code from templates order by version_number asc limit 1",
          "select distinct min (version_number), template_type_code from templates",
          "select min (version_number), template_type_code from templates order by version_number asc",
          "select min (version_number), template_type_code from templates",
          "select max (version_number), template_type_code from templates order by version_number asc limit 1",
          "select min (version_number), template_type_code from templates group by template_type_code"
        ]
      }
    ],
    [
      {
        "question": "What is the template type code of the template.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates",
          "select template_type_code from ref_template_types"
        ]
      },
      {
        "question": "Also show the names of all documents using each template.",
        "query": [
          "select t2.template_type_code, t1.document_name from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t1.template_type_code, t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t2.template_type_code, t1.document_name from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t1.template_type_code, t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t2.template_type_code, t1.document_name from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t2.template_type_code, t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t1.template_type_code, t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t2.template_type_code, t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select distinct t1.template_type_code, t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t2.template_type_code, t1.document_id, t1.document_name from documents as t1 join templates as t2 on t1.template_id = t2.template_id"
        ]
      },
      {
        "question": "Which of the template type codes is used by document with the name \"Data base\"?",
        "query": [
          "select t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_name = \"Data base\"",
          "select t2.template_type_code from documents as t1 join templates as t2 on t1.document_name = \"Data base\"",
          "select t2.template_type_code from documents as t1 join templates as t2 on t1.document_id = t2.template_id where t1.document_name = \"Data base\"",
          "select t2.template_type_code from documents as t1 join templates as t2 on t1.document_name = \"Data base\"",
          "select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = \"Data base\"",
          "select distinct t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t1.document_name = \"Data base\"",
          "select t2.template_type_code from documents as t1 join templates as t2 on t1.document_name = \"Data base\"",
          "select t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id where document_name = \"Data base\"",
          "select t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id where document_name = \"Data base\"",
          "select distinct t2.template_type_code from documents as t1 join templates as t2 on t1.document_id = t2.template_id where t1.document_name = \"Data base\""
        ]
      }
    ],
    [
      {
        "question": "Show all document names.",
        "query": [
          "select document_name from documents",
          "select document_name from documents",
          "select distinct document_name from documents",
          "select document_name from documents"
        ]
      },
      {
        "question": "Also show their template type codes.",
        "query": [
          "select t2.document_name, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t1.document_name, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t2.document_name, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t1.document_name, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select distinct t1.document_name, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t2.document_name, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t1.document_name, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select distinct t2.document_name, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t1.document_name, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.document_name"
        ]
      },
      {
        "question": "Which of the documents are using templates with template type code BK?",
        "query": [
          "select t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t1.template_type_code = \"BK\"",
          "select distinct t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t1.template_type_code = \"BK\"",
          "select t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id where template_type_code = \"BK\"",
          "select t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id where template_type_code = \"BK\"",
          "select t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t1.template_type_code = \"BK\"",
          "select distinct t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t1.template_type_code = \"BK\"",
          "select t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t1.template_type_code = \"BG\""
        ]
      }
    ],
    [
      {
        "question": "Show all template type codes.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates"
        ]
      },
      {
        "question": "Also show the document ids using each template.",
        "query": [
          "select t1.template_type_code, t2.document_id from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t1.template_type_code, t2.document_id from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t2.template_type_code, t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t2.template_type_code, t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select t1.template_type_code, t2.document_id from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select distinct t1.template_type_code, t2.document_id from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t2.template_type_code, t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select distinct t2.template_type_code, t1.document_id from documents as t1 join templates as t2 on t1.template_id = t2.template_id"
        ]
      },
      {
        "question": "For each type code, how many documents are using that template?",
        "query": [
          "select t1.template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select distinct t1.template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select distinct count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select distinct t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select distinct count (t2.document_id) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select t1.template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by template_type_code",
          "select t1.template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by template_type_code",
          "select t1.template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code"
        ]
      }
    ],
    [
      {
        "question": "Show the type codes for all templates.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates"
        ]
      },
      {
        "question": "For each, how many documents are using this template?",
        "query": [
          "select t1.template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by template_type_code",
          "select count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select t2.template_type_code, count (*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t2.template_type_code",
          "select template_type_code, count (*) from templates group by template_type_code",
          "select template_type_code, count (*) from templates group by template_type_code",
          "select count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code",
          "select template_type_code, count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by template_type_code"
        ]
      },
      {
        "question": "Order the template type codes in descending order by this number.",
        "query": [
          "select template_type_code from templates group by template_type_code order by count (*) desc",
          "select template_type_code from templates group by template_type_code order by count (*) desc",
          "select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by template_type_code order by count (*) desc",
          "select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t2.template_id order by count (*) desc",
          "select template_type_code from templates group by template_type_code order by count (*) asc",
          "select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code desc",
          "select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code desc"
        ]
      },
      {
        "question": "Which of them has the most?",
        "query": [
          "select template_type_code from templates group by template_type_code order by count (*) desc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) desc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) desc limit 1",
          "select distinct template_type_code from templates group by template_type_code order by count (*) desc limit 1",
          "select distinct count (*) from templates group by template_type_code order by count (*) desc limit 1",
          "select distinct count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code order by count (*) desc limit 1",
          "select distinct t1.template_type_code from templates as t1 group by t1.template_type_code order by count (*) desc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) asc limit 1",
          "select template_type_code from templates group by template_type_code order by count (*) asc limit 1",
          "select distinct count (*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by template_type_code order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show all template type codes.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates"
        ]
      },
      {
        "question": "Show all template type codes that are used by some document.",
        "query": [
          "select template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select template_type_code from templates where template_id in (select template_id from documents)",
          "select template_type_code from templates join documents",
          "select template_type_code from templates group by template_type_code",
          "select template_type_code from templates group by template_type_code having count (*) >= 1"
        ]
      },
      {
        "question": "How about those that are not used by any document?",
        "query": [
          "select template_type_code from templates except select template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select template_type_code from templates except select template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select template_type_code from templates except select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select template_type_code from templates except select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select distinct template_type_code from templates except select template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select distinct template_type_code from templates except select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select template_type_code from templates except select template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select distinct template_type_code from templates",
          "select template_type_code from templates except select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select template_type_code from templates except select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id"
        ]
      }
    ],
    [
      {
        "question": "Show all template type codes.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates"
        ]
      },
      {
        "question": "Also show their descriptions.",
        "query": [
          "select template_type_code, template_type_description from ref_template_types",
          "select template_type_code, template_type_description from ref_template_types",
          "select template_type_code, template_type_description from ref_template_types",
          "select template_type_code, template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select template_type_code, template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select t1.template_type_code, t2.template_type_description from templates as t1 join ref_template_types as t2"
        ]
      }
    ],
    [
      {
        "question": "Show all template type codes and descriptions.",
        "query": [
          "select distinct template_type_code from templates"
        ]
      },
      {
        "question": "What is the description for template type code \"AD\"?",
        "query": [
          "select template_type_description from ref_template_types where template_type_code = \"AD\"",
          "select template_type_description from ref_template_types where template_type_code = \"AD\"",
          "select template_type_description from ref_template_types where template_type_code = \"AD\"",
          "select ref_template_types.template_type_description from ref_template_types where template_type_code = \"AD\"",
          "select ref_template_types.template_type_description from ref_template_types where template_type_code = \"AD\"",
          "select distinct ref_template_types.template_type_description from ref_template_types where template_type_code = \"AD\"",
          "select distinct template_type_description from ref_template_types where template_type_code = \"AD\"",
          "select distinct ref_template_types.template_type_description from templates where template_type_code = \"AD\"",
          "select template_type_code, template_type_description from ref_template_types where template_type_code = \"AD\"",
          "select distinct template_type_description from ref_template_types where template_type_code = \"AD\""
        ]
      }
    ],
    [
      {
        "question": "Show all template type codes.",
        "query": [
          "select template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates",
          "select template_type_code from templates",
          "select distinct template_type_code from templates"
        ]
      },
      {
        "question": "Also show descriptions.",
        "query": [
          "select template_type_code, template_type_description from ref_template_types",
          "select template_type_code, template_type_description from ref_template_types",
          "select template_type_code, template_type_description from ref_template_types",
          "select template_type_code, template_type_description from ref_template_types join templates on templates.template_type_code = ref_template_types.template_type_code",
          "select template_type_code, template_type_description from ref_template_types join templates on templates.template_type_code = ref_template_types.template_type_code"
        ]
      },
      {
        "question": "Which code has template type description \"Book\"?",
        "query": [
          "select template_type_code from ref_template_types where template_type_description = \"Book\"",
          "select template_type_code from ref_template_types where template_type_description = \"Book\"",
          "select template_type_code from ref_template_types where template_type_description = \"Book\"",
          "select distinct template_type_code from ref_template_types where template_type_description = \"Book\"",
          "select template_type_code from ref_template_types where template_type_description = \"BOOK\"",
          "select template_type_code from ref_template_types where template_type_description = \"Books\"",
          "select distinct t2.template_type_code from ref_template_types as t1 join templates as t2 where t1.template_type_description = \"Book\""
        ]
      }
    ],
    [
      {
        "question": "Show the template ids used by any document.",
        "query": [
          "select template_id from documents",
          "select template_id from documents",
          "select distinct template_id from documents",
          "select template_id from documents"
        ]
      },
      {
        "question": "Also show the template type code for those ids.",
        "query": [
          "select t2.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t1.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id",
          "select distinct t1.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id",
          "select t1.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id"
        ]
      },
      {
        "question": "How about their template type descriptions?",
        "query": [
          "select t1.template_type_description, t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select t1.template_type_description, t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select t2.template_id, t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select t2.template_id, t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code"
        ]
      },
      {
        "question": "Show the distinct values among them.",
        "query": [
          "select distinct t1.template_type_description, t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t1.template_type_description, t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t2.template_id, t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t1.template_type_description distinct t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code"
        ]
      }
    ],
    [
      {
        "question": "Show the template id for all templates.",
        "query": [
          "select template_id from templates",
          "select template_id from templates",
          "select distinct template_id from templates",
          "select template_id from templates"
        ]
      },
      {
        "question": "Also show their template type description.",
        "query": [
          "select t1.template_id, t2.template_type_description from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code",
          "select t2.template_id, t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t1.template_id, t2.template_type_description from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code",
          "select distinct t2.template_id, t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code",
          "select t1.template_id, t2.template_type_description from templates as t1 join ref_template_types as t2 on t2.template_type_code = t1.template_type_code",
          "select t2.template_id, t1.template_type_description from ref_template_types as t1 join templates as t2"
        ]
      },
      {
        "question": "What are the template ids with description \"Presentation\"?",
        "query": [
          "select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code where t2.template_type_description = \"Presentation\"",
          "select distinct t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code where t2.template_type_description = \"Presentation\"",
          "select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code where template_type_description = \"Presentation\"",
          "select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code where template_type_description = \"Presentation\"",
          "select t1.template_id from templates as t1 join ref_template_types as t2 on t2.template_type_code = t1.template_type_code where t2.template_type_description = \"Presentation\""
        ]
      }
    ],
    [
      {
        "question": "Show the info for all paragraphs.",
        "query": [
          "select * from paragraphs",
          "select * from paragraphs",
          "select * from paragraphs",
          "select distinct * from paragraphs",
          "select distinct paragraph_id from paragraphs"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from paragraphs",
          "select count (*) from paragraphs",
          "select count (*) from paragraphs",
          "select distinct count (*) from paragraphs",
          "select distinct paragraph_id from paragraphs"
        ]
      }
    ],
    [
      {
        "question": "Show the id for all paragraphs.",
        "query": [
          "select paragraph_id from paragraphs",
          "select paragraph_id from paragraphs",
          "select distinct paragraph_id from paragraphs",
          "select paragraph_id from paragraphs",
          "select document_id from paragraphs"
        ]
      },
      {
        "question": "Also show their document names.",
        "query": [
          "select t1.paragraph_id, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select document_id, paragraph_id from paragraphs",
          "select t2.paragraph_id, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id",
          "select document_id, paragraph_id from paragraphs",
          "select document_id, paragraph_text from paragraphs",
          "select distinct t1.paragraph_id, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select paragraph_id, document_id from paragraphs",
          "select document_id, paragraph_text from paragraphs",
          "select t2.paragraph_id, t1.document_name from documents as t1 join paragraphs as t2"
        ]
      },
      {
        "question": "Only show the id for all paragraphs in the document named 'Summer Show'.",
        "query": [
          "select t1.paragraph_id from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Summer Show\"",
          "select distinct t1.paragraph_id from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Summer Show\"",
          "select t2.paragraph_id from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id where t1.document_name = \"Summer Show\"",
          "select t1.paragraph_id from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where document_name = \"Summer Show\"",
          "select t1.paragraph_id from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Spring Show\"",
          "select t1.paragraph_id from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Summer show\"",
          "select t1.paragraph_id from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Winter Show\""
        ]
      },
      {
        "question": "How many such paragraphs are there?",
        "query": [
          "select count (*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Summer Show\"",
          "select count (*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Summer Show\"",
          "select count (*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Summer Show\"",
          "select distinct count (*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Summer Show\"",
          "select distinct t1.paragraph_id from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Summer Show\"",
          "select count (*) from paragraphs as t1 join documents as t2 on t1.paragraph_id = t2.document_id where t2.document_name = \"Summer Show\"",
          "select count (*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Spring Show\"",
          "select count (*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Spring Show\""
        ]
      }
    ],
    [
      {
        "question": "Show the parapraph text for all paragraphs.",
        "query": [
          "select paragraph_text from paragraphs",
          "select paragraph_text from paragraphs",
          "select distinct paragraph_text from paragraphs",
          "select paragraph_text from paragraphs"
        ]
      },
      {
        "question": "Also show their paragraph details.",
        "query": [
          "select paragraph_text, other_details from paragraphs",
          "select paragraph_text, other_details from paragraphs",
          "select t1.paragraph_text, t2.other_details from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t1.paragraph_text, t1.other_details from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select paragraph_text, other_details from paragraphs",
          "select t1.paragraph_text, t2.other_details from paragraphs as t1 join paragraphs as t2 on t1.document_id = t2.document_id",
          "select distinct t1.paragraph_text, t1.other_details from paragraphs as t1",
          "select t1.paragraph_text, t1.other_details from paragraphs as t1",
          "select t1.paragraph_text, t2.other_details from paragraphs as t1 join paragraphs as t2 on t1.paragraph_id = t2.paragraph_id",
          "select t1.paragraph_text, t1.other_details from paragraphs as t1"
        ]
      },
      {
        "question": "What are the details for the paragraph containing 'Korea'?",
        "query": [
          "select other_details from paragraphs where paragraph_text = \"Korea\"",
          "select other_details from paragraphs where paragraph_text = \"Korea\"",
          "select paragraph_text, other_details from paragraphs where paragraph_text = \"Korea\"",
          "select other_details from paragraphs where paragraph_text like \"% Korea%\"",
          "select distinct other_details from paragraphs where paragraph_text = \"Korea\"",
          "select other_details from paragraphs where paragraph_text like \"% Korea%\"",
          "select other_details from paragraphs where paragraph_text like \"%Korea%\"",
          "select other_details from paragraphs where paragraph_text like \"%Korea%\"",
          "select * from paragraphs where paragraph_text = \"Korea\"",
          "select distinct other_details from paragraphs where paragraph_text like \"% Korea%\""
        ]
      }
    ],
    [
      {
        "question": "Show all paragraph ids and texts.",
        "query": [
          "select paragraph_id, paragraph_text from paragraphs",
          "select distinct paragraph_id, paragraph_text from paragraphs"
        ]
      },
      {
        "question": "For each of them, also show their document name.",
        "query": [
          "select t1.paragraph_id, t1.paragraph_text, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t2.paragraph_id, t2.paragraph_text, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id",
          "select t1.paragraph_id, t1.paragraph_text, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t2.paragraph_id, t2.paragraph_text, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id",
          "select t1.paragraph_id, t1.paragraph_text, t2.document_id from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t2.paragraph_id, t2.paragraph_text, t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id",
          "select t1.paragraph_id, t1.paragraph_text, t2.document_id, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t1.paragraph_id, t1.paragraph_text, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select distinct t1.paragraph_id, t1.paragraph_text, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id"
        ]
      },
      {
        "question": "What are the ids and texts for the paragraph in the document with name 'Welcome to NY'?",
        "query": [
          "select t1.paragraph_id, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where document_name = \"Welcome to NY\""
        ]
      }
    ],
    [
      {
        "question": "Show all paragraph text.",
        "query": [
          "select paragraph_text from paragraphs",
          "select paragraph_text from paragraphs",
          "select distinct paragraph_text from paragraphs",
          "select paragraph_text from paragraphs"
        ]
      },
      {
        "question": "For each of them, also show the document name.",
        "query": [
          "select t1.paragraph_text, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t2.paragraph_text, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id",
          "select t1.paragraph_text, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t2.document_name, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t2.paragraph_text, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id",
          "select t2.document_name, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select distinct t1.paragraph_text, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t1.paragraph_text, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id",
          "select t2.paragraph_text, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id",
          "select t2.paragraph_text, t1.document_name from documents as t1 join paragraphs as t2"
        ]
      },
      {
        "question": "What is the text for the document \"Customer reviews\"?",
        "query": [
          "select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Customer reviews\"",
          "select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Customer reviews\"",
          "select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Customer reviews\"",
          "select distinct t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Customer reviews\"",
          "select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Customer Reviews\"",
          "select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Customer Reviews\"",
          "select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"customer reviews\"",
          "select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"customer reviews\"",
          "select distinct t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Customer reviews\"",
          "select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where document_name = \"Customer reviews\""
        ]
      }
    ],
    [
      {
        "question": "Show the document id for all paragraphs.",
        "query": [
          "select document_id from paragraphs",
          "select document_id from paragraphs",
          "select distinct document_id from paragraphs",
          "select document_id from paragraphs",
          "select distinct paragraph_id from paragraphs",
          "select paragraph_id from paragraphs"
        ]
      },
      {
        "question": "For each id, show the number of paragraphs.",
        "query": [
          "select distinct document_id, count (*) from paragraphs",
          "select distinct document_id from paragraphs",
          "select document_id, count (*) from paragraphs",
          "select document_id, count (*) from paragraphs"
        ]
      },
      {
        "question": "Order by document id.",
        "query": [
          "select document_id, count (*) from paragraphs order by document_id",
          "select distinct document_id from paragraphs order by document_id",
          "select distinct document_id from paragraphs order by document_id",
          "select distinct document_id, count (*) from paragraphs order by document_id",
          "select distinct document_id from paragraphs",
          "select distinct document_id from paragraphs order by document_id",
          "select document_id from paragraphs group by document_id order by document_id",
          "select distinct document_id from paragraphs",
          "select * from paragraphs order by document_id",
          "select document_id from paragraphs order by document_id"
        ]
      }
    ],
    [
      {
        "question": "Show all document ids and names.",
        "query": [
          "select document_id, document_name from documents",
          "select document_id, document_name from documents",
          "select distinct document_id, document_name from documents",
          "select document_id, document_name from documents"
        ]
      },
      {
        "question": "For each of them, count the number of paragraphs in each document.",
        "query": [
          "select document_id, document_name, count (*) from documents group by document_id",
          "select document_id, document_name, count (*) from documents group by document_id",
          "select document_id, count (*) from paragraphs group by document_id",
          "select document_id, count (*) from paragraphs group by document_id",
          "select distinct document_id, document_name from documents group by document_id",
          "select document_id, document_name, count (*) from documents group by document_id",
          "select document_id, count (*) from documents group by document_id",
          "select document_id, count (*) from documents group by document_id",
          "select document_id, document_name, count (*) from documents as t1 join paragraphs as t2 group by t1.document_id",
          "select document_id, document_name, count (*) from documents as t1 join paragraphs as t2 group by document_id"
        ]
      }
    ],
    [
      {
        "question": "Show the document id for all paragraphs.",
        "query": [
          "select document_id from paragraphs",
          "select document_id from paragraphs",
          "select distinct document_id from paragraphs",
          "select document_id from paragraphs",
          "select distinct paragraph_id from paragraphs",
          "select paragraph_id from paragraphs"
        ]
      },
      {
        "question": "For each of these document ids, count the number of paragraphs.",
        "query": [
          "select document_id, count (*) from paragraphs group by document_id",
          "select distinct document_id, count (*) from paragraphs group by document_id",
          "select distinct document_id, count (*) from paragraphs",
          "select count (*) from paragraphs group by document_id",
          "select distinct document_id from paragraphs group by document_id",
          "select distinct document_id from paragraphs",
          "select document_id from paragraphs group by document_id",
          "select document_id, count (*) from paragraphs",
          "select count (*), document_id from paragraphs group by document_id"
        ]
      },
      {
        "question": "Which of them have at least two paragraphs?",
        "query": [
          "select document_id from paragraphs group by document_id having count (*) >= 2",
          "select document_id from paragraphs group by document_id having count (*) >= 2",
          "select distinct document_id from paragraphs group by document_id having count (*) >= 2",
          "select document_id from paragraphs group by document_id having count (*) >= 2",
          "select document_id from paragraphs group by document_id having count (*) > 2",
          "select document_id from paragraphs group by document_id having count (*) > 2"
        ]
      }
    ],
    [
      {
        "question": "Show the id number and name for all documents.",
        "query": [
          "select document_id, document_name from documents",
          "select distinct document_id, document_name from documents",
          "select template_id, document_name from documents"
        ]
      },
      {
        "question": "Also show the paragraph id for those documents.",
        "query": [
          "select distinct document_id, document_name from documents"
        ]
      },
      {
        "question": "For each of these results, count the number of paragraphs.",
        "query": [
          "select document_id, document_name, count (*) from documents group by document_id",
          "select document_id, document_name, count (*) from documents group by document_id",
          "select distinct document_id, document_name, count (*) from documents group by document_id",
          "select distinct document_id, document_name from documents group by document_id",
          "select document_id, count (*) from documents group by document_id",
          "select document_id, document_name, count (*) from documents group by document_id",
          "select document_id, count (*) from documents group by document_id",
          "select distinct document_id, document_name from documents",
          "select count (*), document_id from documents group by document_id",
          "select distinct document_id, document_name, count (*) from documents"
        ]
      },
      {
        "question": "Which of them is the longest?",
        "query": [
          "select distinct document_id from documents group by document_id order by count (*) desc limit 1",
          "select document_id from documents group by document_id order by count (*) desc limit 1",
          "select document_id, document_name from documents order by count (*) desc limit 1",
          "select document_id from documents group by document_id order by count (*) desc limit 1",
          "select document_id, document_name from documents order by count (*) desc limit 1",
          "select distinct document_id, document_name from documents order by count (*) desc limit 1",
          "select document_id from documents group by document_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show the document id for all paragraphs.",
        "query": [
          "select document_id from paragraphs",
          "select document_id from paragraphs",
          "select distinct document_id from paragraphs",
          "select document_id from paragraphs",
          "select distinct paragraph_id from paragraphs",
          "select paragraph_id from paragraphs"
        ]
      },
      {
        "question": "For each of them, count the number of paragraphs.",
        "query": [
          "select document_id, count (*) from paragraphs group by document_id",
          "select document_id, count (*) from paragraphs group by document_id",
          "select document_id, count (*) from paragraphs group by document_id",
          "select distinct document_id, count (*) from paragraphs group by document_id",
          "select distinct document_id, count (*) from paragraphs",
          "select distinct document_id from paragraphs group by document_id",
          "select count (*) from paragraphs group by document_id",
          "select distinct document_id from paragraphs",
          "select distinct count (*) from paragraphs",
          "select count (*) from paragraphs group by document_id"
        ]
      },
      {
        "question": "Sort them by these counts.",
        "query": [
          "select document_id from paragraphs group by document_id order by count (*)",
          "select distinct document_id from paragraphs group by document_id order by count (*)"
        ]
      },
      {
        "question": "Which has the fewest?",
        "query": [
          "select document_id from paragraphs group by document_id order by count (*) asc limit 1",
          "select document_id from paragraphs group by document_id order by count (*) asc limit 1",
          "select distinct document_id from paragraphs group by document_id order by count (*) asc limit 1",
          "select document_id from paragraphs group by document_id order by count (*) asc limit 1",
          "select distinct document_id from paragraphs order by count (*) asc limit 1",
          "select document_id from paragraphs group by document_id order by count (*) limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show the document id for all paragraphs.",
        "query": [
          "select document_id from paragraphs",
          "select document_id from paragraphs",
          "select distinct document_id from paragraphs",
          "select document_id from paragraphs",
          "select distinct paragraph_id from paragraphs",
          "select paragraph_id from paragraphs"
        ]
      },
      {
        "question": "For each of these ids, show the number of paragraphs.",
        "query": [
          "select distinct document_id, count (*) from paragraphs",
          "select document_id, count (*) from paragraphs",
          "select count (*) from paragraphs group by document_id",
          "select distinct document_id from paragraphs",
          "select document_id, count (*) from paragraphs"
        ]
      },
      {
        "question": "Which of them have between 1 and 2 paragraphs?",
        "query": [
          "select document_id from paragraphs group by document_id having count (*) between 1 and 2",
          "select distinct document_id from paragraphs where count (*) between 1 and 2",
          "select distinct document_id from paragraphs group by document_id having count (*) between 1 and 2",
          "select document_id from paragraphs where count (*) between 1 and 2",
          "select distinct document_id from paragraphs where count (*) between 1 and 2",
          "select document_id from paragraphs group by document_id having count (*) between 1 and 2",
          "select distinct document_id from paragraphs group by document_id having count (*) between 1 and 2",
          "select document_id from paragraphs group by document_id having count (*)between 1 and 2"
        ]
      }
    ]
  ],
  "concert_singer": [
    [
      {
        "question": "Show information for all singers.",
        "query": [
          "select * from singer",
          "select * from singer",
          "select * from singer",
          "select distinct * from singer",
          "select distinct singer_id from singer",
          "select distinct name from singer"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from singer",
          "select count (*) from singer",
          "select distinct count (*) from singer",
          "select count (*) from singer",
          "select distinct singer_id from singer"
        ]
      }
    ],
    [
      {
        "question": "Show names of all singers.",
        "query": [
          "select name from singer",
          "select name from singer",
          "select distinct name from singer",
          "select name from singer"
        ]
      },
      {
        "question": "For each of them, also show country and age.",
        "query": [
          "select name, country, age from singer",
          "select name, country, age from singer",
          "select name, country, age from singer",
          "select distinct name, country, age from singer",
          "select distinct singer_id, name, country, age from singer"
        ]
      },
      {
        "question": "List the results in descending order of their age.",
        "query": [
          "select name from singer order by age desc",
          "select name from singer order by age desc",
          "select name, country, age from singer order by age desc",
          "select distinct name from singer order by age desc",
          "select name from singer order by age desc",
          "select name, country, age from singer order by age desc",
          "select distinct name, country, age from singer order by age desc",
          "select name, country, age from singer order by age desc"
        ]
      }
    ],
    [
      {
        "question": "Show age for all singers.",
        "query": [
          "select age from singer",
          "select age from singer",
          "select distinct age from singer",
          "select age from singer",
          "select distinct singer_id from singer",
          "select distinct singer_id, age from singer"
        ]
      },
      {
        "question": "What about age for those from France?",
        "query": [
          "select age from singer where country = \"France\"",
          "select age from singer where country = \"France\"",
          "select age from singer where country = \"France\"",
          "select age from singer where country = \"French\"",
          "select distinct age from singer where country = \"France\"",
          "select distinct count (*) from singer where country = \"France\"",
          "select age from singer where country = \"French\"",
          "select distinct singer_id from singer where country = \"France\"",
          "select age from singer where country = \"FRANCE\"",
          "select age from singer where country = \"FRANCE\""
        ]
      },
      {
        "question": "What is the average, minimum, and maximum age for those?",
        "query": [
          "select avg (age), min (age), max (age) from singer where country = \"France\"",
          "select avg (age), min (age), max (age) from singer where country = \"France\"",
          "select avg (age), min (age), max (age) from singer where country = \"France\"",
          "select distinct avg (age), min (age), max (age) from singer where country = \"France\"",
          "select avg (age), max (age), min (age) from singer where country = \"France\"",
          "select avg (age), max (age), min (age) from singer where country = \"France\"",
          "select distinct avg (age), max (age), min (age) from singer where country = \"France\"",
          "select avg (age), max (age), min (age) from singer where country = \"France\"",
          "select max (age), min (age), avg (age) from singer where country = \"France\"",
          "select max (age), min (age), avg (age) from singer where country = \"France\""
        ]
      }
    ],
    [
      {
        "question": "Show the names of all songs.",
        "query": [
          "select song_name from singer",
          "select song_name from singer",
          "select distinct song_name from singer",
          "select song_name from singer",
          "select name from singer",
          "select name from singer"
        ]
      },
      {
        "question": "Also show the release year for each of them.",
        "query": [
          "select song_name, song_release_year from singer",
          "select song_name, song_release_year from singer",
          "select song_name, song_release_year from singer",
          "select distinct song_name, song_release_year from singer",
          "select song_name, song_release_year from Singer",
          "select song_name, song_release_year from Singer",
          "select song_name, song_release_year from Singer"
        ]
      },
      {
        "question": "Order the result by the age of their singers.",
        "query": [
          "select song_name from singer order by age",
          "select song_name from singer order by age",
          "select distinct song_name from singer order by age",
          "select distinct order by age from singer",
          "select song_name from singer order by age desc"
        ]
      },
      {
        "question": "What is the result for the song by the yongest?",
        "query": [
          "select song_name from singer order by age desc limit 1",
          "select song_name from singer order by age desc limit 1",
          "select distinct song_name from singer order by age desc limit 1",
          "select song_name from singer order by age desc limit 1",
          "select song_name from singer order by age desc 1",
          "select song_name from singer order by song_release_year desc limit 1",
          "select song_name from singer order by age desc 1"
        ]
      }
    ],
    [
      {
        "question": "Show country for all singers.",
        "query": [
          "select country from singer",
          "select country from singer",
          "select distinct country from singer",
          "select country from singer",
          "select distinct country from singer"
        ]
      },
      {
        "question": "Only show the results for those above 20.",
        "query": [
          "select country from singer where age > 20",
          "select country from singer where age > 20",
          "select distinct country from singer where age > 20",
          "select country from singer where age > 20",
          "select distinct country from singer where age > 20",
          "select country from singer where age >= 20",
          "select count (*) from singer where age > 20",
          "select country from singer where is_male > 20",
          "select distinct country from singer where age > 20",
          "select country from singer where age >= 20"
        ]
      },
      {
        "question": "What are all distinct countries for them?",
        "query": [
          "select distinct country from singer where age > 20",
          "select distinct country from singer where age > 20",
          "select distinct country from singer where age > 20",
          "select distinct country from singer where age > 20",
          "select distinct (country) from singer where age > 20",
          "select distinct country from singer where age >20",
          "select distinct country from singer where age >20"
        ]
      }
    ],
    [
      {
        "question": "Show the country for all singers.",
        "query": [
          "select country from singer",
          "select country from singer",
          "select distinct country from singer",
          "select country from singer"
        ]
      },
      {
        "question": "For each of them, what is the number of singers?",
        "query": [
          "select country, count (*) from singer group by country",
          "select count (*) from singer group by country",
          "select country, count (*) from singer group by country",
          "select count (*) from singer group by country",
          "select count (*), country from singer group by country",
          "select distinct count (*) from singer",
          "select country, count (*) from singer group by country",
          "select count (*), country from singer group by country",
          "select count (*) from singer group by country",
          "select distinct count (*) from singer group by country"
        ]
      }
    ],
    [
      {
        "question": "What is the average age for all singers?",
        "query": [
          "select avg (age) from singer",
          "select avg (age) from singer",
          "select distinct avg (age) from singer",
          "select avg (age) from singer",
          "select distinct singer_id from singer_in_concert",
          "select distinct t1.age from singer as t1",
          "select distinct max (age) from singer",
          "select distinct age from singer",
          "select distinct min (age) from singer",
          "select distinct singer_id, avg (age) from singer"
        ]
      },
      {
        "question": "Show the name for songs by singers older than that.",
        "query": [
          "select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg (age) from singer)",
          "select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id where t2.age > (select avg (age) from singer)",
          "select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg (age) from singer)",
          "select distinct t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg (age) from singer)",
          "select name from singer where age > (select avg (age) from singer)",
          "select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id where t2.age > (select avg (age) from singer)",
          "select song_name from singer where age > (select avg (age) from singer)",
          "select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg (age) from singer)",
          "select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where age > (select avg (age) from singer)"
        ]
      }
    ],
    [
      {
        "question": "Show the name for all stadiums.",
        "query": [
          "select name from stadium",
          "select name from stadium",
          "select distinct name from stadium",
          "select name from stadium",
          "select distinct stadium_id from stadium",
          "select distinct stadium_id from concert"
        ]
      },
      {
        "question": "What about those with a capacity between 5000 and 10000?",
        "query": [
          "select name from stadium where capacity between 5000 and 10000",
          "select name from stadium where capacity between 5000 and 10000",
          "select distinct name from stadium where capacity between 5000 and 10000",
          "select name from stadium where capacity between 5000 and 10000",
          "select distinct stadium_id from stadium where capacity between 5000 and 10000",
          "select name from stadium where capacity between 5000 and 100000",
          "select name from stadium where capacity between 5000 and 100000"
        ]
      },
      {
        "question": "Also list the location for them.",
        "query": [
          "select name, location from stadium where capacity between 5000 and 10000",
          "select name, location from stadium where capacity between 5000 and 10000",
          "select distinct name, location from stadium where capacity between 5000 and 10000",
          "select name, location from stadium where capacity between 5000 and 10000",
          "select location, name from stadium where capacity between 5000 and 10000",
          "select distinct location, name from stadium where capacity between 5000 and 10000",
          "select location from stadium where capacity between 5000 and 10000",
          "select distinct location from stadium where capacity between 5000 and 10000",
          "select location from stadium where capacity between 5000 and 10000",
          "select location, name from stadium where capacity between 5000 and 10000"
        ]
      }
    ],
    [
      {
        "question": "Show the capacity for all stadiums.",
        "query": [
          "select capacity from stadium",
          "select distinct capacity from stadium",
          "select capacity from stadium",
          "select capacity from stadium",
          "select distinct stadium_id from stadium",
          "select distinct stadium.capacity from stadium"
        ]
      },
      {
        "question": "What is the average of them?",
        "query": [
          "select avg (capacity) from stadium",
          "select avg (capacity) from stadium",
          "select distinct avg (capacity) from stadium",
          "select avg (capacity) from stadium",
          "select average from stadium",
          "select distinct average from stadium",
          "select avg (capacity) from stadium",
          "select average from stadium",
          "select distinct stadium_id from stadium"
        ]
      },
      {
        "question": "Also show the maximum.",
        "query": [
          "select avg (capacity), max (capacity) from stadium",
          "select avg (capacity), max (capacity) from stadium",
          "select distinct avg (capacity), max (capacity) from stadium",
          "select avg (capacity), max (capacity) from stadium",
          "select distinct max (capacity), avg (capacity) from stadium",
          "select distinct max (capacity) from stadium",
          "select distinct avg (capacity) from stadium",
          "select avg (capacity), min (capacity) from stadium",
          "select avg (capacity),max (capacity) from stadium"
        ]
      }
    ],
    [
      {
        "question": "Show the name and capacity for all stadiums.",
        "query": [
          "select name, capacity from stadium",
          "select name, capacity from stadium",
          "select distinct name, capacity from stadium",
          "select name, capacity from stadium",
          "select distinct location, capacity from stadium",
          "select distinct name from stadium"
        ]
      },
      {
        "question": "Show the result in descending order of their average attendance.",
        "query": [
          "select name, capacity from stadium order by average desc",
          "select name, capacity from stadium order by average desc",
          "select name, capacity from stadium order by average desc",
          "select name from stadium order by average desc",
          "select name, capacity from stadium order by avg (capacity) desc",
          "select distinct stadium_id from stadium order by average desc",
          "select name from stadium order by average desc",
          "select distinct name from stadium order by average desc",
          "select distinct name, capacity from stadium order by average desc",
          "select name, capacity from stadium order by avg (average) desc"
        ]
      },
      {
        "question": "Which one has the highest?",
        "query": [
          "select name from stadium order by average desc limit 1",
          "select name, capacity from stadium order by average desc limit 1",
          "select name from stadium order by average desc limit 1",
          "select distinct name from stadium order by average desc limit 1",
          "select name from stadium order by average desc limit 1",
          "select distinct stadium_id from stadium order by average desc limit 1",
          "select name from stadium order by average desc 1",
          "select distinct max (capacity) from stadium order by average desc",
          "select name, capacity from stadium order by average asc limit 1",
          "select name, capacity from stadium order by average desc 1"
        ]
      }
    ],
    [
      {
        "question": "Show the concert information in year 2014.",
        "query": [
          "select * from concert where year = 2014",
          "select * from concert where year = 2014",
          "select * from concert where year = 2014",
          "select distinct * from concert where year = 2014",
          "select distinct concert_id from concert where year = 2014",
          "select distinct concert_name from concert where year = 2014"
        ]
      },
      {
        "question": "Also show those in year 2015.",
        "query": [
          "select * from concert where year = 2014 or year = 2015",
          "select * from concert where year = 2014 or year = 2015",
          "select * from concert where year = 2014 or year = 2015",
          "select * from concert where year = 2014 intersect select * from concert where year = 2015",
          "select * from concert where year = 2014 union select * from concert where year = 2015",
          "select distinct select * from concert where year = 2014 or year = 2015",
          "select distinct * from concert where year = 2014 or year = 2015",
          "select * from concert where year = 2015 or year = 2014",
          "select * from concert where year = 2014",
          "select * from concert where year = 2014"
        ]
      },
      {
        "question": "How many are there in total?",
        "query": [
          "select count (*) from concert where year = 2014 or year = 2015",
          "select count (*) from concert where year = 2014 or year = 2015",
          "select distinct count (*) from concert where year = 2014 or year = 2015",
          "select count (*) from concert where year = 2014 or year = 2015"
        ]
      }
    ],
    [
      {
        "question": "Show the names of stadiums.",
        "query": [
          "select name from stadium",
          "select name from stadium",
          "select distinct name from stadium",
          "select name from stadium",
          "select distinct stadium_id from concert",
          "select distinct stadium_id from stadium",
          "select distinct stadium.name from stadium"
        ]
      },
      {
        "question": "For each of them, also show the number of concerts.",
        "query": [
          "select t2.name, count (*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id",
          "select t2.name, count (*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id",
          "select t2.name, count (*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t2.name",
          "select t2.name, count (*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t2.name",
          "select distinct t2.name, count (*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t2.name",
          "select t2.name, count (*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id",
          "select t1.name, count (*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id",
          "select t2.name, count (*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t2.name",
          "select t1.name, count (*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id",
          "select distinct t1.name, count (*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.name"
        ]
      }
    ],
    [
      {
        "question": "Show all stadium names and their capacities.",
        "query": [
          "select name, capacity from stadium",
          "select name, capacity from stadium",
          "select distinct name, capacity from stadium",
          "select name, capacity from stadium",
          "select distinct stadium_id, name from stadium",
          "select distinct location, capacity from stadium",
          "select distinct stadium_id, capacity from stadium",
          "select distinct name from stadium",
          "select distinct stadium.name, capacity from stadium"
        ]
      },
      {
        "question": "Order the results in descending order of the number of concerts in year 2014 or after.",
        "query": [
          "select name from stadium order by count (*) desc",
          "select name, capacity from stadium order by count (*) desc",
          "select name from stadium order by count (*) desc",
          "select name from stadium order by capacity desc",
          "select name, capacity from stadium order by count (*) desc"
        ]
      },
      {
        "question": "Which one has the most?",
        "query": [
          "select name from stadium order by count (*) desc limit 1",
          "select name from stadium order by count (*) desc limit 1",
          "select name from stadium order by count (*) desc limit 1",
          "select distinct name from stadium order by count (*) desc limit 1",
          "select distinct count (*) from stadium order by count (*) desc limit 1",
          "select distinct stadium_id from concert where year > 2014 order by count (*) desc limit 1",
          "select distinct count (*) from concert where year > 2014 order by count (*) desc limit 1",
          "select name from stadium order by count (*) asc limit 1",
          "select distinct count (*) from stadium order by count (*) asc limit 1",
          "select distinct count (*) from stadium order by count (*) desc"
        ]
      }
    ],
    [
      {
        "question": "Show the year for all concerts.",
        "query": [
          "select year from concert",
          "select year from concert",
          "select distinct year from concert",
          "select year from concert",
          "select year from concert"
        ]
      },
      {
        "question": "Order them in descending order of the number of concerts",
        "query": [
          "select year from concert order by count (*) desc",
          "select year from concert group by year order by count (*) desc",
          "select year from concert order by count (*) desc",
          "select distinct count (*) from concert order by count (*) desc",
          "select distinct year from concert order by count (*) desc",
          "select year from concert order by count (*) desc",
          "select distinct year from concert group by year order by count (*) desc",
          "select distinct count (*) from concert",
          "select year from concert group by year order by count (*) asc",
          "select year from concert order by count (*) asc"
        ]
      },
      {
        "question": "Which year has the most?",
        "query": [
          "select year from concert order by count (*) desc limit 1",
          "select year from concert order by count (*) desc limit 1",
          "select distinct year from concert order by count (*) desc limit 1",
          "select year from concert group by year order by count (*) desc limit 1",
          "select year from concert order by count (*) desc limit 1",
          "select distinct count (*) from concert order by year desc limit 1",
          "select distinct year from concert group by year order by count (*) desc limit 1",
          "select distinct (year) from concert order by count (*) desc limit 1",
          "select distinct max (year) from concert",
          "select year from concert group by year order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show all stadium ids of concerts.",
        "query": [
          "select stadium_id from concert",
          "select distinct stadium_id from concert",
          "select stadium_id from concert",
          "select distinct stadium_id from concert",
          "select distinct stadium_id from concert",
          "select stadium_id from concert"
        ]
      },
      {
        "question": "Show the stadium names without any concert.",
        "query": [
          "select name from stadium",
          "select name from stadium",
          "select distinct name from stadium",
          "select distinct stadium_id from concert",
          "select distinct stadium_id from stadium",
          "select stadium_id, name from stadium",
          "select stadium_id from concert",
          "select distinct stadium.name from stadium",
          "select distinct location from stadium"
        ]
      }
    ],
    [
      {
        "question": "Show the country for all singers.",
        "query": [
          "select country from singer",
          "select country from singer",
          "select distinct country from singer",
          "select country from singer"
        ]
      },
      {
        "question": "How about those for singers above age 40?",
        "query": [
          "select country from singer where age > 40",
          "select country from singer where age > 40",
          "select distinct country from singer where age > 40",
          "select country from singer where age > 40",
          "select distinct country from singer where age > 40",
          "select distinct singer_id from singer where age > 40",
          "select distinct t1.country from singer as t1",
          "select country from singer where age >40"
        ]
      },
      {
        "question": "How about those for singers below 30?",
        "query": [
          "select country from singer where age < 30",
          "select country from singer where age < 30",
          "select distinct country from singer where age < 30",
          "select country from singer where age < 30",
          "select country from singer where age < 40",
          "select country from singer where age <30"
        ]
      },
      {
        "question": "How about countries with both?",
        "query": [
          "select country from singer where age > 40 intersect select country from singer where age < 30",
          "select country from singer where age < 30 intersect select country from singer where age > 40",
          "select country from singer where age > 40 intersect select country from singer where age < 30",
          "select country from singer where age > 30 intersect select country from singer where age < 30",
          "select country from singer where age < 30 intersect select country from singer where age > 40",
          "select distinct country from singer where age > 40 intersect select country from singer where age < 30",
          "select country from singer where age > 40 intersect select country from singer where age < 30",
          "select distinct country from singer where age < 30 intersect select country from singer where age > 40",
          "select country from singer where age between 30 and 40",
          "select country from singer where age < 30 intersect select country from singer where age > 40"
        ]
      }
    ],
    [
      {
        "question": "Show name for stadiums that had a concert in year 2014.",
        "query": [
          "select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select distinct t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select t1.name from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014",
          "select distinct t1.name from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014",
          "select t1.name from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014",
          "select t2.name from concert as t1 join stadium as t2 on t2.stadium_id = t1.stadium_id where t1.year = 2014",
          "select t2.name from concert as t1 join stadium as t2 on t2.stadium_id = t1.stadium_id where t1.year = 2014",
          "select distinct t1.name from stadium as t1 join concert as t2 where t2.year = 2014"
        ]
      },
      {
        "question": "Show names for all stadiums except for those.",
        "query": [
          "select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select distinct name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select distinct t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select distinct * from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2013",
          "select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015"
        ]
      }
    ],
    [
      {
        "question": "Show the name and theme for all concerts.",
        "query": [
          "select concert_name, theme from concert",
          "select concert_name, theme from concert",
          "select distinct concert_name, theme from concert",
          "select concert_name, theme from concert",
          "select concert_name, theme from concert",
          "select t1.concert_name, t2.theme from concert as t1 join concert as t2 on t1.concert_id = t2.concert_id",
          "select distinct t1.concert_name, t1.theme from concert as t1",
          "select t2.concert_name, t2.theme from concert as t1 join concert as t2 on t1.concert_id = t2.concert_id",
          "select distinct t1.concert_name, t2.theme from concert as t1 join concert as t2 on t1.concert_id = t2.concert_id",
          "select distinct t2.concert_name, t2.theme from concert as t1 join concert as t2 on t1.concert_id = t2.concert_id"
        ]
      },
      {
        "question": "For each of those, also show the number of singers.",
        "query": [
          "select t2.concert_name, t2.theme, count (*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.theme",
          "select t2.concert_name, t2.theme, count (*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.theme",
          "select t2.concert_name, t2.theme, count (*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_id",
          "select t2.concert_name, t2.theme, count (*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_name",
          "select t1.concert_name, t1.theme, count (*) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.theme"
        ]
      }
    ],
    [
      {
        "question": "Show the name for all singers.",
        "query": [
          "select name from singer",
          "select name from singer",
          "select distinct name from singer",
          "select name from singer"
        ]
      },
      {
        "question": "For each of them, also show the number of concerts",
        "query": [
          "select t2.name, count (*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.name",
          "select t1.name, count (*) from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.name",
          "select distinct t1.name, count (*) from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.name",
          "select distinct t2.name, count (*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.name",
          "select t2.name, count (*) from singer_in_concert as t1 join singer as t2 on t2.singer_id = t1.singer_id group by t2.name",
          "select name, count (*) from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.name",
          "select t2.name, count (*) from singer_in_concert as t1 join singer as t2 group by t2.singer_id",
          "select t2.name, count (*) from singer_in_concert as t1 join singer as t2 group by t2.singer_id",
          "select name, count (*) from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by name"
        ]
      }
    ],
    [
      {
        "question": "List all singer names.",
        "query": [
          "select name from singer",
          "select name from singer",
          "select distinct name from singer",
          "select name from singer"
        ]
      },
      {
        "question": "How about those performing concerts in year 2014?",
        "query": [
          "select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t2.concert_id = 2014",
          "select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.concert_id = 2014",
          "select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.concert_id = 2014",
          "select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t2.concert_id = 2014",
          "select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t2.concert_id = \"2014\"",
          "select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.concert_id = \"2014\"",
          "select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.concert_id = \"2014\""
        ]
      }
    ],
    [
      {
        "question": "What are the names of all singers?",
        "query": [
          "select name from singer",
          "select name from singer",
          "select distinct name from singer",
          "select name from singer"
        ]
      },
      {
        "question": "Show the names for those having a song having 'Hey' in its name.",
        "query": [
          "select name from singer where song_name like \"%Hey%\"",
          "select name from singer where song_name like \"%Hey%\"",
          "select name from singer where song_name like \"Hey\"",
          "select name from singer where song_name like \"% Hey%\"",
          "select name from singer where song_name like \"%Hey%\"",
          "select name from singer where song_name like \"Hey\"",
          "select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id where t2.song_name like \"Hey\"",
          "select name from singer where song_name like \"Hey%\"",
          "select name from singer where song_name like \"% Hey%\"",
          "select name from singer where song_name like \"%hey%\""
        ]
      },
      {
        "question": "Also show the nation for those singers.",
        "query": [
          "select name, country from singer where song_name like \"%Hey%\"",
          "select name, country from singer where song_name like \"%Hey%\"",
          "select name, country from singer where song_name like \"%Hey%\"",
          "select distinct name, country from singer where song_name like \"%Hey%\"",
          "select distinct t1.name, t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t1.song_name like \"%Hey%\"",
          "select t1.name, t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t1.song_name like \"%Hey%\"",
          "select name, country from singer where song_name like \"% Hey%\"",
          "select name, country from singer where song_name like \"%hey%\""
        ]
      }
    ],
    [
      {
        "question": "Show the name and location for the stadiums.",
        "query": [
          "select name, location from stadium",
          "select name, location from stadium",
          "select name, location from stadium",
          "select distinct name, location from stadium",
          "select distinct location from stadium",
          "select distinct stadium_id, location from stadium",
          "select distinct stadium_id, name from stadium",
          "select distinct stadium_id from stadium"
        ]
      },
      {
        "question": "How about those with some concerts happened in the year 2014?",
        "query": [
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select distinct t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014",
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014",
          "select distinct t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014",
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 group by t2.name"
        ]
      },
      {
        "question": "Among those, what are stadiums also holding some concerts in the year 2015?",
        "query": [
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015",
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015",
          "select distinct t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015",
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015",
          "select distinct t1.stadium_id from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015",
          "select distinct t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select distinct t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015",
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014",
          "select distinct t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015",
          "select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014"
        ]
      }
    ]
  ],
  "singer": [
    [
      {
        "question": "Show the names and birth years of singers",
        "query": [
          "select name, birth_year from singer",
          "select name, birth_year from singer",
          "select name, birth_year from singer",
          "select distinct name, birth_year from singer",
          "select distinct name from singer",
          "select distinct singer_id from song"
        ]
      },
      {
        "question": "Only for the ones born in 1948.",
        "query": [
          "select name from singer where birth_year = 1948",
          "select name from singer where birth_year = 1948",
          "select distinct name from singer where birth_year = 1948",
          "select name from singer where birth_year = 1948",
          "select birth_year from singer where birth_year = 1948",
          "select distinct birth_year from singer where birth_year = 1948",
          "select name from singer where birth_year like \"1948\"",
          "select name from singer where birth_year > 1948",
          "select distinct birth_year from singer where birth_year > 1948",
          "select name from singer where birth_year = \"1948\""
        ]
      },
      {
        "question": "Show the name of singers whose birth year is either 1948 or 1949?",
        "query": [
          "select name from singer where birth_year = 1948 or birth_year = 1949",
          "select name from singer where birth_year = 1948 or birth_year = 1949",
          "select distinct name from singer where birth_year = 1948 or birth_year = 1949",
          "select name from singer where birth_year = 1948 or birth_year = 1949",
          "select name from singer where birth_year = 1948 or birth_year = 1948",
          "select name from singer where birth_year = 1948 or birth_year = 1948",
          "select name from singer where birth_year = 1948 or birth_year = 1948"
        ]
      }
    ],
    [
      {
        "question": "Show the name and net worth of the singers.",
        "query": [
          "select name, net_worth_millions from singer",
          "select name, net_worth_millions from singer",
          "select name, net_worth_millions from singer",
          "select distinct name, net_worth_millions from singer",
          "select distinct singer_id, name from singer",
          "select distinct name from singer",
          "select name, net_worth_millIONS from singer"
        ]
      },
      {
        "question": "Order by richest first.",
        "query": [
          "select name from singer order by net_worth_millions desc",
          "select name from singer order by net_worth_millions desc",
          "select distinct name from singer order by net_worth_millions desc",
          "select name from singer order by net_worth_millions asc",
          "select name from singer order by net_worth_millions",
          "select name from singer order by net_worth_millions asc",
          "select distinct name from singer order by net_worth_millions",
          "select name from singer order by net_worth_millions",
          "select distinct name from singer order by net_worth_millions asc",
          "select name from singer order by net_worth_millions limit 1"
        ]
      },
      {
        "question": "What is the name of the singer with the largest net worth?",
        "query": [
          "select name from singer order by net_worth_millions desc limit 1",
          "select name from singer order by net_worth_millions desc limit 1",
          "select distinct name from singer order by net_worth_millions desc limit 1",
          "select name from singer order by net_worth_millions desc limit 1",
          "select name from singer order by net_worth_millions asc limit 1",
          "select name from singer order by net_worth_millions desc 1",
          "select name from singer order by net_worth_millions asc limit 1",
          "select name from singer order by Net_worth_millions desc limit 1",
          "select name from singer order by net_worth_millions limit 1",
          "select name from singer order by net_worth_millions desc 1"
        ]
      }
    ],
    [
      {
        "question": "Show the names and citizenships of singers.",
        "query": [
          "select name, citizenship from singer",
          "select name, citizenship from singer",
          "select name, citizenship from singer",
          "select distinct name, citizenship from singer",
          "select distinct name from singer",
          "select distinct singer_id, name from singer"
        ]
      },
      {
        "question": "Show citizenship counts.",
        "query": [
          "select citizenship from singer group by citizenship",
          "select count (*) from singer",
          "select citizenship from singer group by citizenship",
          "select distinct citizenship from singer",
          "select count (*) from singer",
          "select count (citizenship) from singer",
          "select citizenship from singer",
          "select citizenship from singer group by citizenship",
          "select count (*) from singer",
          "select name, citizenship from singer group by citizenship"
        ]
      },
      {
        "question": "Sort that by most common first.",
        "query": [
          "select citizenship from singer group by citizenship order by count (*) desc limit 1",
          "select citizenship from singer group by citizenship order by count (*) desc",
          "select name, citizenship from singer group by citizenship order by count (*) desc",
          "select name from singer group by citizenship order by count (*) desc limit 1",
          "select name from singer group by citizenship order by count (*) desc",
          "select citizenship from singer group by citizenship order by count (*) desc",
          "select citizenship from singer group by citizenship order by count (*) asc limit 1",
          "select name from singer group by citizenship order by count (*) desc",
          "select citizenship from singer group by citizenship order by count (*) asc",
          "select distinct citizenship from singer group by citizenship order by count (*) desc"
        ]
      },
      {
        "question": "Limit it to one.",
        "query": [
          "select citizenship from singer group by citizenship order by count (*) desc limit 1",
          "select citizenship from singer group by citizenship order by count (*) asc limit 1",
          "select citizenship from singer group by citizenship order by count (*) desc limit 1",
          "select name from singer group by citizenship order by count (*) desc limit 1",
          "select name from singer group by citizenship order by count (*) desc limit 1",
          "select distinct citizenship from singer group by citizenship order by count (*) desc limit 1",
          "select citizenship from singer group by citizenship order by count (*) limit 1",
          "select name from singer group by name order by count (*) desc limit 1",
          "select name from singer group by name order by count (*) desc limit 1",
          "select citizenship from singer group by citizenship order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Join singer names with their song titles.",
        "query": [
          "select t2.title, t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id",
          "select t2.title, t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id",
          "select t1.name, t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id",
          "select t1.name, t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id",
          "select t2.title, t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id",
          "select distinct t1.name, t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id",
          "select t2.name, t1.title from song as t1 join singer as t2 on t1.singer_id = t2.singer_id",
          "select t1.name, t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id",
          "select distinct t2.title, t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id",
          "select t1.name, t3.title from singer as t1 join song as t3 on t1.singer_id = t3.singer_id"
        ]
      },
      {
        "question": "Limit the entries to where song sales exceed 300000.",
        "query": [
          "select t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select t2.title, t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where sales > 300000",
          "select distinct t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select distinct t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where sales > 300000",
          "select * from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select t1.name, t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where sales > 300000",
          "select distinct t1.name, t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where sales > 300000"
        ]
      },
      {
        "question": "Which are the distinct names in that list?",
        "query": [
          "select distinct t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select distinct t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select distinct t2.title from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select distinct name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000",
          "select distinct t1.name from singer as t1 join song as t2 where t2.sales > 300000",
          "select distinct t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales >300000"
        ]
      }
    ],
    [
      {
        "question": "Show the names and song counts of singers.",
        "query": [
          "select name, count (*) from singer group by name",
          "select name, count (*) from singer group by name",
          "select name, count (*) from singer",
          "select name, count (*) from singer",
          "select name, count (*) from singer group by name",
          "select name, count (*) from singer group by name",
          "select distinct singer_id, name from singer",
          "select name, count (*) from singer",
          "select distinct singer.name, count (*) from singer",
          "select distinct t1.name, count (*) from singer as t1"
        ]
      },
      {
        "question": "Show the names of singers that have more than one song.",
        "query": [
          "select name from singer group by name having count (*) > 1",
          "select name from singer group by name having count (*) > 1",
          "select t1.name from singer as t1 join song as t2 group by t1.singer_id having count (*) > 1",
          "select name from singer group by name having count (*) > 1",
          "select t1.name from singer as t1 join song as t2 group by t1.name having count (*) > 1",
          "select t1.name from singer as t1 join song as t2 group by t1.singer_id having count (*) > 1",
          "select distinct singer_id from song",
          "select t1.name from singer as t1 group by t1.name having count (*) > 1",
          "select distinct t1.name from singer as t1 join song as t2 group by t1.singer_id having count (*) > 1",
          "select t2.name from song as t1 join singer as t2 group by t1.singer_id having count (*) > 1"
        ]
      }
    ],
    [
      {
        "question": "Show the songs and sale amounts.",
        "query": [
          "select title, sales from song",
          "select title, sales from song",
          "select song_id, sales from song",
          "select title, sales from song",
          "select song_id, sales from song",
          "select distinct song_id, sales from song",
          "select * from song",
          "select distinct title, sales from song",
          "select * from song"
        ]
      },
      {
        "question": "Show the names of singers and the total sales of their songs.",
        "query": [
          "select t2.name, sum (t1.sales) from song as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.name",
          "select t1.name, sum (t2.sales) from singer as t1 join song as t2 on t1.singer_id = t2.singer_id group by t1.name",
          "select distinct t1.name, sum (t2.sales) from singer as t1 join song as t2 on t1.singer_id = t2.singer_id group by t1.name",
          "select distinct t2.name, sum (t1.sales) from song as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.name",
          "select t2.name, sum (sales) from song as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t1.singer_id",
          "select t2.name, sum (sales) from song as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.name",
          "select t1.name, sum (t2.sales) from singer as t1 join song as t2 group by t1.singer_id",
          "select t2.name, sum (sales) from song as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t1.singer_id",
          "select t2.name, sum (sales) from song as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.name",
          "select t1.name, sum (t2.sales) from singer as t1 join song as t2 group by t1.singer_id"
        ]
      }
    ],
    [
      {
        "question": "Which singer ids have at least one song?",
        "query": [
          "select singer_id from song",
          "select distinct singer_id from song",
          "select singer_id from song",
          "select distinct singer_id from song",
          "select singer_id from song",
          "select distinct singer_id from song"
        ]
      },
      {
        "question": "Which singer names do not?",
        "query": [
          "select name from singer except select singer_id from song",
          "select distinct singer_id from song",
          "select name from singer except select singer_id from song",
          "select distinct name from singer except select singer_id from song",
          "select name from singer where name not in (select singer_id from song)",
          "select distinct name from singer",
          "select distinct name from singer where name not in (select singer_id from song)",
          "select distinct name from singer except select name from singer"
        ]
      }
    ]
  ],
  "employee_hire_evaluation": [
    [
      {
        "question": "find all employees who are under age 30.",
        "query": [
          "select * from employee where age < 30",
          "select * from employee where age < 30",
          "select * from employee where age < 30",
          "select distinct * from employee where age < 30",
          "select distinct name from employee where age < 30",
          "select name from employee where age < 30",
          "select * from employee where age <30",
          "select * from employee where age <= 30",
          "select * from employee where age < 40",
          "select * from employee where age <30"
        ]
      },
      {
        "question": "Which cities did they come from?",
        "query": [
          "select city from employee where age < 30",
          "select t1.city from employee as t1 join hiring as t2 on t1.employee_id = t2.employee_id where t1.age < 30",
          "select distinct city from employee where age < 30",
          "select city from employee where age < 30",
          "select t2.city from employee as t1 join employee as t2 on t1.employee_id = t2.employee_id where t1.age < 30",
          "select distinct t1.city from employee as t1 join hiring as t2 on t1.employee_id = t2.employee_id where t1.age < 30",
          "select city from employee where age < 30",
          "select name, city from employee where age < 30",
          "select t1.city from employee as t1 join employee as t2 on t1.employee_id = t2.employee_id where t1.age < 30",
          "select distinct city from employee where age < 30"
        ]
      },
      {
        "question": "show the cities from which more than one employee originated.",
        "query": [
          "select city from employee group by city having count (*) > 1",
          "select city from employee group by city having count (*) > 1",
          "select city from employee where age < 30 group by city having count (*) > 1",
          "select distinct city from employee where age < 30",
          "select distinct city from employee where age < 30",
          "select city from employee where age < 30 group by city having count (*) > 1",
          "select city from employee group by city having count (employee_id) > 1",
          "select city from employee group by city having count (*) >= 2",
          "select distinct city from employee where age < 30",
          "select city from employee where age < 30 group by city having count (*) >= 2"
        ]
      }
    ],
    [
      {
        "question": "show all shops.",
        "query": [
          "select * from shop",
          "select * from shop",
          "select * from shop",
          "select distinct * from shop",
          "select distinct shop_id from shop",
          "select distinct name from shop",
          "select distinct shop_id from hiring"
        ]
      },
      {
        "question": "what is the total number of products they are selling?",
        "query": [
          "select sum (number_products) from shop",
          "select sum (number_products) from shop",
          "select distinct sum (number_products) from shop",
          "select sum (number_products) from shop",
          "select sum (number_products) from shop",
          "select sum (number_products) from shop"
        ]
      },
      {
        "question": "find the name of the shop with the greatest number of products.",
        "query": [
          "select name from shop order by number_products desc limit 1",
          "select name from shop order by number_products desc limit 1",
          "select distinct shop_id from shop order by number_products desc limit 1",
          "select distinct name from shop order by number_products desc limit 1",
          "select name from shop order by number_products asc limit 1",
          "select distinct (name) from shop order by number_products desc limit 1",
          "select distinct count (*) from shop order by number_products desc limit 1",
          "select name from shop order by number_products desc 1",
          "select name from shop order by number_products asc limit 1",
          "select distinct shop_id from shop order by number_products desc 1"
        ]
      },
      {
        "question": "what are its manager name and district?",
        "query": [
          "select manager_name, district from shop order by number_products desc limit 1",
          "select manager_name, district from shop order by number_products desc limit 1",
          "select manager_name, district from shop order by number_products desc limit 1",
          "select name, district from shop order by number_products desc limit 1",
          "select name, district from shop order by number_products desc limit 1",
          "select distinct name from shop order by number_products desc limit 1",
          "select distinct name, district from shop order by number_products desc limit 1",
          "select distinct manager_name, district from shop order by number_products desc limit 1",
          "select distinct t1.name, t1.district from shop as t1 group by t1.name order by count (*) desc limit 1",
          "select manager_name, district from shop order by number_products asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "find the average number of products of all stores.",
        "query": [
          "select avg (number_products) from shop",
          "select avg (number_products) from shop",
          "select distinct number_products from shop",
          "select avg (number_products) from shop",
          "select distinct sum (number_products) from shop",
          "select distinct avg (number_products) from shop",
          "select distinct count (number_products) from shop",
          "select distinct count (*) from shop",
          "select avg (number_products) from shop",
          "select distinct count (distinct number_products) from shop"
        ]
      },
      {
        "question": "how about the minimum and maximum?",
        "query": [
          "select min (number_products), max (number_products) from shop",
          "select min (number_products), max (number_products) from shop",
          "select max (number_products), min (number_products) from shop",
          "select max (number_products), min (number_products) from shop",
          "select distinct min (number_products), max (number_products) from shop",
          "select min (number_products), max (number_products) from shop",
          "select distinct max (number_products), min (number_products) from shop",
          "select max (number_products), min (number_products) from shop",
          "select max (number_products), avg (number_products) from shop",
          "select max (number_products), max (number_products) from shop"
        ]
      }
    ],
    [
      {
        "question": "show the name and number of product for all shops.",
        "query": [
          "select name, number_products from shop",
          "select name, number_products from shop",
          "select distinct name, number_products from shop",
          "select name, number_products from shop",
          "select distinct shop_id, number_products from shop",
          "select distinct number_products from shop",
          "select distinct count (*) from shop",
          "select name,number_products from shop",
          "select name,number_products from shop"
        ]
      },
      {
        "question": "what is the average number of products?",
        "query": [
          "select avg (number_products) from shop",
          "select avg (number_products) from shop",
          "select avg (number_products) from shop",
          "select distinct avg (number_products) from shop",
          "select distinct sum (number_products) from shop",
          "select distinct count (*) from shop",
          "select avg (number_products) from shop",
          "select avg (number_products) from shop",
          "select distinct number_products from shop",
          "select sum (number_products) from shop"
        ]
      },
      {
        "question": "Find the names of stores whose number products is less than the average.",
        "query": [
          "select name from shop where number_products < (select avg (number_products) from shop)",
          "select name from shop where number_products < (select avg (number_products) from shop)",
          "select distinct name from shop where number_products < (select avg (number_products) from shop)",
          "select name from shop where number_products < (select avg (number_products) from shop)",
          "select name from shop where number_products < (select avg (number_products) from shop)"
        ]
      },
      {
        "question": "how about more than?",
        "query": [
          "select name from shop where number_products > (select avg (number_products) from shop)",
          "select name from shop where number_products > (select avg (number_products) from shop)",
          "select distinct name from shop where number_products > (select avg (number_products) from shop)",
          "select name from shop where number_products > (select avg (number_products) from shop)",
          "select name from shop where number_products > (select avg (number_products) from shop)",
          "select name from shop where number_products < (select avg (number_products) from shop)",
          "select name from shop where number_products < (select avg (number_products) from shop)",
          "select name from shop where number_products > (select avg (number_products) from shop))"
        ]
      }
    ],
    [
      {
        "question": "how many evaluations are there?",
        "query": [
          "select count (*) from evaluation",
          "select count (*) from evaluation",
          "select count (*) from evaluation",
          "select distinct count (*) from evaluation",
          "select distinct employee_id from evaluation",
          "select distinct evaluation.employee_id from evaluation"
        ]
      },
      {
        "question": "what years were they given?",
        "query": [
          "select year_awarded from evaluation",
          "select year_awarded from evaluation",
          "select year_awarded from evaluation",
          "select distinct year_awarded from evaluation"
        ]
      },
      {
        "question": "find the name of the employee who received the most evaluation awards.",
        "query": [
          "select t1.name from employee as t1 join evaluation as t2 group by t1.employee_id order by count (*) desc limit 1",
          "select distinct employee_id from evaluation order by year_awarded desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 order by count (*) desc limit 1",
          "select employee_id from evaluation group by employee_id order by count (*) desc limit 1",
          "select distinct employee_id from evaluation group by employee_id order by count (*) desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 group by t1.employee_id order by count (*) desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id order by count (*) desc limit 1",
          "select employee_id from evaluation order by year_awarded desc limit 1",
          "select distinct (employee_id) from evaluation order by year_awarded desc limit 1",
          "select distinct count (*) from evaluation group by employee_id order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "find the name of the employees who received past evaluation awards.",
        "query": [
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id",
          "select t2.name from evaluation as t1 join employee as t2 on t1.employee_id = t2.employee_id",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id",
          "select name from employee where employee_id in (select employee_id from evaluation)",
          "select distinct t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id",
          "select t2.name from evaluation as t1 join employee as t2 on t1.employee_id = t2.employee_id",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id",
          "select distinct t2.name from evaluation as t1 join employee as t2 on t1.employee_id = t2.employee_id",
          "select name from employee where employee_id in (select employee_id from evaluation)",
          "select employee_id from evaluation"
        ]
      },
      {
        "question": "who won the most times?",
        "query": [
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count (*) desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t2.employee_id order by count (*) desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.name order by count (*) desc limit 1",
          "select distinct t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.name order by count (*) desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.name order by count (*) desc limit 1",
          "select distinct t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count (*) desc limit 1",
          "select distinct count (*) from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count (*) desc limit 1",
          "select distinct count (*) from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.name order by count (*) desc limit 1",
          "select distinct count (*) from evaluation as t1 join employee as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count (*) desc limit 1",
          "select distinct t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t2.employee_id order by count (*) desc limit 1"
        ]
      },
      {
        "question": "ok, which one received the award with the highest bonus?",
        "query": [
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count (*) desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by bonus desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by t2.bonus desc limit 1",
          "select distinct t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count (*) desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by bonus desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by sum (bonus) desc limit 1",
          "select distinct t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by bonus desc limit 1",
          "select distinct t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by t2.bonus desc limit 1",
          "select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by max (bonus) desc limit 1",
          "select distinct t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by sum (bonus) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "find the number of different employees who were awarded in the past evaluations.",
        "query": [
          "select count (distinct employee_id) from evaluation",
          "select count (distinct employee_id) from evaluation",
          "select count (*) from evaluation",
          "select distinct employee_id from evaluation",
          "select count (distinct employee_id) from evaluation",
          "select count (*) from evaluation",
          "select distinct count (employee_id) from evaluation",
          "select distinct count (*) from evaluation",
          "select count (employee_id) from evaluation",
          "select count (*) from evaluation"
        ]
      },
      {
        "question": "what are their names?",
        "query": [
          "select name from employee where employee_id in (select employee_id from evaluation)",
          "select distinct employee_id from evaluation",
          "select name from employee where employee_id in (select employee_id from evaluation)",
          "select distinct name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id",
          "select distinct employee_id from evaluation",
          "select employee_id from evaluation",
          "select name from employee where employee_id in (select distinct employee_id from evaluation)",
          "select t1.name from employee as t1 join evaluation as t2",
          "select t1.name from employee as t1 join evaluation as t2 group by t1.employee_id",
          "select distinct t1.name from employee as t1 join evaluation as t2"
        ]
      },
      {
        "question": "show the names of the employees who never won.",
        "query": [
          "select name from employee where employee_id not in (select employee_id from evaluation)",
          "select distinct name from employee where employee_id not in (select employee_id from evaluation)",
          "select name from employee where employee_id not in (select employee_id from evaluation)",
          "select distinct employee_id from employee where employee_id not in (select employee_id from evaluation)",
          "select distinct name from employee"
        ]
      }
    ],
    [
      {
        "question": "how many shops are hiring?",
        "query": [
          "select count (*) from hiring",
          "select count (*) from hiring",
          "select count (*) from hiring",
          "select distinct count (*) from hiring",
          "select distinct shop_id from hiring",
          "select distinct count (shop_id) from hiring",
          "select distinct count (employee_id) from hiring",
          "select count (shop_id) from hiring"
        ]
      },
      {
        "question": "what are the shops' names?'",
        "query": [
          "select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id",
          "select t1.name from shop as t1 join hiring as t2 on t1.shop_id = t2.shop_id",
          "select distinct t1.name from shop as t1 join hiring as t2 on t1.shop_id = t2.shop_id",
          "select distinct t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id",
          "select name from shop where shop_id in (select shop_id from hiring)",
          "select name from shop as t1 join hiring as t2 on t1.shop_id = t2.shop_id",
          "select shop_id from hiring",
          "select name from shop",
          "select name from shop where shop_id in (select shop_id from hiring)",
          "select t2.name from hiring as t1 join shop as t2 on t2.shop_id = t1.shop_id"
        ]
      },
      {
        "question": "which one is hiring the largest number of employees?",
        "query": [
          "select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count (*) desc limit 1",
          "select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.name order by count (*) desc limit 1",
          "select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.name order by count (*) desc limit 1",
          "select distinct t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.name order by count (*) desc limit 1",
          "select distinct t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count (*) desc limit 1",
          "select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id order by count (*) desc limit 1",
          "select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id order by count (*) desc limit 1",
          "select distinct count (*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count (*) desc limit 1",
          "select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.employee_id order by count (*) desc limit 1",
          "select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "show all hiring info.",
        "query": [
          "select * from hiring",
          "select * from hiring",
          "select distinct * from hiring"
        ]
      },
      {
        "question": "Find the names of any shops not hiring.",
        "query": [
          "select name from shop where shop_id not in (select shop_id from hiring)",
          "select name from shop where shop_id not in (select shop_id from hiring)",
          "select name from shop where shop_id not in (select shop_id from hiring)",
          "select name from employee where employee_id not in (select employee_id from hiring)",
          "select distinct name from shop where shop_id not in (select shop_id from hiring)",
          "select distinct shop_id from hiring",
          "select name from employee where employee_id not in (select employee_id from hiring)",
          "select distinct name from shop where shop_id not in (select shop_id from hiring)",
          "select name from shop except select t2.name from hiring as t1 join shop as t2",
          "select name from shop except select t2.name from hiring as t1 join shop as t2"
        ]
      }
    ],
    [
      {
        "question": "how many employees are being hired in all shops?",
        "query": [
          "select count (*) from hiring",
          "select count (*) from hiring",
          "select distinct count (*) from hiring",
          "select count (*) from hiring",
          "select distinct count (employee_id) from hiring",
          "select distinct employee_id from hiring",
          "select count (employee_id) from hiring"
        ]
      },
      {
        "question": "show the number for each shop. show the shop name as well.",
        "query": [
          "select count (*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.name",
          "select count (*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.name",
          "select count (*) from hiring group by shop_id",
          "select count (*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id",
          "select count (*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.name",
          "select count (*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id",
          "select count (*) from hiring group by shop_id",
          "select count (*), t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id",
          "select count (*), t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id",
          "select count (*), shop_id from hiring group by shop_id"
        ]
      }
    ]
  ],
  "museum_visit": [
    [
      {
        "question": "show all visitors.",
        "query": [
          "select * from visitor",
          "select * from visitor",
          "select * from visitor",
          "select * from visitor",
          "select distinct visitor_id from visit",
          "select distinct visitor.name from visitor",
          "select distinct visitor.id from visitor",
          "select distinct * from visitor",
          "select distinct name from visitor"
        ]
      },
      {
        "question": "order them by their membership level from high to low.",
        "query": [
          "select * from visitor order by level_of_membership desc",
          "select * from visitor order by level_of_membership",
          "select * from visitor order by level_of_membership desc",
          "select * from visitor order by level_of_membership asc",
          "select * from visitor order by level_of_membership",
          "select * from visitor order by level_of_membership asc",
          "select order by level_of_membership from visitor",
          "select * from visitor order by level_of_membership from high",
          "select * from visitor order by level_of_membership from visitor",
          "select distinct order by level_of_membership from visitor"
        ]
      },
      {
        "question": "just show their names.",
        "query": [
          "select name from visitor order by level_of_membership desc",
          "select name from visitor order by level_of_membership desc",
          "select distinct name from visitor order by level_of_membership desc",
          "select name from visitor order by level_of_membership desc limit 1"
        ]
      },
      {
        "question": "do not list those whose membership level is lower than or equal to 4.",
        "query": [
          "select name from visitor where level_of_membership <= 4",
          "select name from visitor where level_of_membership >= 4",
          "select name from visitor where level_of_membership < 4",
          "select name from visitor where level_of_membership <= 4",
          "select distinct name from visitor where level_of_membership <= 4",
          "select name from visitor where level_of_membership <= 4",
          "select name from visitor where level_of_membership >= 4",
          "select distinct name from visitor where level_of_membership >= 4",
          "select name from visitor where level_of_membership < 4",
          "select name from visitor where level_of_membership <= 4"
        ]
      }
    ],
    [
      {
        "question": "find the number of visitors with a membership level higher than 4.",
        "query": [
          "select count (*) from visitor where level_of_membership > 4",
          "select count (*) from visitor where level_of_membership > 4",
          "select distinct count (*) from visitor where level_of_membership > 4",
          "select count (*) from visitor where level_of_membership > 4"
        ]
      },
      {
        "question": "what are their names and membership levels?",
        "query": [
          "select name, level_of_membership from visitor where level_of_membership > 4",
          "select name, level_of_membership from visitor where level_of_membership > 4",
          "select name, level_of_membership from visitor where level_of_membership > 4",
          "select distinct name, level_of_membership from visitor where level_of_membership > 4",
          "select distinct t1.name, t1.level_of_membership from visitor as t1 where t1.level_of_membership > 4",
          "select t1.name, t1.level_of_membership from visitor as t1 where t1.level_of_membership > 4"
        ]
      },
      {
        "question": "sort by their age from old to young.",
        "query": [
          "select name, level_of_membership from visitor where level_of_membership > 4 order by age desc",
          "select name from visitor where level_of_membership > 4 order by age desc",
          "select name, level_of_membership from visitor where level_of_membership > 4 order by age",
          "select name from visitor where level_of_membership > 4 order by age desc",
          "select name, level_of_membership from visitor where level_of_membership > 4 order by age",
          "select distinct name, level_of_membership from visitor where level_of_membership > 4 order by age desc",
          "select distinct name from visitor where level_of_membership > 4 order by age desc",
          "select name, level_of_membership from visitor where level_of_membership > 4 order by age asc",
          "select distinct name, level_of_membership from visitor where level_of_membership > 4 order by age",
          "select name from visitor where level_of_membership > 4 order by age"
        ]
      }
    ],
    [
      {
        "question": "how many museums are in the table?",
        "query": [
          "select count (*) from museum",
          "select count (*) from museum",
          "select distinct museum_id from museum",
          "select count (*) from museum",
          "select distinct museum_id from visit",
          "select distinct count (*) from museum"
        ]
      },
      {
        "question": "what is the average number of staff working in these museums?",
        "query": [
          "select avg (num_of_staff) from museum",
          "select avg (num_of_staff) from museum",
          "select distinct avg (num_of_staff) from museum",
          "select avg (num_of_staff) from museum",
          "select avg (num_of_staff) from museum",
          "select avg (num_of_staff) from museum",
          "select avg (num_of_staff) from museum",
          "select distinct avg (num_of_staff) from museum"
        ]
      },
      {
        "question": "Find the name of the museum that has the most staff members.",
        "query": [
          "select name from museum order by num_of_staff desc limit 1",
          "select name from museum order by num_of_staff desc limit 1",
          "select distinct name from museum order by num_of_staff desc limit 1",
          "select name from museum order by num_of_staff asc limit 1",
          "select distinct (name) from museum order by num_of_staff desc limit 1",
          "select distinct count (*) from museum order by num_of_staff desc limit 1",
          "select name from museum order by num_of_staff asc limit 1",
          "select distinct museum_id from museum order by num_of_staff desc limit 1",
          "select name from museum order by num_of_staff desc desc limit 1",
          "select distinct count (*) from museum order by num_of_staff asc limit 1"
        ]
      },
      {
        "question": "what is its id?",
        "query": [
          "select museum_id from museum order by num_of_staff desc limit 1",
          "select museum_id from museum order by num_of_staff desc limit 1",
          "select distinct museum_id from museum order by num_of_staff desc limit 1",
          "select distinct name from museum order by num_of_staff desc limit 1",
          "select museum_id from museum order by num_of_staff asc limit 1",
          "select museum_id from museum order by num_of_staff asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "find the names of museums opened before 2010.",
        "query": [
          "select name from museum where open_year < 2010",
          "select name from museum where open_year < 2010",
          "select distinct name from museum where open_year < 2010",
          "select name from museum where open_year < 10",
          "select name from museum where open_year < 10"
        ]
      },
      {
        "question": "how about after?",
        "query": [
          "select name from museum where open_year > 2010",
          "select name from museum where open_year > 2010",
          "select name from museum where open_year > 2010",
          "select distinct name from museum where open_year > 2010",
          "select name from museum where open_year > 2009"
        ]
      },
      {
        "question": "find the minimum number of staff of those museums.",
        "query": [
          "select min (num_of_staff) from museum where open_year > 2010",
          "select min (num_of_staff) from museum where open_year > 2010",
          "select distinct min (num_of_staff) from museum where open_year > 2010",
          "select max (num_of_staff) from museum where open_year > 2010",
          "select min (num_of_staff) from museum where open_year > 2010",
          "select distinct max (num_of_staff) from museum where open_year > 2010",
          "select max (num_of_staff) from museum where open_year > 2010",
          "select min (num_of_staff) from museum where open_year > 2010",
          "select min (num_of_staff) from museum where open_year > 2010",
          "select min (num_of_staff) from museum where open_year > 2010 group by name"
        ]
      },
      {
        "question": "find the names of museums which have more staff than that.",
        "query": [
          "select name from museum where num_of_staff > (select min (num_of_staff) from museum where open_year > 2010)",
          "select name from museum where num_of_staff > (select min (num_of_staff) from museum where open_year > 2010)",
          "select distinct name from museum where num_of_staff > (select min (num_of_staff) from museum where open_year > 2010)",
          "select name from museum where num_of_staff > (select min (num_of_staff) from museum where open_year > 2010)",
          "select name from museum where num_of_staff > (select max (num_of_staff) from museum where open_year > 2010)",
          "select name from museum where num_of_staff > (select min (num_of_staff) from museum where open_year > 2010)",
          "select name from museum where num_of_staff > (select min (num_of_staff) from museum where open_year > 2011)",
          "select name from museum where num_of_staff > (select min (num_of_staff) from museum where open_year > 2010) group by name",
          "select name from museum where num_of_staff > (select min (num_of_staff) from museum where open_year > 2010 group by name)"
        ]
      }
    ],
    [
      {
        "question": "find the names of visitors who visited and who have some museum visit records.",
        "query": [
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id",
          "select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id",
          "select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id",
          "select distinct t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id",
          "select distinct t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id"
        ]
      },
      {
        "question": "which of them visited some museums more than once?",
        "query": [
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t1.visitor_id having count (*) > 1",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t1.visitor_id having count (*) > 1",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t2.name having count (*) > 1",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t1.visitor_id having count (*) >= 2",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t2.name having count (*) > 1",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t1.visitor_id having count (*) > 2",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t2.name having count (*) >= 2",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t1.visitor_id having count (*) > 2"
        ]
      },
      {
        "question": "also show their ids and ages.",
        "query": [
          "select t2.name, t2.id, t2.age from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t1.visitor_id having count (*) > 1",
          "select t2.name, t2.id, t2.age from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t1.visitor_id having count (*) > 1",
          "select t2.id, t2.name, t2.age from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t1.visitor_id having count (*) > 1"
        ]
      }
    ],
    [
      {
        "question": "what is the total spent on all visits?",
        "query": [
          "select sum (total_spent) from visit",
          "select sum (total_spent) from visit",
          "select distinct sum (total_spent) from visit",
          "select sum (total_spent) from visit"
        ]
      },
      {
        "question": "find the name of the visitor who has spent the most money for his or her visits.",
        "query": [
          "select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select t1.name from visitor as t1 join visit as t2 group by t1.id order by sum (total_spent) desc limit 1",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t2.name order by sum (total_spent) desc limit 1",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id group by t2.id order by sum (total_spent) desc limit 1",
          "select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id order by total_spent desc limit 1",
          "select distinct t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select t1.name from visitor as t1 join visit as t2 group by t1.id order by sum (total_spent) desc limit 1",
          "select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.name order by sum (total_spent) desc limit 1",
          "select t1.name from visitor as t1 join visit as t2 where t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select distinct visitor_id from visit order by total_spent desc limit 1"
        ]
      },
      {
        "question": "what are his id and membership level?",
        "query": [
          "select t1.id, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select t1.id, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select distinct t1.id, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select t1.id, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select distinct t1.name, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select t1.id, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1",
          "select t1.id, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum (total_spent) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "show the id and name of all museums.",
        "query": [
          "select museum_id, name from museum",
          "select museum_id, name from museum",
          "select distinct museum_id, name from museum",
          "select museum_id, name from museum"
        ]
      },
      {
        "question": "show the number of tickets sold for each of them.",
        "query": [
          "select museum_id, num_of_ticket from visit",
          "select t2.museum_id, t1.name, count (*) from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t2.museum_id",
          "select t2.museum_id, count (*) from visit as t1 join museum as t2 on t1.museum_id = t2.museum_id group by t2.museum_id",
          "select museum_id, num_of_ticket from visit",
          "select t1.museum_id, t1.name, count (*) from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t1.museum_id",
          "select t1.museum_id, t1.name, t2.num_of_ticket from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id",
          "select t2.museum_id, t1.num_of_ticket from visit as t1 join museum as t2 on t1.museum_id = t2.museum_id group by t2.museum_id",
          "select t2.museum_id, t1.name, count (*) from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t1.museum_id",
          "select t2.museum_id, t1.num_of_ticket from visit as t1 join museum as t2 on t1.museum_id = t2.museum_id",
          "select num_of_ticket from visit"
        ]
      },
      {
        "question": "which one was visited the most times?",
        "query": [
          "select museum_id from visit group by museum_id order by count (*) desc limit 1",
          "select museum_id from visit group by museum_id order by count (*) desc limit 1",
          "select t2.museum_id, t1.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t2.museum_id order by count (*) desc limit 1",
          "select t2.museum_id from visit as t1 join museum as t2 on t1.museum_id = t2.museum_id group by t2.museum_id order by count (*) desc limit 1",
          "select t2.museum_id from visit as t1 join museum as t2 on t1.museum_id = t2.museum_id group by t1.museum_id order by count (*) desc limit 1",
          "select t1.museum_id from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t1.museum_id order by count (*) desc limit 1",
          "select t2.museum_id, count (*) from visit as t1 join museum as t2 on t1.museum_id = t2.museum_id group by t2.museum_id order by count (*) desc limit 1",
          "select museum_id from visit order by num_of_ticket desc limit 1",
          "select t1.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t1.museum_id order by count (*) desc limit 1",
          "select t1.museum_id, t1.num_of_ticket from visit as t1 group by t1.museum_id order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "how many museums are there?",
        "query": [
          "select count (*) from museum",
          "select count (*) from museum",
          "select distinct museum_id from museum",
          "select count (*) from museum"
        ]
      },
      {
        "question": "how many of them have not had any visitors yet?",
        "query": [
          "select count (*) from museum where museum_id not in (select museum_id from visit)",
          "select count (*) from museum where museum_id not in (select museum_id from visit)",
          "select distinct count (*) from museum where museum_id not in (select museum_id from visit)",
          "select count (*) from museum where museum_id not in (select museum_id from visit)"
        ]
      },
      {
        "question": "what are their names?",
        "query": [
          "select name from museum where museum_id not in (select museum_id from visit)",
          "select name from museum where museum_id not in (select museum_id from visit)",
          "select distinct name from museum where museum_id not in (select museum_id from visit)",
          "select distinct museum.name from museum where museum_id not in (select museum_id from visit)",
          "select name from museum where museum_id not in (select museum_id from Visit)"
        ]
      }
    ],
    [
      {
        "question": "how many tickets were sold from all of the museums?",
        "query": [
          "select sum (num_of_ticket) from visit",
          "select sum (num_of_ticket) from visit",
          "select sum (num_of_ticket) from visit",
          "select distinct num_of_ticket from visit",
          "select distinct sum (num_of_ticket) from visit",
          "select count (*) from museum"
        ]
      },
      {
        "question": "find the id of the visitor who bought the most tickets at once.",
        "query": [
          "select visitor_id from visit order by num_of_ticket desc limit 1",
          "select visitor_id from visit order by num_of_ticket desc limit 1",
          "select visitor_id from visit group by visitor_id order by count (*) desc limit 1",
          "select visitor_id from visit group by visitor_id order by count (*) desc limit 1",
          "select distinct visitor_id from visit group by visitor_id order by count (*) desc limit 1",
          "select distinct visitor_id from visit order by num_of_ticket desc limit 1",
          "select visitor_id from visit group by visitor_id order by count (*) asc limit 1",
          "select visitor_id from visit group by visitor_id order by count (*) asc limit 1"
        ]
      },
      {
        "question": "Find the name and age of this visitor.",
        "query": [
          "select t2.name, t2.age from visit as t1 join visitor as t2 on t1.visitor_id = t2.id order by t1.num_of_ticket desc limit 1",
          "select t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id order by t2.num_of_ticket desc limit 1",
          "select t2.name, t2.age from visit as t1 join visitor as t2 on t1.visitor_id = t2.id order by num_of_ticket desc limit 1",
          "select t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id order by num_of_ticket desc limit 1",
          "select t2.name, t2.age from visit as t1 join visitor as t2 on t1.visitor_id = t2.id order by num_of_ticket desc limit 1",
          "select t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id order by count (*) desc limit 1",
          "select distinct t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id order by t2.num_of_ticket desc limit 1",
          "select t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id order by t2.num_of_ticket asc limit 1",
          "select t2.name, t2.age from visit as t1 join visitor as t2 on t1.visitor_id = t2.id order by t1.num_of_ticket asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "find the total cost of all visits.",
        "query": [
          "select sum (total_spent) from visit",
          "select sum (total_spent) from visit",
          "select distinct sum (total_spent) from visit",
          "select sum (total_spent) from visit",
          "select sum (total_spent) from visit"
        ]
      },
      {
        "question": "what was the amount of the largest one time purchase of tickets out of all visits?",
        "query": [
          "select max (num_of_ticket) from visit",
          "select max (num_of_ticket) from visit",
          "select sum (total_spent) from visit order by num_of_ticket desc limit 1",
          "select max (total_spent) from visit",
          "select max (total_spent) from visit",
          "select min (num_of_ticket) from visit",
          "select distinct max (num_of_ticket) from visit",
          "select num_of_ticket from visit order by num_of_ticket desc limit 1",
          "select min (num_of_ticket) from visit",
          "select total_spent from visit order by num_of_ticket desc limit 1"
        ]
      },
      {
        "question": "how about the average and maximum number of tickets purchased?",
        "query": [
          "select avg (num_of_ticket), max (num_of_ticket) from visit",
          "select avg (num_of_ticket), max (num_of_ticket) from visit",
          "select avg (num_of_ticket), max (num_of_ticket) from visit",
          "select distinct avg (num_of_ticket), max (num_of_ticket) from visit",
          "select distinct num_of_ticket from visit group by num_of_ticket order by count (*) desc limit 1",
          "select distinct max (num_of_ticket), avg (num_of_ticket) from visit",
          "select distinct count (num_of_ticket) from visit",
          "select distinct max (num_of_ticket) from visit",
          "select avg (num_of_ticket), min (num_of_ticket) from visit",
          "select distinct num_of_ticket from visit group by num_of_ticket order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "what is the lowest level of membership?",
        "query": [
          "select level_of_membership from visitor order by level_of_membership asc limit 1",
          "select min (level_of_membership) from visitor",
          "select min (level_of_membership) from visitor",
          "select distinct level_of_membership from visitor order by level_of_membership asc limit 1",
          "select distinct min (level_of_membership) from visitor",
          "select max (level_of_membership) from visitor",
          "select distinct max (level_of_membership) from visitor",
          "select max (level_of_membership) from visitor",
          "select level_of_membership from visitor order by age asc limit 1",
          "select level_of_membership from visitor order by level_of_membership desc limit 1"
        ]
      },
      {
        "question": "find the number of visitors whose membership level is 1.",
        "query": [
          "select count (*) from visitor where level_of_membership = 1",
          "select count (*) from visitor where level_of_membership = 1",
          "select distinct count (*) from visitor where level_of_membership = 1",
          "select count (*) from visitor where level_of_membership = 1"
        ]
      },
      {
        "question": "show the ticket expenses of all of their museum visits.",
        "query": [
          "select t2.total_spent from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1",
          "select sum (total_spent) from visit as t1 join visitor as t2 on t1.visitor_id = t2.id where t2.level_of_membership = 1",
          "select t2.num_of_ticket from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1",
          "select sum (total_spent) from visit as t1 join visitor as t2 on t1.visitor_id = t2.id where t2.level_of_membership = 1",
          "select t2.total_spent from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1",
          "select sum (num_of_ticket) from visit as t1 join visitor as t2 on t1.visitor_id = t2.id where t2.level_of_membership = 1",
          "select t1.total_spent from visit as t1 join visitor as t2 on t1.visitor_id = t2.id where t2.level_of_membership = 1",
          "select t1.num_of_ticket from visit as t1 join visitor as t2 on t1.visitor_id = t2.id where t2.level_of_membership = 1",
          "select t2.num_of_ticket from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where level_of_membership = 1",
          "select t2.total_spent from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where level_of_membership = 1"
        ]
      },
      {
        "question": "what is the total amount of money spent?",
        "query": [
          "select sum (total_spent) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1",
          "select sum (total_spent) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1",
          "select sum (total_spent) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1",
          "select distinct sum (total_spent) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1",
          "select sum (total_spent) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1",
          "select sum (total_spent) from visit",
          "select sum (total_spent) from visit"
        ]
      }
    ],
    [
      {
        "question": "find the names of museums opened before 2009.",
        "query": [
          "select name from museum where open_year < 2009",
          "select name from museum where open_year < 2009",
          "select distinct name from museum where open_year < 2009",
          "select name from museum where open_year < 2010",
          "select name from museum where open_year < 2010"
        ]
      },
      {
        "question": "what about those opened after 2011?",
        "query": [
          "select name from museum where open_year > 2011",
          "select name from museum where open_year > 2011",
          "select distinct name from museum where open_year > 2011",
          "select name from museum where open_year > 2011"
        ]
      },
      {
        "question": "What is the name of the visitor who visited both groups of museums?",
        "query": [
          "select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where t1.open_year > 2011 intersect select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where t1.open_year < 2009",
          "select t1.name from visitor as t1 join museum as t2 on t1.id = t2.museum_id where t2.open_year > 2011 intersect select t1.name from visitor as t1 join museum as t2 on t1.id = t2.museum_id where t2.open_year < 2009",
          "select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t3.museum_id = t2.museum_id where t3.open_year > 2011 and t3.open_year < 2009",
          "select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where t1.open_year < 2011 intersect select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where t1.open_year > 2011",
          "select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where t1.open_year > 2011 and t1.open_year < 2009",
          "select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where open_year > 2011 intersect select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where open_year < 2009",
          "select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t2.museum_id = t3.museum_id where t3.open_year > 2011 and t3.open_year < 2009",
          "select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t3.museum_id = t2.museum_id where t3.open_year > 2011 and t3.open_year < 2009",
          "select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where t1.open_year > 2011 intersect select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where t1.open_year > 2009",
          "select t2.name from museum as t1 join visitor as t2 on t1.museum_id = t2.id where t1.open_year > 2011 and t1.open_year < 2009"
        ]
      }
    ],
    [
      {
        "question": "find the names of museums opened after 2010",
        "query": [
          "select name from museum where open_year > 2010",
          "select name from museum where open_year > 2010",
          "select distinct name from museum where open_year > 2010",
          "select name from museum where open_year > 2010",
          "select name from museum where open_year > 10",
          "select name from museum where open_year > 10",
          "select name from museum where open_year > 2009",
          "select name from museum where open_year >2010"
        ]
      },
      {
        "question": "find the number of visits to these museums?",
        "query": [
          "select count (*) from museum where open_year > 2010",
          "select count (*) from museum where open_year > 2010",
          "select count (*) from museum where open_year > 2010",
          "select distinct count (*) from museum where open_year > 2010",
          "select count (*) from museum as t1 join visit as t2 where t1.open_year > 2010",
          "select count (*) from museum as t1 join visit as t2 where t1.open_year > 2010",
          "select count (*) from museum where open_year > 2010 group by museum_id"
        ]
      },
      {
        "question": "Find the number of visitors who did not visit these museums.",
        "query": [
          "select count (*) from visitor where id not in (select visitor_id from visit where museum_id > 2010)",
          "select distinct count (*) from visitor where id not in (select visitor_id from visit where museum_id > 2010)",
          "select count (*) from visitor where id not in (select museum_id from visit)",
          "select count (*) from visitor where id not in (select museum_id from visit)",
          "select count (*) from museum where open_year > 2010",
          "select distinct count (*) from museum where open_year > 2010",
          "select distinct count (*) from visitor where id not in (select museum_id from visit)",
          "select count (*) from museum where open_year > 2010",
          "select count (*) from visitor except select count (*) from museum where open_year > 2010"
        ]
      }
    ]
  ],
  "network_1": [
    [
      {
        "question": "How many high schoolers are there?",
        "query": [
          "select count (*) from highschooler",
          "select count (*) from highschooler",
          "select distinct count (*) from highschooler",
          "select count (*) from highschooler"
        ]
      },
      {
        "question": "How many in each grade 11 or 12?",
        "query": [
          "select grade, count (*) from highschooler group by grade",
          "select grade, count (*) from highschooler group by grade",
          "select grade, count (*) from highschooler where grade = 11 group by grade",
          "select count (*) from highschooler where grade = 11 or grade = 12",
          "select grade, count (*) from highschooler where grade = 11 group by grade",
          "select distinct count (*), grade from highschooler where grade = 11 or grade = 12",
          "select count (*) from highschooler where grade = 11 or grade = 12",
          "select count (*), grade from highschooler group by grade",
          "select count (*), grade from highschooler where grade = 11 or grade = 12",
          "select distinct count (*) from highschooler where grade = 11 or grade = 12"
        ]
      },
      {
        "question": "How many in grade 9 or 10?",
        "query": [
          "select count (*) from highschooler where grade = 9 or grade = 10",
          "select count (*) from highschooler where grade = 9 or grade = 10",
          "select distinct count (*) from highschooler where grade = 9 or grade = 10",
          "select count (*) from highschooler where grade = 9 or grade = 10",
          "select grade, count (*) from highschooler where grade = 9 or grade = 10",
          "select grade, count (*) from highschooler where grade = 9 or grade = 10",
          "select count (*) from highschooler group by grade having grade = 9 or grade = 10",
          "select grade, count (*) from highschooler where grade = 9 or grade = 10",
          "select grade, count (*) from highschooler where grade >= 9 group by grade"
        ]
      }
    ],
    [
      {
        "question": "How many distinct grades are there?",
        "query": [
          "select count (distinct grade) from highschooler",
          "select distinct grade from highschooler",
          "select distinct grade from highschooler",
          "select distinct grade from highschooler",
          "select distinct count (distinct grade) from highschooler",
          "select distinct grade from highschooler group by grade"
        ]
      },
      {
        "question": "What are they?",
        "query": [
          "select distinct grade from highschooler",
          "select distinct grade from highschooler",
          "select grade from highschooler"
        ]
      },
      {
        "question": "Which one has the least number of highschoolers?",
        "query": [
          "select grade from highschooler group by grade order by count (*) asc limit 1",
          "select distinct grade from highschooler group by grade order by count (*) asc limit 1",
          "select grade from highschooler group by grade order by count (*) asc limit 1",
          "select distinct grade from highschooler group by grade order by count (*) asc limit 1",
          "select distinct grade from highschooler group by distinct grade order by count (*) asc limit 1"
        ]
      },
      {
        "question": "Which one has the most?",
        "query": [
          "select grade from highschooler group by grade order by count (*) desc limit 1",
          "select distinct grade from highschooler group by grade order by count (*) desc limit 1",
          "select grade from highschooler group by grade order by count (*) desc limit 1",
          "select grade from highschooler group by grade order by count (*) desc limit 1",
          "select distinct grade from highschooler group by grade desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "How many highschoolers are there in total?",
        "query": [
          "select count (*) from highschooler",
          "select count (*) from highschooler",
          "select distinct count (*) from highschooler",
          "select count (*) from highschooler"
        ]
      },
      {
        "question": "How many per grade?",
        "query": [
          "select count (*) from highschooler group by grade",
          "select distinct grade from highschooler group by grade",
          "select count (*) from highschooler group by grade",
          "select distinct grade from highschooler",
          "select distinct count (*) from highschooler group by grade",
          "select name, grade from highschooler group by grade",
          "select count (*) from highschooler group by grade",
          "select distinct count (*), grade from highschooler"
        ]
      },
      {
        "question": "What grades have at least 10 students?",
        "query": [
          "select grade from highschooler group by grade having count (*) >= 10",
          "select distinct grade from highschooler group by grade having count (*) >= 10",
          "select grade from highschooler group by grade having count (*) >= 10",
          "select distinct grade from highschooler group by grade having count (*) >= 10",
          "select grade from highschooler group by grade having count (*) >= 10",
          "select grade from highschooler group by grade having count (*) > 10",
          "select distinct grade from highschooler group by grade having count (*) > 10",
          "select grade from highschooler group by grade having count (*) > 10"
        ]
      },
      {
        "question": "How about at least 4?",
        "query": [
          "select grade from highschooler group by grade having count (*) >= 4",
          "select grade from highschooler group by grade having count (*) >= 4",
          "select distinct grade from highschooler group by grade having count (*) >= 4",
          "select grade from highschooler group by grade having count (*) >= 4",
          "select grade from highschooler group by grade having count (*) > 4",
          "select grade from highschooler group by grade having count (*) <= 4",
          "select grade from highschooler group by grade having count (*) > 4"
        ]
      }
    ],
    [
      {
        "question": "What are the names of all the high school students?",
        "query": [
          "select name from highschooler",
          "select name from highschooler",
          "select distinct name from highschooler",
          "select name from highschooler",
          "select distinct student_id from friend",
          "select distinct student_id from likes"
        ]
      },
      {
        "question": "Show the names of the friends for each one.",
        "query": [
          "select t1.name, t2.friend_id from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select t1.name, t2.friend_id from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select t2.name, t1.friend_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t2.name, t1.friend_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t2.name, t1.student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t2.name, t1.student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t2.friend_id, t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select t1.name, t2.student_id from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id"
        ]
      },
      {
        "question": "How many friends does each student each have?",
        "query": [
          "select t1.name, count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id",
          "select t1.name, count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id",
          "select t1.name, count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id",
          "select distinct t1.name, count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id",
          "select t1.name, count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name",
          "select t1.name, count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name",
          "select distinct t1.name, count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name",
          "select t1.id, count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id",
          "select distinct count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id",
          "select count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id"
        ]
      }
    ],
    [
      {
        "question": "What are the names of all the high schoolers?",
        "query": [
          "select name from highschooler",
          "select name from highschooler",
          "select distinct name from highschooler",
          "select name from highschooler",
          "select distinct student_id from likes"
        ]
      },
      {
        "question": "Show me the number of friends for each one.",
        "query": [
          "select student_id, count (*) from friend group by student_id",
          "select student_id, count (*) from friend group by student_id",
          "select distinct student_id from friend",
          "select count (*) from friend group by student_id",
          "select name, count (*) from highschooler group by name",
          "select count (*) from friend group by student_id",
          "select distinct student_id, count (*) from friend group by student_id",
          "select name, count (*) from highschooler group by name",
          "select distinct student_id, count (*) from friend",
          "select count (*) from friend"
        ]
      },
      {
        "question": "Which one has the least number of friends?",
        "query": [
          "select student_id from friend group by student_id order by count (*) asc limit 1",
          "select student_id from friend group by student_id order by count (*) asc limit 1",
          "select distinct student_id from friend group by student_id order by count (*) asc limit 1",
          "select name from highschooler order by count (*) asc limit 1",
          "select student_id from friend group by student_id asc limit 1",
          "select name from highschooler order by count (*) asc limit 1",
          "select student_id from friend group by student_id order by count (*) desc limit 1",
          "select student_id from friend group by student_id order by count (student_id) asc limit 1",
          "select student_id from friend group by student_id order by count (*) limit 1"
        ]
      },
      {
        "question": "How about the greatest?",
        "query": [
          "select student_id from friend group by student_id order by count (*) desc limit 1",
          "select student_id from friend group by student_id order by count (*) desc limit 1",
          "select distinct student_id from friend group by student_id order by count (*) desc limit 1",
          "select student_id from friend group by student_id order by count (*) desc limit 1",
          "select distinct count (*) from friend group by student_id order by count (*) desc limit 1",
          "select student_id from friend group by student_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "How many highschoolers have more than 5?",
        "query": [
          "select count (*) from highschooler where grade > 5",
          "select count (*) from highschooler where grade > 5",
          "select distinct count (*) from highschooler where grade > 5",
          "select count (*) from highschooler where grade > 5",
          "select count (*) from highschooler group by grade having grade > 5",
          "select count (*) from highschooler group by grade having grade > 5",
          "select distinct count (*) from highschooler group by grade having grade > 5",
          "select count (*) from highschooler group by grade having grade > 5",
          "select distinct count (*) from highschooler"
        ]
      },
      {
        "question": "at least 3?",
        "query": [
          "select count (*) from highschooler where grade > 5 group by grade having count (*) > 3",
          "select count (*) from highschooler where grade > 5 group by count (*) >= 3",
          "select count (*) from highschooler where grade > 5 group by count (*) >= 3",
          "select distinct count (*) from highschooler where grade > 5",
          "select distinct count (*) from highschooler where grade > 5 group by count (*) >= 3",
          "select count (*) from highschooler where grade > 5",
          "select distinct count (*) from highschooler where grade > 5 group by grade having count (*) > 3",
          "select count (*) from highschooler where grade > 5 group by grade having count (*) > 5",
          "select count (*) from highschooler where grade > 5 group by count (*) > 3",
          "select count (*) from highschooler where grade > 5"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select name from highschooler where grade > 5 group by grade having count (*) > 3",
          "select name from highschooler where grade > 5 group by grade having count (*) > 3",
          "select distinct name from highschooler where grade > 5 group by grade having count (*) > 3",
          "select name from highschooler where grade > 5 group by name having count (*) > 3",
          "select distinct name from highschooler where grade > 5 group by grade having count (*) > 3",
          "select distinct name from highschooler where grade > 5 group by grade having count (*) > 3",
          "select distinct name from highschooler where grade > 5 group by name having count (*) > 3",
          "select name from highschooler where grade > 5 group by grade having count (*) >= 3",
          "select name from highschooler where grade > 5 group by grade having count (*) >= 3",
          "select name from highschooler where grade > 5 group by grade having count (*) >3"
        ]
      }
    ],
    [
      {
        "question": "Show me information on the high schooler named \"Kyle.\"",
        "query": [
          "select * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kyle\"",
          "select distinct * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"KYLE\"",
          "select * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kylie\"",
          "select * from highschooler where name = \"Kyla\""
        ]
      },
      {
        "question": "How many friends does he have?",
        "query": [
          "select count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id join friend as t3 on t3.friend_id = t2.id where t2.name = \"Kyle\"",
          "select count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id join friend as t3 on t3.friend_id = t2.id where t2.name = \"Kyle\"",
          "select distinct count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (distinct student_id) from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id join friend as t3 on t3.student_id = t2.id where t2.name = \"Kyle\""
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select distinct t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select distinct t1.student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select distinct t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select distinct t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\""
        ]
      }
    ],
    [
      {
        "question": "Is there a highschooler named Kyle?",
        "query": [
          "select * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kyle\"",
          "select distinct count (*) from highschooler where name = \"Kyle\"",
          "select distinct highschooler.name from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kyle\"",
          "select * from highschooler where name = \"Kyle\"",
          "select distinct student_id from friend where student_id = \"Kyle\"",
          "select distinct student_id from friend where student_id = \"KYLE\""
        ]
      },
      {
        "question": "Who does he like?",
        "query": [
          "select t2.liked_id from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.name, t2.liked_id from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t2.liked_id from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.liked_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.liked_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select distinct t1.liked_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select liked_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select student_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\""
        ]
      },
      {
        "question": "What are the names of his friends?",
        "query": [
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.name, t2.liked_id from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct t2.liked_id from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t2.friend_id, t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t2.student_id, t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.name, t2.friend_id from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t2.liked_id, t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.name, t2.liked_id from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select distinct count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (distinct t1.name) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct count (t1.name) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct count (distinct t1.name) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct count (t1.name) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (distinct t1.name) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = \"Kyle\""
        ]
      }
    ],
    [
      {
        "question": "Show me all the high school student ids.",
        "query": [
          "select id from highschooler",
          "select id from highschooler",
          "select student_id from friend",
          "select student_id from friend",
          "select student_id from likes",
          "select student_id from likes",
          "select distinct student_id from likes",
          "select id from highschooler",
          "select distinct student_id from likes"
        ]
      },
      {
        "question": "How many friends do each of them have?",
        "query": [
          "select student_id, count (*) from friend group by student_id",
          "select student_id, count (*) from friend group by student_id",
          "select student_id, count (*) from friend group by student_id",
          "select distinct student_id, count (*) from friend group by student_id",
          "select distinct student_id from friend",
          "select count (*) from friend group by student_id",
          "select distinct student_id, count (*) from friend"
        ]
      },
      {
        "question": "Which ones have at least 1?",
        "query": [
          "select student_id from friend group by student_id having count (*) >= 1",
          "select distinct student_id from friend group by student_id having count (*) >= 1",
          "select student_id from friend group by student_id having count (*) = 1",
          "select student_id from friend group by student_id having count (*) > 0",
          "select student_id from friend group by student_id having count (*) = 1",
          "select student_id from friend group by student_id having count (*) > 1",
          "select student_id from friend group by student_id having count (*) > 0",
          "select student_id from friend group by student_id having count (*) > 1"
        ]
      },
      {
        "question": "Which ones have none?",
        "query": [
          "select student_id from friend except select student_id from friend group by student_id having count (*) = 0",
          "select student_id from friend group by student_id having count (*) = 0",
          "select distinct student_id from friend group by student_id having count (*) = 0",
          "select student_id from friend group by student_id having count (*) = 0",
          "select student_id from friend except select student_id from friend group by student_id having count (*) = 1",
          "select distinct student_id from friend"
        ]
      }
    ],
    [
      {
        "question": "What are the names of all the highshcool students?",
        "query": [
          "select name from highschooler",
          "select name from highschooler",
          "select distinct name from highschooler",
          "select name from highschooler",
          "select distinct student_id from likes",
          "select distinct student_id from friend"
        ]
      },
      {
        "question": "Which ones have at least 5 friends?",
        "query": [
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 5",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count (*) >= 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t2.student_id having count (*) >= 5",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 5",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name having count (*) >= 5",
          "select distinct t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count (*) >= 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 5",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.id having count (*) >= 5",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name having count (*) >= 5"
        ]
      },
      {
        "question": "how about at least 1?",
        "query": [
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 1",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 1",
          "select distinct count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 1",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 1",
          "select name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 1",
          "select distinct name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 1",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) > 1",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 1",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name having count (*) >= 1",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 1"
        ]
      },
      {
        "question": "how about 0?",
        "query": [
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 0",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 0",
          "select name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 0",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) < 1",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 1",
          "select name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 0",
          "select distinct name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 0",
          "select distinct count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 0",
          "select name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 0",
          "select name from highschooler where id in (select student_id from friend group by student_id having count (*) = 0)"
        ]
      }
    ],
    [
      {
        "question": "Show me the ids of all highschoolers who have friends?",
        "query": [
          "select student_id from friend",
          "select distinct student_id from friend",
          "select student_id from friend"
        ]
      },
      {
        "question": "Also show, for each, the ids of the people they like?",
        "query": [
          "select student_id, liked_id from likes"
        ]
      },
      {
        "question": "Now only show those who are liked by someone else!",
        "query": [
          "select student_id from likes",
          "select student_id from likes",
          "select distinct student_id from likes",
          "select liked_id from likes",
          "select student_id from likes except select liked_id from likes"
        ]
      },
      {
        "question": "Show me just their ids!",
        "query": [
          "select liked_id from likes",
          "select student_id from likes",
          "select student_id from likes",
          "select distinct student_id from likes",
          "select liked_id from likes"
        ]
      }
    ],
    [
      {
        "question": "How many high schoolers are liked by someone else?",
        "query": [
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t1.liked_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct count (*) from likes",
          "select distinct count (student_id) from likes",
          "select distinct student_id from likes",
          "select distinct t1.student_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct count (distinct student_id) from likes",
          "select *select count (*) from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select distinct count (liked_id) from likes"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select distinct student_id from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select distinct name from highschooler as t1 join likes as t2 on t1.id = t2.liked_id",
          "select distinct name from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select distinct t1.liked_id from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select distinct t1.student_id from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select t2.name from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select from likes as t1 join highschooler as t2 on t1.liked_id = t2.id group by t2.id"
        ]
      },
      {
        "question": "How many of them have friends?",
        "query": [
          "select distinct count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.liked_id = t2.id join friend as t3 on t2.id = t3.student_id",
          "select distinct count (distinct t2.name) from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select distinct count (t2.name) from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id join likes as t3 on t3.liked_id = t2.id",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.liked_id = t2.id join friend as t3 on t3.student_id = t2.id",
          "select distinct count (*) from likes as t1 join friend as t2 on t1.liked_id = t2.student_id group by t2.student_id",
          "select distinct t2.name, count (*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name"
        ]
      },
      {
        "question": "Who are they?",
        "query": [
          "select distinct t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t1.student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t1.friend_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct name from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct student_id from friend",
          "select from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct * from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t1.student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id"
        ]
      }
    ],
    [
      {
        "question": "What are the names of the highschoolers who don't like anyone?",
        "query": [
          "select name from highschooler where id not in (select student_id from likes)",
          "select name from highschooler where id not in (select student_id from likes)",
          "select distinct name from highschooler where id not in (select student_id from likes)",
          "select name from highschooler where id not in (select liked_id from likes)",
          "select distinct student_id from likes"
        ]
      },
      {
        "question": "How about those who like others?",
        "query": [
          "select name from highschooler where id in (select student_id from likes)",
          "select name from highschooler where id in (select student_id from likes)",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = liked_id",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select distinct t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = liked_id",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select name from highschooler where id in (select student_id from likes)",
          "select distinct t1.name from highschooler as t1 join likes as t2 on t1.id = liked_id"
        ]
      },
      {
        "question": "How many people do they each like?",
        "query": [
          "select student_id, count (*) from likes group by student_id",
          "select student_id, count (*) from likes group by student_id",
          "select name, count (*) from highschooler where id in (select student_id from likes) group by name",
          "select name, count (*) from highschooler where id in (select student_id from likes) group by name",
          "select distinct count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select count (*) from highschooler where id in (select student_id from likes)",
          "select distinct student_id, liked_id from likes",
          "select count (*) from highschooler where id in (select student_id from likes)",
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select name, count (*) from highschooler where id in (select student_id from likes)"
        ]
      }
    ],
    [
      {
        "question": "How many high schoolers like somebody else?",
        "query": [
          "select count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select count (*) from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select count (distinct student_id) from likes",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.liked_id = t2.id",
          "select count (*) from likes",
          "select count (distinct student_id) from likes",
          "select count (*) from likes",
          "select distinct count (*) from likes"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id"
        ]
      },
      {
        "question": "what is the greatest number of likes anyone has?",
        "query": [
          "select count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name order by count (*) desc limit 1",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1",
          "select count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name order by count (*) desc limit 1",
          "select max (count (*)) from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1",
          "select count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name order by count (*) desc limit 1",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.id order by count (*) desc limit 1",
          "select count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.id order by count (*) desc limit 1",
          "select distinct t1.student_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1"
        ]
      },
      {
        "question": "who has the greatest number of likes?",
        "query": [
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1",
          "select distinct student_id from likes group by student_id order by count (*) desc limit 1",
          "select distinct student_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by student_id order by count (*) desc limit 1",
          "select distinct student_id from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) desc limit 1",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) asc limit 1",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show me the names of all students?",
        "query": [
          "select name from highschooler",
          "select name from highschooler",
          "select distinct name from highschooler",
          "select name from highschooler",
          "select distinct student_id from likes",
          "select distinct student_id from friend"
        ]
      },
      {
        "question": "How about those who like at least one other person!",
        "query": [
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = liked_id",
          "select distinct t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = liked_id",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id"
        ]
      },
      {
        "question": "How about those who like at least two other students!",
        "query": [
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count (*) >= 2",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name having count (*) >= 2",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name having count (*) >= 2",
          "select distinct t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count (*) >= 2",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.name having count (*) >= 2",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by student_id having count (*) >= 2",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t2.id having count (*) >= 2",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count (*) >= 2",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count (*) = 2",
          "select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by student_id having count (*) >= 2"
        ]
      }
    ],
    [
      {
        "question": "What are the names of the students who have some friends?",
        "query": [
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select distinct t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select name from highschooler where id in (select student_id from friend)"
        ]
      },
      {
        "question": "How about those have at least 2 friends?",
        "query": [
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name having count (*) >= 2",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 2",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name having count (*) >= 2",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name having count (*) >= 2",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 2",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) = 2"
        ]
      },
      {
        "question": "What grades are they each in?",
        "query": [
          "select t1.name, t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select t1.name, t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select distinct t1.name, t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select t1.name, t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select distinct t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having count (*) >= 2",
          "select distinct t1.name, t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name having count (*) >= 2",
          "select t1.name, t1.grade from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.name having count (*) >= 2"
        ]
      },
      {
        "question": "Show me the names of only those who are in a grade higher than 5!",
        "query": [
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having t1.grade > 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having t1.grade > 5",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having t1.grade > 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having t1.grade > 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having grade > 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having grade > 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id where t1.grade > 5",
          "select distinct t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having grade > 5",
          "select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id group by t1.id having t1.grade > 5"
        ]
      }
    ],
    [
      {
        "question": "What grade is the student named Kyle in?",
        "query": [
          "select grade from highschooler where name = \"Kyle\"",
          "select grade from highschooler where name = \"Kyle\"",
          "select grade from highschooler where name = \"Kyle\"",
          "select distinct grade from highschooler where name = \"Kyle\"",
          "select grade from highschooler where name = \"Kyle\"",
          "select distinct highschooler.grade from highschooler where name = \"Kyle\"",
          "select grade from highschooler where name = \"Kyle\"",
          "select distinct name from highschooler where name = \"Kyle\"",
          "select grade from highschooler where name = \"Kyle\"",
          "select grade from highschooler where name = \"Kyle\""
        ]
      },
      {
        "question": "How many other students like him?",
        "query": [
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t1.id having t1.name = \"Kyle\"",
          "select count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select distinct count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t1.id having t1.name = \"Kyle\"",
          "select count (distinct student_id) from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select distinct count (*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name!= \"Kyle\""
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\""
        ]
      },
      {
        "question": "How many other students does he like?",
        "query": [
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct count (t1.name) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select count (distinct t1.name) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\"",
          "select distinct count (*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = \"Kyle\""
        ]
      }
    ],
    [
      {
        "question": "Show me the student_id and the grade for all students.",
        "query": [
          "select id, grade from highschooler",
          "select id, grade from highschooler",
          "select id, grade from highschooler"
        ]
      },
      {
        "question": "What is the average grade?",
        "query": [
          "select avg (grade) from highschooler",
          "select avg (grade) from highschooler",
          "select distinct avg (grade) from highschooler",
          "select avg (grade) from highschooler",
          "select distinct grade from highschooler group by grade",
          "select distinct grade from highschooler",
          "select avg (grade) from highschooler",
          "select avg (grade) from highschooler",
          "select avg (grade) from highschooler",
          "select distinct count (*) from highschooler"
        ]
      },
      {
        "question": "How about for students who have no friends?",
        "query": [
          "select avg (grade) from highschooler where id not in (select student_id from friend)",
          "select avg (grade) from highschooler where id not in (select student_id from friend)",
          "select avg (grade) from highschooler where id not in (select student_id from friend)",
          "select distinct count (*) from highschooler where id not in (select student_id from friend)",
          "select distinct student_id from friend",
          "select distinct student_id from friend where student_id not in (select student_id from friend)",
          "select distinct avg (grade) from highschooler where id not in (select student_id from friend)"
        ]
      },
      {
        "question": "How about for those who have some friends?",
        "query": [
          "select avg (grade) from highschooler where id in (select student_id from friend)",
          "select avg (grade) from highschooler where id in (select student_id from friend)",
          "select distinct avg (grade) from highschooler where id in (select student_id from friend)",
          "select avg (grade) from highschooler where id in (select student_id from friend)",
          "select distinct avg (grade) from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select distinct student_id from friend",
          "select avg (grade) from highschooler as t1 join friend as t2 on t1.id = t2.student_id",
          "select distinct count (*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id"
        ]
      }
    ]
  ],
  "course_teach": [
    [
      {
        "question": "Show all the teachers.",
        "query": [
          "select * from teacher",
          "select * from teacher",
          "select * from teacher",
          "select distinct * from teacher",
          "select distinct name from teacher",
          "select distinct teacher.name from teacher"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from teacher",
          "select count (*) from teacher",
          "select count (*) from teacher",
          "select distinct count (*) from teacher",
          "select count (*) from Teacher"
        ]
      }
    ],
    [
      {
        "question": "What is the name of each teacher?",
        "query": [
          "select name from teacher",
          "select name from teacher",
          "select distinct name from teacher",
          "select name from teacher",
          "select name from Teacher"
        ]
      },
      {
        "question": "Sort them in ascending order of age.",
        "query": [
          "select name from teacher order by age asc",
          "select name from teacher order by age asc",
          "select distinct name from teacher order by age asc",
          "select name from teacher order by age desc",
          "select name from teacher order by age",
          "select name from teacher order by age desc",
          "select name from teacher order by age",
          "select distinct name from teacher order by age",
          "select distinct name from teacher order by age desc",
          "select name from teacher order by age ASC"
        ]
      }
    ],
    [
      {
        "question": "What is the age of each teacher?",
        "query": [
          "select age from teacher",
          "select age from teacher",
          "select distinct age from teacher",
          "select age from teacher",
          "select distinct name, age from teacher",
          "select distinct teacher.age from teacher",
          "select distinct teacher_id, age from teacher",
          "select distinct name from teacher",
          "select distinct teacher_id from course_arrange",
          "select distinct teacher.age from course_arrange"
        ]
      },
      {
        "question": "Also show the hometown for each.",
        "query": [
          "select age, hometown from teacher",
          "select age, hometown from teacher",
          "select age, hometown from teacher",
          "select name, hometown from teacher",
          "select name, hometown from teacher",
          "select distinct name, hometown from teacher",
          "select hometown, age from teacher",
          "select name, hometown from teacher",
          "select age, hometown from Teacher"
        ]
      }
    ],
    [
      {
        "question": "What is the hometown of each teacher?",
        "query": [
          "select hometown from teacher",
          "select hometown from teacher",
          "select distinct hometown from teacher",
          "select hometown from teacher",
          "select distinct t1.hometown from teacher as t1"
        ]
      },
      {
        "question": "Which teacher's hometown is not \"Little Lever Urban District\"?",
        "query": [
          "select * from teacher where hometown!= \"Little Lever Urban District\"",
          "select * from teacher where hometown!= \"Little Lever Urban District\"",
          "select distinct * from teacher where hometown!= \"Little Lever Urban District\"",
          "select distinct name from teacher where hometown!= \"Little Lever Urban District\"",
          "select * from teacher where hometown!= \"Little Lever Urban District\"",
          "select * from teacher except select * from teacher where hometown = \"Little Lever Urban District\"",
          "select * from teacher where hometown!= \"Little Lever Urban District\"",
          "select distinct t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id"
        ]
      },
      {
        "question": "Give me their names.",
        "query": [
          "select name from teacher where hometown!= \"Little Lever Urban District\"",
          "select name from teacher where hometown!= \"Little Lever Urban District\"",
          "select name from teacher where hometown!= \"Little Lever Urban District\"",
          "select name from teacher where hometown!= \"Little Lever Urban District\"",
          "select name from teacher where hometown!= \"Little Lever Urban District\"",
          "select distinct name from teacher where hometown!= \"Little Lever Urban District\"",
          "select name from teacher where hometown!= \"Little Lever Urban District\"",
          "select distinct name from teacher where hometown!= \"Little Lever Urban District\"",
          "select name from teacher where hometown!= \"Little Lever Urban District\"",
          "select name from teacher where hometown!= \"Little Lever Urban District\""
        ]
      }
    ],
    [
      {
        "question": "What are the ages of all the teachers?",
        "query": [
          "select age from teacher",
          "select age from teacher",
          "select distinct age from teacher",
          "select age from teacher"
        ]
      },
      {
        "question": "Which teachers are age 32?",
        "query": [
          "select * from teacher where age = 32",
          "select * from teacher where age = 32",
          "select distinct * from teacher where age = 32",
          "select * from teacher where age = 32",
          "select distinct name from teacher where age = 32",
          "select * from teacher where age = \"32\"",
          "select * from teacher where age = 33",
          "select distinct t1.age from teacher as t1",
          "select * from teacher where age = 33",
          "select distinct t1.name from teacher as t1"
        ]
      },
      {
        "question": "Which teachers are age 32 or 33?",
        "query": [
          "select * from teacher where age = 32 or age = 33",
          "select * from teacher where age = 32 or age = 33",
          "select * from teacher where age = 32 or age = 33",
          "select distinct * from teacher where age = 32 or age = 33",
          "select distinct select * from teacher where age = 32 or age = 33",
          "select * from teacher where age = 33 or age = 32",
          "select distinct count (*) from teacher where age = 32 or age = 33",
          "select * from teacher where age = 32",
          "select * from teacher where age = 33 or age = 32",
          "select * from Teacher where age = 32 or age = 33"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select name from teacher where age = 32 or age = 33",
          "select name from teacher where age = 32 or age = 33",
          "select distinct name from teacher where age = 32 or age = 33",
          "select name from teacher where age = 32 or age = 33",
          "select distinct t1.name from teacher as t1 where t1.age = 32 or t1.age = 33",
          "select name from teacher where age = 33 or age = 32",
          "select distinct t2.name from course as t1 join teacher as t2 on t1.course_id = t2.teacher_id where t2.age = 32 or t2.age = 33"
        ]
      }
    ],
    [
      {
        "question": "Sort all the teachers by their age.",
        "query": [
          "select * from teacher order by age",
          "select * from teacher order by age",
          "select * from teacher order by age",
          "select distinct * from teacher order by age",
          "select * from teacher order by age desc",
          "select * from teacher order by age desc",
          "select * from teacher order by age asc",
          "select * from teacher order by age asc",
          "select distinct name from teacher order by age",
          "select distinct teacher_id from course_arrange"
        ]
      },
      {
        "question": "Which teacher is the youngest?",
        "query": [
          "select * from teacher order by age asc limit 1",
          "select * from teacher order by age asc limit 1",
          "select * from teacher order by age limit 1",
          "select * from teacher order by age desc limit 1",
          "select distinct * from teacher order by age asc limit 1",
          "select distinct name from teacher order by age asc limit 1",
          "select name from teacher order by age asc limit 1",
          "select * from teacher order by age limit 1",
          "select * from teacher order by age desc limit 1",
          "select name from teacher order by age asc limit 1"
        ]
      },
      {
        "question": "What is his or her hometown?",
        "query": [
          "select hometown from teacher order by age asc limit 1",
          "select hometown from teacher order by age asc limit 1",
          "select hometown from teacher order by age asc limit 1",
          "select name, hometown from teacher order by age asc limit 1",
          "select distinct hometown from teacher order by age asc limit 1",
          "select hometown from teacher order by age desc limit 1",
          "select name, hometown from teacher order by age asc limit 1",
          "select hometown from Teacher order by age asc limit 1",
          "select distinct t1.hometown from teacher as t1 order by age asc limit 1",
          "select distinct t1.hometown from teacher as t1 order by age desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What is the hometown of each teacher?",
        "query": [
          "select hometown from teacher",
          "select hometown from teacher",
          "select distinct hometown from teacher",
          "select hometown from teacher",
          "select distinct t1.hometown from teacher as t1"
        ]
      },
      {
        "question": "Can you order teachers by their hometowns?",
        "query": [
          "select * from teacher order by hometown",
          "select * from teacher order by hometown",
          "select distinct * from teacher order by hometown",
          "select * from teacher order by hometown asc",
          "select * from teacher order by hometown asc",
          "select * from teacher order by hometown desc",
          "select * from teacher order by hometown desc",
          "select distinct order by hometown from teacher",
          "select * from Teacher order by hometown"
        ]
      },
      {
        "question": "Show the number of teachers from each hometown.",
        "query": [
          "select hometown, count (*) from teacher group by hometown",
          "select count (*) from teacher group by hometown",
          "select hometown, count (*) from teacher group by hometown",
          "select count (*) from teacher group by hometown",
          "select distinct count (*) from teacher group by hometown",
          "select distinct hometown, count (*) from teacher group by hometown",
          "select hometown, count (*) from teacher group by hometown",
          "select distinct hometown from teacher group by hometown",
          "select count (*), hometown from teacher group by hometown",
          "select count (*) from teacher group by hometown"
        ]
      }
    ],
    [
      {
        "question": "How many teachers are there?",
        "query": [
          "select count (*) from teacher",
          "select count (*) from teacher",
          "select count (*) from teacher",
          "select distinct count (*) from teacher",
          "select distinct count (*) from course",
          "select count (*) from course",
          "select count (*) from course"
        ]
      },
      {
        "question": "How many are there for each hometown?",
        "query": [
          "select count (*) from teacher group by hometown",
          "select count (*) from teacher group by hometown",
          "select count (*), hometown from teacher group by hometown",
          "select distinct count (*) from teacher group by hometown",
          "select count (*), hometown from teacher group by hometown",
          "select count (*) from teacher group by hometown",
          "select hometown, count (*) from teacher group by hometown",
          "select distinct count (*), hometown from teacher group by hometown",
          "select hometown, count (*) from teacher group by hometown",
          "select count (*), hometown from teacher group by hometown"
        ]
      },
      {
        "question": "Find the most common hometown of teachers.",
        "query": [
          "select hometown from teacher group by hometown order by count (*) desc limit 1",
          "select hometown from teacher group by hometown order by count (*) desc limit 1",
          "select distinct hometown from teacher group by hometown order by count (*) desc limit 1",
          "select hometown from teacher group by hometown desc limit 1",
          "select distinct hometown from teacher group by hometown order by count (*) desc limit 1",
          "select hometown from teacher group by hometown order by count (*) asc limit 1",
          "select distinct hometown from teacher group by hometown order by count (*) desc limit 1",
          "select max (hometown) from teacher group by hometown",
          "select distinct count (*) from teacher group by hometown desc limit 1",
          "select hometown from teacher group by hometown order by count (*) desc 1"
        ]
      }
    ],
    [
      {
        "question": "How many teachers are there?",
        "query": [
          "select count (*) from teacher",
          "select count (*) from teacher",
          "select count (*) from teacher",
          "select distinct count (*) from teacher",
          "select distinct count (*) from course",
          "select count (*) from course",
          "select count (*) from course"
        ]
      },
      {
        "question": "How many teachers are there for each hometown?",
        "query": [
          "select count (*) from teacher group by hometown",
          "select count (*) from teacher group by hometown",
          "select count (*), hometown from teacher group by hometown",
          "select distinct count (*) from teacher group by hometown",
          "select count (*) from teacher group by hometown",
          "select count (*), hometown from teacher group by hometown",
          "select hometown, count (*) from teacher group by hometown",
          "select hometown, count (*) from teacher group by hometown",
          "select distinct count (*), hometown from teacher group by hometown",
          "select count (*), hometown from teacher group by hometown"
        ]
      },
      {
        "question": "Which hometowns are shared by at least two teachers?",
        "query": [
          "select hometown from teacher group by hometown having count (*) >= 2",
          "select hometown from teacher group by hometown having count (*) >= 2",
          "select distinct hometown from teacher group by hometown having count (*) >= 2",
          "select distinct hometown from teacher group by hometown having count (*) >= 2",
          "select distinct hometown from teacher group by hometown having count (*) >= 2",
          "select distinct count (*) from teacher group by hometown having count (*) >= 2",
          "select hometown from teacher group by hometown having count (*) = 2",
          "select distinct hometown from teacher group by hometown having count (*) = 2",
          "select distinct count (*) from teacher group by hometown having count (*) = 2"
        ]
      }
    ],
    [
      {
        "question": "Find all the course arrangements.",
        "query": [
          "select * from course_arrange",
          "select * from course_arrange",
          "select * from course_arrange",
          "select distinct course_id from course_arrange",
          "select distinct * from course_arrange"
        ]
      },
      {
        "question": "For each of the courses, show the teacher who teaches it.",
        "query": [
          "select t2.course, t1.teacher_id from course_arrange as t1 join course as t2 on t1.course_id = t2.course_id",
          "select t2.course, t1.teacher_id from course_arrange as t1 join course as t2 on t1.course_id = t2.course_id"
        ]
      }
    ],
    [
      {
        "question": "Find all the course arrangements.",
        "query": [
          "select * from course_arrange",
          "select * from course_arrange",
          "select * from course_arrange",
          "select distinct course_id from course_arrange",
          "select distinct * from course_arrange"
        ]
      },
      {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "query": [
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id",
          "select t2.name, t3.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course",
          "select t2.name, t3.course from course_arrange as t1 join course as t3 on t1.course_id = t3.course_id join teacher as t2 on t1.teacher_id = teacher.teacher_id",
          "select t2.name, t3.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course"
        ]
      },
      {
        "question": "Sort the results by teacher's name",
        "query": [
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id order by t2.name",
          "select distinct t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id order by t2.name",
          "select distinct t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id order by t2.name",
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id",
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id order by name",
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id",
          "select distinct t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id",
          "select distinct t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id order by t2.name",
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id order by name",
          "select distinct t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id"
        ]
      }
    ],
    [
      {
        "question": "Find all the course arrangements.",
        "query": [
          "select * from course_arrange",
          "select * from course_arrange",
          "select * from course_arrange",
          "select distinct course_id from course_arrange",
          "select distinct * from course_arrange"
        ]
      },
      {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "query": [
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id",
          "select t2.name, t3.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course",
          "select t2.name, t3.course from course_arrange as t1 join course as t3 on t1.course_id = t3.course_id join teacher as t2 on t1.teacher_id = teacher.teacher_id",
          "select t2.name, t3.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course"
        ]
      },
      {
        "question": "Which teachers teach the math course? Give me their names.",
        "query": [
          "select t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where t3.course = \"Math\"",
          "select t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where t3.course = \"Math\"",
          "select distinct t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where t3.course = \"Math\"",
          "select t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where t3.course = \"Math\"",
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where t3.course = \"Math\"",
          "select t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where course = \"Math\"",
          "select t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where course = \"Math\"",
          "select t2.name, t3.course from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where t3.course = \"Math\"",
          "select distinct t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where course = \"Math\"",
          "select t2.name from course_arrange as t1 join course as t3 join teacher as t2 on t1.teacher_id = t2.teacher_id where t3.course = \"math\""
        ]
      }
    ],
    [
      {
        "question": "Show all the teacher names.",
        "query": [
          "select name from teacher",
          "select name from teacher",
          "select distinct name from teacher",
          "select name from teacher"
        ]
      },
      {
        "question": "Show names of teachers and the number of courses they teach.",
        "query": [
          "select t2.name, count (*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name",
          "select t2.name, count (*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name",
          "select t1.name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name",
          "select t2.name, count (*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name",
          "select distinct t2.name, count (*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name",
          "select t1.name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name",
          "select t2.name, count (*) from course_arrange as t1 join teacher as t2 on t2.teacher_id = t1.teacher_id group by t2.name",
          "select distinct t1.name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name",
          "select name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name",
          "select t1.name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name"
        ]
      }
    ],
    [
      {
        "question": "Show all the teacher names.",
        "query": [
          "select name from teacher",
          "select name from teacher",
          "select distinct name from teacher",
          "select name from teacher"
        ]
      },
      {
        "question": "Show names of teachers and the number of courses they teach.",
        "query": [
          "select t2.name, count (*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name",
          "select t2.name, count (*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name",
          "select t1.name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name",
          "select t2.name, count (*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name",
          "select distinct t2.name, count (*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name",
          "select t1.name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name",
          "select t2.name, count (*) from course_arrange as t1 join teacher as t2 on t2.teacher_id = t1.teacher_id group by t2.name",
          "select distinct t1.name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name",
          "select name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name",
          "select t1.name, count (*) from teacher as t1 join course_arrange as t2 on t1.teacher_id = t2.teacher_id group by t1.name"
        ]
      },
      {
        "question": "Show the names of teachers who teach at least two courses.",
        "query": [
          "select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count (*) >= 2",
          "select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count (*) >= 2",
          "select distinct t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count (*) >= 2",
          "select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count (*) >= 2",
          "select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count (*) = 2"
        ]
      }
    ]
  ],
  "real_estate_properties": [
    [
      {
        "question": "Show all the available features.",
        "query": [
          "select * from other_available_features",
          "select * from other_available_features",
          "select * from other_available_features",
          "select distinct * from other_available_features",
          "select distinct feature_name from other_available_features",
          "select distinct feature_id from other_available_features",
          "select * from ref_feature_types"
        ]
      },
      {
        "question": "How many available features are there?",
        "query": [
          "select count (*) from other_available_features",
          "select count (*) from other_available_features",
          "select count (*) from other_available_features",
          "select distinct count (*) from other_available_features"
        ]
      }
    ],
    [
      {
        "question": "Find the available features with feature name \"AirCon\".",
        "query": [
          "select * from other_available_features where feature_name = \"AirCon\"",
          "select * from other_available_features where feature_name = \"AirCon\"",
          "select * from other_available_features where feature_name = \"AirCon\"",
          "select distinct * from other_available_features where feature_name = \"AirCon\""
        ]
      },
      {
        "question": "What is the feature type name?",
        "query": [
          "select t1.feature_type_name from ref_feature_types as t1 join other_available_features as t2 on t1.feature_type_code = t2.feature_type_code where t2.feature_name = \"AirCon\"",
          "select t2.feature_type_name from other_available_features as t1 join ref_feature_types as t2 on t1.feature_type_code = t2.feature_type_code where t1.feature_name = \"AirCon\"",
          "select t1.feature_type_name from ref_feature_types as t1 join other_available_features as t2 on t1.feature_type_code = t2.feature_type_code where t2.feature_name = \"AirCon\"",
          "select t2.feature_type_name from other_available_features as t1 join ref_feature_types as t2 on t1.feature_type_code = t2.feature_type_code where t1.feature_name = \"AirCon\"",
          "select distinct t1.feature_type_name from ref_feature_types as t1 join other_available_features as t2 on t1.feature_type_code = t2.feature_type_code where t2.feature_name = \"AirCon\"",
          "select ref_feature_types.feature_type_name from ref_feature_types join other_available_features on other_available_features.feature_id = ref_feature_types.feature_type_code where other_available_features.feature_name = \"AirCon\"",
          "select distinct t2.feature_type_name from other_available_features as t1 join ref_feature_types as t2 on t1.feature_type_code = t2.feature_type_code where t1.feature_name = \"AirCon\"",
          "select ref_feature_types.feature_type_name from ref_feature_types join other_available_features on ref_feature_types.feature_type_code = other_available_features.feature_type_code where other_available_features.feature_name = \"AirCon\"",
          "select ref_feature_types.feature_type_name from ref_feature_types join other_available_features on other_available_features.feature_id = ref_feature_types.feature_type_code where other_available_features.feature_name = \"AirCon\"",
          "select t1.feature_type_name from ref_feature_types as t1 join other_available_features as t2 on t2.feature_type_code = t1.feature_type_code where t2.feature_name = \"AirCon\""
        ]
      }
    ],
    [
      {
        "question": "What is the property type description of each property?",
        "query": [
          "select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code",
          "select t2.property_type_description from properties as t1 join ref_property_types as t2 on t1.property_type_code = t2.property_type_code",
          "select property_type_description from ref_property_types",
          "select distinct t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code",
          "select property_type_description from ref_property_types",
          "select distinct t2.property_type_description from properties as t1 join ref_property_types as t2 on t1.property_type_code = t2.property_type_code",
          "select ref_property_types.property_type_description from ref_property_types",
          "select ref_property_types.property_type_description from ref_property_types"
        ]
      },
      {
        "question": "Show the property type descriptions of properties for each property type code.",
        "query": [
          "select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by t1.property_type_code",
          "select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by t1.property_type_code",
          "select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by t2.property_type_code",
          "select distinct t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by t1.property_type_code",
          "select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by t2.property_type_code",
          "select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by t1.property_type_code",
          "select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by t2.property_type_code",
          "select distinct t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by t2.property_type_code",
          "select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code group by property_type_code",
          "select distinct t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code"
        ]
      }
    ]
  ],
  "voter_1": [
    [
      {
        "question": "Show all area codes and states.",
        "query": [
          "select * from area_code_state",
          "select * from area_code_state",
          "select * from area_code_state",
          "select distinct area_code, state from area_code_state",
          "select distinct * from area_code_state",
          "select distinct state, area_code from area_code_state",
          "select distinct state from area_code_state",
          "select distinct area_code from area_code_state"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from area_code_state",
          "select count (*) from area_code_state",
          "select distinct count (*) from area_code_state",
          "select count (*) from area_code_state"
        ]
      }
    ],
    [
      {
        "question": "Show all info about contestants.",
        "query": [
          "select * from contestants",
          "select * from contestants",
          "select * from contestants",
          "select distinct * from contestants",
          "select distinct contestant_name from contestants",
          "select distinct contestant_number from contestants"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select contestant_name from contestants",
          "select contestant_name from contestants",
          "select distinct contestant_name from contestants",
          "select contestant_name from contestants",
          "select distinct contestant_name from contestants",
          "select contestants.contestant_name from contestants"
        ]
      },
      {
        "question": "Can you also show contestant numbers?",
        "query": [
          "select contestant_name, contestant_number from contestants",
          "select contestant_name, contestant_number from contestants",
          "select contestant_name, contestant_number from contestants",
          "select distinct contestant_name, contestant_number from contestants",
          "select contestant_number, contestant_name from contestants",
          "select contestant_number, contestant_name from contestants",
          "select distinct contestant_number from contestants",
          "select contestant_number from contestants",
          "select contestant_number, contestant_name from contestants",
          "select contestant_number from contestants"
        ]
      },
      {
        "question": "Can you sort them ordered in descending order of contestant name?",
        "query": [
          "select contestant_name from contestants order by contestant_name desc",
          "select contestant_name from contestants order by contestant_name desc",
          "select * from contestants order by contestant_name desc",
          "select * from contestants order by contestant_name desc",
          "select distinct contestant_name from contestants order by contestant_name desc",
          "select contestant_number from contestants order by contestant_name desc",
          "select contestant_number from contestants order by contestant_name desc",
          "select contestant_name from contestants order by contestant_name asc",
          "select contestant_name, contestant_number from contestants order by contestant_name",
          "select contestant_name from contestants order by contestant_name asc"
        ]
      }
    ],
    [
      {
        "question": "Show all info about votes.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes",
          "select distinct * from votes"
        ]
      },
      {
        "question": "Also provide vote ids.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select distinct vote_id from votes"
        ]
      },
      {
        "question": "Also show phone numbers.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes"
        ]
      }
    ],
    [
      {
        "question": "Show all area codes.",
        "query": [
          "select * from area_code_state",
          "select * from area_code_state",
          "select distinct area_code from area_code_state",
          "select * from area_code_state",
          "select distinct * from area_code_state",
          "select distinct state from area_code_state"
        ]
      },
      {
        "question": "What is the largest one?",
        "query": [
          "select * from area_code_state order by area_code desc limit 1",
          "select * from area_code_state order by area_code desc limit 1",
          "select * from area_code_state order by count (*) desc limit 1",
          "select * from area_code_state order by count (*) desc limit 1",
          "select max (area_code) from area_code_state",
          "select max (area_code) from area_code_state",
          "select distinct max (area_code) from area_code_state",
          "select area_code from area_code_state order by area_code desc limit 1",
          "select state from area_code_state order by count (*) desc limit 1",
          "select * from area_code_state order by state desc limit 1"
        ]
      },
      {
        "question": "How about smallest one?",
        "query": [
          "select * from area_code_state order by area_code asc limit 1",
          "select * from area_code_state order by area_code asc limit 1",
          "select * from area_code_state order by area_code asc limit 1",
          "select * from area_code_state order by area_code desc limit 1",
          "select * from area_code_state order by area_code desc limit 1",
          "select distinct * from area_code_state order by area_code asc limit 1",
          "select distinct select * from area_code_state order by area_code asc limit 1",
          "select * from area_code_state order by area_code limit 1",
          "select distinct from area_code_state order by area_code asc limit 1",
          "select * from area_code_state order by area_code limit 1"
        ]
      },
      {
        "question": "Give me both.",
        "query": [
          "select * from area_code_state order by area_code asc limit 1",
          "select * from area_code_state order by area_code desc limit 1",
          "select * from area_code_state order by area_code asc limit 1",
          "select * from area_code_state order by area_code desc limit 1",
          "select * from area_code_state order by area_code asc limit 2",
          "select * from area_code_state order by area_code asc limit 1",
          "select area_code from area_code_state order by area_code asc limit 1",
          "select distinct select * from area_code_state order by area_code asc limit 1",
          "select distinct * from area_code_state order by area_code asc limit 1",
          "select * from area_code_state order by area_code desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show all votes.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes",
          "select distinct * from votes",
          "select distinct vote_id from votes"
        ]
      },
      {
        "question": "Which ones are from the state 'CA'?",
        "query": [
          "select * from votes where state = \"CA\"",
          "select * from votes where state = \"CA\"",
          "select * from votes where state = \"CA\"",
          "select distinct * from votes where state = \"CA\"",
          "select distinct state from votes where state = \"CA\"",
          "select distinct t1.vote_id from votes as t1 where t1.state = \"CA\"",
          "select distinct t1.state from votes as t1 where t1.state = \"CA\"",
          "select distinct t1.contestant_number from votes as t1 where t1.state = \"CA\"",
          "select distinct t2.state from votes as t2 where t2.state = \"CA\""
        ]
      },
      {
        "question": "Among those, can you give me the last date created?",
        "query": [
          "select created from votes where state = \"CA\"",
          "select created from votes where state = \"CA\"",
          "select max (created) from votes where state = \"CA\"",
          "select created from votes where state = \"CA\"",
          "select max (created) from votes where state = \"CA\"",
          "select created from votes where state = \"CA\" order by created desc limit 1",
          "select distinct max (created) from votes where state = \"CA\"",
          "select created from votes where state = \"CA\" order by created desc limit 1",
          "select distinct created from votes where state = \"CA\"",
          "select distinct count (*) from votes where state = \"CA\""
        ]
      }
    ],
    [
      {
        "question": "Show all contestants.",
        "query": [
          "select * from contestants",
          "select * from contestants",
          "select * from contestants",
          "select distinct contestant_name from contestants",
          "select distinct contestant_number from contestants",
          "select distinct * from contestants"
        ]
      },
      {
        "question": "What are their names?",
        "query": [
          "select contestant_name from contestants",
          "select contestant_name from contestants",
          "select distinct contestant_name from contestants",
          "select contestant_name from contestants",
          "select distinct contestants.contestant_name from contestants",
          "select distinct contestant_name from contestants"
        ]
      },
      {
        "question": "Can you not include the name 'Jessie Alloway'?",
        "query": [
          "select contestant_name from contestants where contestant_name!= \"Jessie Alloway\"",
          "select contestant_name from contestants where contestant_name not = \"Jessie Alloway\"",
          "select contestant_name from contestants where contestant_name!= \"Jessie Alloway\"",
          "select * from contestants where contestant_name!= \"Jessie Alloway\"",
          "select contestant_name from contestants where contestant_name not = \"Jessie Alloway\"",
          "select distinct contestant_name from contestants where contestant_name!= \"Jessie Alloway\"",
          "select contestant_name from contestants where contestant_name!= \"Jessie Alloway\"",
          "select distinct contestant_name from contestants where contestant_name!= \"Jessie Alloway\"",
          "select distinct contestant_name from contestants where contestant_name not = \"Jessie Alloway\"",
          "select distinct contestant_name from contestants"
        ]
      }
    ],
    [
      {
        "question": "Show all votes?",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes",
          "select distinct * from votes",
          "select distinct vote_id from votes"
        ]
      },
      {
        "question": "Among these, what is the list of states?",
        "query": [
          "select state from votes",
          "select state from votes",
          "select distinct state from votes",
          "select state from votes",
          "select distinct state from votes",
          "select distinct state from votes"
        ]
      },
      {
        "question": "What are the distinct states and create time?",
        "query": [
          "select distinct state, created from votes",
          "select distinct state, created from votes",
          "select distinct state, created from votes",
          "select distinct state, created from votes",
          "select distinct state from votes",
          "select distinct state from votes",
          "select distinct state from votes"
        ]
      }
    ],
    [
      {
        "question": "Show all the contestants.",
        "query": [
          "select * from contestants",
          "select * from contestants",
          "select * from contestants",
          "select distinct contestant_name from contestants",
          "select distinct contestant_number from contestants",
          "select distinct * from contestants",
          "select contestant_name from contestants"
        ]
      },
      {
        "question": "Show all the votes.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes",
          "select distinct contestant_number from votes",
          "select distinct * from votes",
          "select distinct contestants.contestant_number from votes"
        ]
      },
      {
        "question": "Can you show contestants with at least two votes?",
        "query": [
          "select * from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_name having count (*) >= 2",
          "select * from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select t2.contestant_name from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select * from votes group by contestant_number having count (*) >= 2",
          "select t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t2.contestant_number having count (*) >= 2",
          "select t2.contestant_name from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number group by t2.contestant_name having count (*) >= 2"
        ]
      },
      {
        "question": "What are their contestant numbers and names?",
        "query": [
          "select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select distinct t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2",
          "select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count (*) >= 2"
        ]
      }
    ],
    [
      {
        "question": "Show all the contestants.",
        "query": [
          "select * from contestants",
          "select * from contestants",
          "select * from contestants",
          "select distinct contestant_name from contestants",
          "select distinct contestant_number from contestants",
          "select distinct * from contestants",
          "select contestant_name from contestants"
        ]
      },
      {
        "question": "Show all the votes.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes",
          "select distinct contestant_number from votes",
          "select distinct * from votes",
          "select distinct contestants.contestant_number from votes"
        ]
      },
      {
        "question": "Can you show the contestant with the least votes?",
        "query": [
          "select * from contestants order by count (*) asc limit 1",
          "select * from votes order by count (*) asc limit 1",
          "select * from votes order by count (*) asc limit 1",
          "select * from contestants order by count (*) asc limit 1",
          "select * from votes group by contestant_number order by count (*) asc limit 1",
          "select * from votes group by contestant_number order by count (*) asc limit 1",
          "select * from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number order by count (*) asc limit 1",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number order by count (*) asc limit 1",
          "select * from contestants as t1 join votes as t2 group by t1.contestant_number order by count (*) asc limit 1",
          "select * from contestants as t1 join votes as t2 group by t1.contestant_number order by count (*) asc limit 1"
        ]
      },
      {
        "question": "What is his or her contestant number and contestant name?",
        "query": [
          "select contestant_number, contestant_name from contestants order by count (*) asc limit 1",
          "select contestant_number, contestant_name from contestants order by count (*) asc limit 1",
          "select t2.contestant_number, t2.contestant_name from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number order by count (*) asc limit 1",
          "select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number order by count (*) asc limit 1",
          "select distinct t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number order by count (*) asc limit 1",
          "select t2.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number order by count (*) asc limit 1",
          "select distinct contestant_number, contestant_name from contestants order by count (*) asc limit 1",
          "select * from contestants order by count (*) asc limit 1",
          "select contestants.contestant_number, contestants.contestant_name from contestants order by count (*) asc limit 1",
          "select distinct t2.contestant_number, t2.contestant_name from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show all votes.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes",
          "select distinct * from votes",
          "select distinct vote_id from votes"
        ]
      },
      {
        "question": "What about those from state 'NY' or 'CA'?",
        "query": [
          "select * from votes where state = \"NY\" or state = \"CA\"",
          "select * from votes where state = \"NY\" or state = \"CA\"",
          "select * from votes where state = \"NY\" or state = \"CA\"",
          "select distinct * from votes where state = \"NY\" or state = \"CA\"",
          "select distinct state from votes where state = \"NY\" or state = \"CA\"",
          "select * from votes where state = \"CA\" or state = \"NY\"",
          "select * from votes where state = \"NY\"",
          "select * from votes where state = \"NY\"",
          "select * from votes where state = \"NY\" or state = \"CA\"",
          "select * from votes where state = \"NY\" or state = \"Ca\""
        ]
      },
      {
        "question": "Give me the count of these votes.",
        "query": [
          "select count (*) from votes where state = \"NY\" or state = \"CA\"",
          "select count (*) from votes where state = \"NY\" or state = \"CA\"",
          "select distinct count (*) from votes where state = \"NY\" or state = \"CA\"",
          "select count (*) from votes where state = \"NY\" or state = \"CA\""
        ]
      }
    ],
    [
      {
        "question": "Show all contestants",
        "query": [
          "select * from contestants",
          "select * from contestants",
          "select * from contestants",
          "select distinct contestant_name from contestants",
          "select distinct contestant_number from contestants",
          "select contestant_name from contestants",
          "select distinct * from contestants"
        ]
      },
      {
        "question": "Which contestants did not get any votes?",
        "query": [
          "select * from contestants where contestant_number not in (select contestant_number from votes)",
          "select * from contestants where contestant_number not in (select contestant_number from votes)",
          "select * from contestants where contestant_number not in (select contestant_number from votes)",
          "select distinct * from contestants where contestant_number not in (select contestant_number from votes)",
          "select * from contestants where contestant_number not in (select distinct contestant_number from votes)",
          "select * from contestants except select * from contestants as t1 join votes as t2",
          "select * from contestants except select * from contestants as t1 join votes as t2"
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from contestants where contestant_number not in (select contestant_number from votes)",
          "select count (*) from contestants where contestant_number not in (select contestant_number from votes)",
          "select distinct count (*) from contestants where contestant_number not in (select contestant_number from votes)",
          "select count (*) from contestants where contestant_number not in (select contestant_number from votes)"
        ]
      }
    ],
    [
      {
        "question": "Show all area codes and states.",
        "query": [
          "select * from area_code_state",
          "select * from area_code_state",
          "select * from area_code_state",
          "select distinct area_code, state from area_code_state",
          "select distinct * from area_code_state",
          "select distinct state, area_code from area_code_state",
          "select distinct state from area_code_state",
          "select distinct area_code from area_code_state"
        ]
      },
      {
        "question": "Show all votes.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes",
          "select distinct * from votes",
          "select distinct t1.vote_id from votes as t1",
          "select * from area_code_state join votes"
        ]
      },
      {
        "question": "Get the count of votes for each area code.",
        "query": [
          "select count (*) from votes group by state",
          "select count (*) from votes group by state",
          "select count (*) from area_code_state group by area_code",
          "select count (*) from area_code_state group by area_code",
          "select count (*) from area_code_state group by state",
          "select count (*) from area_code_state as t1 join votes as t2 group by t1.area_code",
          "select count (*) from area_code_state as t1 join votes as t2 group by t1.area_code"
        ]
      },
      {
        "question": "What is the area code in which the most voters voted?",
        "query": [
          "select state from votes group by state order by count (*) desc limit 1",
          "select state from votes group by state order by count (*) desc limit 1",
          "select distinct count (*) from votes group by state order by count (*) desc limit 1",
          "select distinct state from votes group by state order by count (*) desc limit 1",
          "select state from votes group by state order by count (*) desc limit 1",
          "select count (*) from votes group by state order by count (*) desc limit 1",
          "select count (*) from votes group by state order by count (*) desc limit 1",
          "select distinct state from votes group by state order by count (*) desc limit 1",
          "select * from votes group by state order by count (*) desc limit 1",
          "select distinct count (*) from votes group by state order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show all votes.",
        "query": [
          "select * from votes",
          "select * from votes",
          "select * from votes",
          "select distinct * from votes",
          "select distinct vote_id from votes"
        ]
      },
      {
        "question": "Show those that were for the contestant named 'Tabatha Gehling'.",
        "query": [
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select distinct * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select * from votes as t1 join contestants as t2 where t2.contestant_name = \"Tabatha Gehling\"",
          "select * from votes as t2 join contestants as t1 on t1.contestant_number = t2.contestant_number where t1.contestant_name = \"Tabatha Gehling\"",
          "select * from votes as t1 join contestants as t2 on t2.contestant_number = t1.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Guthling\"",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Guthling\"",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehlung\""
        ]
      },
      {
        "question": "What are the create dates, states, and phone numbers of these votes?",
        "query": [
          "select t1.created, t1.state, t1.phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select created, state, phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select distinct t1.created, t1.state, t1.phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select created, state, phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select created, state, phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select t1.created, state, phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select t1.created, t1.state, t1.phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Guthling\"",
          "select distinct t1.created, t1.state, t1.phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Guthling\""
        ]
      }
    ],
    [
      {
        "question": "Show all area codes.",
        "query": [
          "select * from area_code_state",
          "select * from area_code_state",
          "select distinct area_code from area_code_state",
          "select * from area_code_state",
          "select distinct * from area_code_state",
          "select distinct state from area_code_state"
        ]
      },
      {
        "question": "Can you tell me area codes in which voters voted for the contestant 'Tabatha Gehling'?",
        "query": [
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\"",
          "select t1.area_code from area_code_state as t1 join votes as t2 on t1.state = t2.state join contestants as t3 on t2.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\"",
          "select t1.area_code from area_code_state as t1 join votes as t2 on t1.state = t2.state join contestants as t3 on t3.contestant_number = t2.contestant_number where t3.contestant_name = \"Tabatha Gehling\"",
          "select t1.area_code from area_code_state as t1 join votes as t2 on t1.state = t2.state where t2.contestant_number = \"Tabatha Gehling\"",
          "select t1.area_code from area_code_state as t1 join votes as t2 on t1.state = t2.state where t2.contestant_number = \"Tabatha Gehling\"",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state where t1.contestant_number = \"Tabatha Gehling\"",
          "select * from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = \"Tabatha Gehling\"",
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state where t1.contestant_number = \"Tabatha Gehling\"",
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Guthling\""
        ]
      },
      {
        "question": "How about both the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'?",
        "query": [
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" intersect select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Kelly Clauss\"",
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" intersect select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Kelly Clauss\"",
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" intersect select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Kelly Clauss\"",
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" or t3.contestant_name = \"Kelly Clauss\"",
          "select distinct t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" intersect select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Kelly Clauss\"",
          "select distinct t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" intersect select distinct t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Kelly Clauss\"",
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" or t3.contestant_name = \"Kelly Clauss\"",
          "select distinct t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" or t3.contestant_name = \"Kelly Clauss\"",
          "select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" intersect select t2.area_code from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"KellyClauss\"",
          "select distinct count (*) from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Tabatha Gehling\" intersect select count (*) from votes as t1 join area_code_state as t2 on t1.state = t2.state join contestants as t3 on t1.contestant_number = t3.contestant_number where t3.contestant_name = \"Kelly Clauss\""
        ]
      }
    ]
  ],
  "student_transcripts_tracking": [
    [
      {
        "question": "Give me the description of the department that offers the most number of degrees.",
        "query": [
          "select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t2.department_description from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t2.department_description from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_description order by count (*) desc limit 1",
          "select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_description order by count (*) desc limit 1",
          "select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_name order by count (*) desc limit 1",
          "select t2.department_description from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select degree_summary_description from degree_programs group by degree_summary_description order by count (*) desc limit 1"
        ]
      },
      {
        "question": "What's the name and id of that department?",
        "query": [
          "select t1.department_name, t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select distinct t1.department_name, t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select department_name, department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t1.department_id, t1.department_name from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t1.department_name, department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t1.department_description, t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select department_name, department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) desc limit 1",
          "select t1.department_name, t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) asc limit 1",
          "select t1.department_name, t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_name order by count (*) desc limit 1",
          "select distinct t1.department_name, t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show me all the degrees offered by the engineering department.",
        "query": [
          "select * from degree_programs where department_id = \"Engineering\"",
          "select * from degree_programs where department_id = \"Engineering\"",
          "select * from degree_programs where department_id = \"ENG\"",
          "select * from degree_programs where department_id = \"ENG\"",
          "select * from degree_programs where department_id = \"Engineering\"",
          "select * from degree_programs where department_id = \"ENGINEERING\"",
          "select * from degree_programs where department_id = \"ENGINEERING\"",
          "select distinct degree_program_id from degree_programs where department_id = \"Engineering\"",
          "select degree_summary_name from degree_programs where department_id = \"Engineering\"",
          "select * from degree_programs where department_id = \"ENG\""
        ]
      },
      {
        "question": "How many are there?",
        "query": [
          "select count (*) from degree_programs where department_id = \"Engineering\"",
          "select count (*) from degree_programs where department_id = \"Engineering\"",
          "select distinct count (*) from degree_programs where department_id = \"Engineering\"",
          "select count (*) from degree_programs where department_id = \"Engineering\"",
          "select count (*) from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id where department_id = \"Engineering\"",
          "select count (*) from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id where department_id = \"Engineering\"",
          "select count (*) from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id where department_name = \"Engineering\"",
          "select distinct count (*) from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id where department_id = \"Engineering\""
        ]
      }
    ],
    [
      {
        "question": "Show me courses that have exactly 2 sections.",
        "query": [
          "select * from courses group by course_id having count (*) = 2",
          "select distinct course_id from sections group by course_id having count (*) = 2",
          "select * from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by course_id having count (*) = 2",
          "select * from courses where course_id in (select course_id from sections group by course_id having count (*) = 2)",
          "select * from courses group by course_id having count (*) = 2",
          "select distinct course_id from sections",
          "select * from courses where course_id in (select course_id from sections group by course_id having count (*) = 2)",
          "select * from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by course_id having count (*) = 2",
          "select course_id from sections group by course_id having count (*) = 2",
          "select distinct course_id from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by course_id having count (*) = 2"
        ]
      },
      {
        "question": "Show me names and ids for courses that have at most 2 sections.",
        "query": [
          "select course_name, course_id from courses group by course_id having count (*) = 2",
          "select course_name, course_id from courses group by course_id having count (*) <= 2",
          "select course_name, course_id from courses group by course_id having count (*) = 2",
          "select distinct course_name, course_id from courses group by course_id having count (*) = 2",
          "select course_name, course_id from courses group by course_id having count (*) = 2",
          "select distinct course_name, course_id from courses group by course_id having count (*) <= 2",
          "select distinct course_id, course_name from courses group by course_id having count (*) = 2",
          "select course_id, course_name from courses group by course_id having count (*) = 2"
        ]
      }
    ],
    [
      {
        "question": "Which semester did the least number of students register? Give me its name and id.",
        "query": [
          "select semester_name, semester_id from semesters group by semester_id order by count (*) asc limit 1",
          "select semester_name, semester_id from semesters group by semester_id order by count (*) asc limit 1",
          "select semester_id, semester_name from semesters group by semester_id order by count (*) asc limit 1",
          "select semester_id, semester_name from semesters group by semester_id order by count (*) asc limit 1",
          "select distinct semester_id from student_enrolment group by semester_id order by count (*) asc limit 1",
          "select semester_name, semester_id from semesters group by semester_id order by count (*) asc limit 1",
          "select semester_name, semester_id from semesters order by count (*) asc limit 1",
          "select semester_name, semester_id from semesters group by semester_id order by count (*) asc asc limit 1"
        ]
      },
      {
        "question": "How about the semester that most number of students registered?",
        "query": [
          "select semester_name, semester_id from semesters group by semester_id order by count (*) desc limit 1",
          "select semester_name, semester_id from semesters group by semester_id order by count (*) desc limit 1",
          "select semester_name, semester_id from semesters group by semester_id order by count (*) desc limit 1",
          "select distinct semester_id from semesters group by semester_id order by count (*) desc limit 1",
          "select distinct semester_name, semester_id from semesters group by semester_id order by count (*) desc limit 1",
          "select distinct count (*) from semesters group by semester_id order by count (*) desc limit 1",
          "select semester_id from semesters group by semester_id order by count (*) desc limit 1",
          "select semester_id from semesters group by semester_id order by count (*) desc limit 1",
          "select distinct count (*), semester_id from semesters group by semester_id order by count (*) desc limit 1",
          "select semester_name, semester_id from semesters group by semester_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show me all department names that contain the word \"computer\"",
        "query": [
          "select department_name from departments where department_name like \"%computer%\"",
          "select department_name from departments where department_name like \"%computer%\"",
          "select distinct department_name from departments where department_name like \"%computer%\"",
          "select department_name from departments where department_name like \"%computer%\"",
          "select distinct department_name from departments where department_name like \"%computer%\"",
          "select department_name from departments where department_name like \"% computer%\"",
          "select * from departments where department_name like \"%computer%\"",
          "select department_name from departments where department_name like \"%Computer%\""
        ]
      },
      {
        "question": "Show me their descriptions.",
        "query": [
          "select department_description from departments where department_name like \"%computer%\"",
          "select department_description from departments where department_name like \"%computer%\"",
          "select distinct department_description from departments where department_name like \"%computer%\"",
          "select department_description from departments where department_name like \"%computer%\"",
          "select department_name, department_description from departments where department_name like \"%computer%\"",
          "select distinct department_name, department_description from departments where department_name like \"%computer%\"",
          "select distinct department_description from departments where department_name like \"%computer%\"",
          "select distinct department_description from departments where department_name like \"%computer%\"",
          "select department_name, department_description from departments where department_name like \"% computer%\"",
          "select department_name, department_description from departments where department_name like \"%Computer%\""
        ]
      }
    ],
    [
      {
        "question": "How many people are enrolled in 2 degree programs in one semester?",
        "query": [
          "select count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.semester_id having count (*) = 2",
          "select count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.semester_id having count (*) = 2",
          "select count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.semester_id having count (*) = 2",
          "select count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by semester_id having count (*) = 2",
          "select count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.semester_id having count (*) = 1",
          "select count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.semester_id having count (*) = 1",
          "select count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by semester_id having count (*) = 2",
          "select distinct count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.semester_id having count (*) = 2",
          "select count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t1.semester_id = 1",
          "select count (*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t2.semester_id having count (*) = 2"
        ]
      },
      {
        "question": "Show me their first, middle, and last names.",
        "query": [
          "select t1.first_name, t1.middle_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id having count (*) = 2",
          "select t1.first_name, t1.middle_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id having count (*) = 2",
          "select t1.first_name, t1.middle_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t2.semester_id having count (*) = 2"
        ]
      }
    ],
    [
      {
        "question": "How many people are enrolled in the Bachelor degree program?",
        "query": [
          "select distinct count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor\"",
          "select distinct count (*) from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id where t1.degree_summary_name = \"Bachelor\"",
          "select distinct t1.student_id from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor\"",
          "select distinct count (*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id where t2.degree_program_id = \"Bachelor\"",
          "select distinct count (*) from student_enrolment where degree_program_id = \"Bachelor\"",
          "select distinct count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor degree\"",
          "select distinct count (student_enrolment_id) from student_enrolment where degree_program_id = \"Bachelor\"",
          "select distinct count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor Degree\"",
          "select distinct count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelors\"",
          "select distinct t1.student_id from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor degree\""
        ]
      },
      {
        "question": "What are their first, middle, and last names?",
        "query": [
          "select from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor\"",
          "select distinct t1.student_id from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor\"",
          "select from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor\" group by t1.student_id order by t1.student_id",
          "select from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id where t2.degree_summary_name = \"Bachelor\" group by t1.student_id"
        ]
      }
    ],
    [
      {
        "question": "Show me the descriptions of programs with 3 highest number of enrolled students.",
        "query": [
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 3",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name order by count (*) desc limit 3",
          "select t2.degree_summary_description from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 3",
          "select distinct degree_program_id from student_enrolment group by degree_program_id order by count (*) desc limit 3",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t2.degree_program_id order by count (*) desc limit 3",
          "select distinct t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_description order by count (*) desc limit 3"
        ]
      },
      {
        "question": "Show me the name of program with the most enrolled students.",
        "query": [
          "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct count (*) from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) asc limit 1",
          "select distinct t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What is the description of the program that has the least number of enrolled students?",
        "query": [
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) asc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) asc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name order by count (*) asc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name order by count (*) asc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_description order by count (*) asc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_description order by count (*) asc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) asc limit 1",
          "select t2.degree_summary_description from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) asc limit 1",
          "select t2.degree_summary_description from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) asc limit 1",
          "select degree_program_id from student_enrolment group by degree_program_id order by count (*) asc limit 1"
        ]
      },
      {
        "question": "How about the program that has the most number of enrolled students?",
        "query": [
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct count (*) from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct t1.degree_program_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct count (*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_program_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1"
        ]
      },
      {
        "question": "Show me the id and summary.",
        "query": [
          "select t1.degree_program_id, t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select t1.degree_program_id, t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct t1.degree_program_id, t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select distinct t1.degree_program_id, t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select degree_program_id, degree_summary_name from degree_programs group by degree_program_id order by count (*) desc limit 1",
          "select degree_program_id, degree_summary_name from degree_programs order by count (*) desc limit 1",
          "select degree_program_id, degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) desc limit 1",
          "select degree_program_id, degree_summary_name from degree_programs group by degree_program_id order by count (*) desc limit 1",
          "select degree_program_id, degree_summary_name from degree_programs order by count (*) desc limit 1",
          "select t1.degree_program_id, t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show me the id, first and last names of top 3 students who have enrolled for the most times in any program.",
        "query": [
          "select t1.student_id, t1.first_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 3",
          "select t1.student_id, t1.first_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 3",
          "select t1.student_id, t2.first_name, t2.last_name from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 3",
          "select t1.student_id, t2.first_name, t2.last_name from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 3",
          "select student_id from student_enrolment group by student_id order by count (*) desc limit 3",
          "select t1.student_id, t1.first_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 3",
          "select student_id from student_enrolment group by student_id order by count (*) desc limit 3",
          "select t2.student_id, t2.first_name, t2.last_name from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 3",
          "select t1.student_id, t1.first_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t2.student_id order by count (*) desc limit 3",
          "select t1.student_id, t1.first_name, t1.last_name from students as t1 join student_enrolment as t2 on t2.student_id = t1.student_id group by t1.student_id order by count (*) desc limit 3"
        ]
      },
      {
        "question": "Show me just the top 1.",
        "query": [
          "select * from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 1",
          "select * from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 1",
          "select distinct t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 1",
          "select first_name, last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 1",
          "select t1.first_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 1",
          "select distinct count (*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 1",
          "select distinct t1.first_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) desc limit 1",
          "select * from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) asc limit 1",
          "select distinct count (*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) asc limit 1",
          "select t1.first_name, t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Give me the description of a semester with no enrolled students.",
        "query": [
          "select semester_description from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select distinct semester_description from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select semester_description from semesters where semester_id = (select semester_id from student_enrolment)",
          "select semester_description from semesters where semester_id = \"\"",
          "select semester_description from semesters where semester_id in (select semester_id from student_enrolment)",
          "select semester_description from semesters where semester_id = (select semester_id from student_enrolment)",
          "select semester_description from semesters where semester_id = 1",
          "select semester_description from semesters where semester_id = (select semester_id from student_enrolment)",
          "select semester_description from semesters where semester_id in (select semester_id from student_enrolment)",
          "select semester_description from semesters where semester_id = \"\""
        ]
      },
      {
        "question": "What's the name of that semester?",
        "query": [
          "select semester_name from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select semester_name from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select semester_name from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select distinct semester_name from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select distinct semester_id from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select semester_description from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select semester_id from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select semester_description from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select semester_id from semesters where semester_id not in (select semester_id from student_enrolment)",
          "select semester_name from semesters where semester_id not in (select semester_id from student_enrolment)"
        ]
      }
    ],
    [
      {
        "question": "What's the name of the course with the least number of enrollments?",
        "query": [
          "select distinct t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) asc limit 1",
          "select distinct count (*) from student_enrolment_courses group by course_id order by count (*) asc limit 1",
          "select distinct student_course_id from student_enrolment_courses group by student_course_id order by count (*) asc limit 1",
          "select distinct course_id from student_enrolment_courses group by course_id order by count (*) asc limit 1",
          "select distinct count (*) from student_enrolment_courses as t1 join courses as t2 on t1.course_id = t2.course_id group by t1.course_id order by count (*) asc limit 1",
          "select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) asc limit 1",
          "select distinct t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_id order by count (*) asc limit 1",
          "select distinct count (*) from student_enrolment_courses group by student_course_id order by count (*) asc limit 1",
          "select distinct count (*) from student_enrolment_courses as t1 join courses as t2 on t1.course_id = t2.course_id group by t2.course_id order by count (*) asc limit 1",
          "select distinct count (*) from student_enrolment_courses as t1 join courses as t2 on t2.course_id = t1.course_id group by t1.course_id order by count (*) asc limit 1"
        ]
      },
      {
        "question": "How many enrollments does the course with most enrollments have?",
        "query": [
          "select distinct count (*) from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select count (*) from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select count (*) from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select distinct course_id from student_enrolment_courses group by course_id order by count (*) desc limit 1",
          "select distinct count (*) from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_id order by count (*) desc limit 1",
          "select distinct count (*) from student_enrolment_courses as t1 join courses as t2 on t1.course_id = t2.course_id group by t1.course_id order by count (*) desc limit 1",
          "select distinct count (*) from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) asc limit 1"
        ]
      },
      {
        "question": "What's the name of that course?",
        "query": [
          "select distinct t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select distinct course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select distinct count (*) from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1",
          "select distinct t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) asc limit 1",
          "select distinct t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_id order by count (*) desc limit 1",
          "select distinct t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "How many students currently live in North Carolina?",
        "query": [
          "select count (*) from addresses where state_province_county = \"North Carolina\"",
          "select count (*) from addresses where state_province_county = \"North Carolina\"",
          "select distinct count (*) from addresses where state_province_county = \"North Carolina\"",
          "select count (*) from students where last_name = \"North Carolina\"",
          "select count (*) from students where last_name = \"North Carolina\""
        ]
      },
      {
        "question": "How many of those students have not registered in any degree program?",
        "query": [
          "select count (*) from students where student_id not in (select student_id from student_enrolment)",
          "select count (*) from students where permanent_address_id not in (select student_id from student_enrolment)",
          "select count (*) from students where student_id not in (select student_id from student_enrolment)",
          "select count (*) from students where permanent_address_id not in (select student_id from student_enrolment)",
          "select count (*) from students where permanent_address_id not in (select student_id from student_enrolment)"
        ]
      },
      {
        "question": "What are their last names?",
        "query": [
          "select last_name from students where student_id not in (select student_id from student_enrolment)",
          "select last_name from students where student_id not in (select student_id from student_enrolment)",
          "select last_name from students where student_id not in (select student_id from student_enrolment)",
          "select first_name, last_name from students where student_id not in (select student_id from student_enrolment)",
          "select first_name, last_name from students where student_id not in (select student_id from student_enrolment)",
          "select distinct last_name from students where student_id not in (select student_id from student_enrolment)",
          "select distinct last_name from students where student_id not in (select student_id from student_enrolment)",
          "select t2.last_name from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id where t1.state_province_county = \"North Carolina\"",
          "select distinct t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id"
        ]
      }
    ],
    [
      {
        "question": "Show me date and id of transcripts with exactly 2 course results.",
        "query": [
          "select t1.transcript_date, t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) = 2",
          "select t2.transcript_date, t1.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id having count (*) = 2",
          "select t2.transcript_date, t1.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id having count (*) = 2",
          "select t1.transcript_date, t1.transcript_id from transcripts as t1 join student_enrolment as t2 on t1.transcript_id = t2.student_enrolment_id group by t1.transcript_id having count (*) = 2",
          "select distinct t1.transcript_date, t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) = 2",
          "select t2.transcript_date, t2.transcript_id from student_enrolment_courses as t1 join transcripts as t2 on t1.student_course_id = t2.transcript_id group by t2.transcript_id having count (*) = 2",
          "select t1.transcript_date, t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) = 1"
        ]
      },
      {
        "question": "How about transcripts with at least 2 course results?",
        "query": [
          "select distinct t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) >= 2",
          "select t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) >= 2",
          "select t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) >= 2",
          "select distinct t1.transcript_id from transcript_contents as t1 join student_enrolment_courses as t2 on t1.student_course_id = t2.student_course_id group by t1.transcript_id having count (*) >= 2",
          "select t1.transcript_date, t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) = 2",
          "select distinct t1.transcript_date, t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) = 2",
          "select t1.transcript_date, t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id = t2.student_course_id group by t1.transcript_id having count (*) > 2",
          "select distinct t1.transcript_id from transcript_contents as t1 join student_enrolment_courses as t2 on t1.student_course_id = t2.student_course_id group by t1.transcript_id having count (*) = 2"
        ]
      }
    ],
    [
      {
        "question": "What is the address of the student with first name Timothy and last name Ward?",
        "query": [
          "select permanent_address_id from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select permanent_address_id from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select * from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select * from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select * from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id where t2.first_name = \"Timothy\" and t2.last_name = \"Ward\"",
          "select first_name, last_name from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select first_name, last_name from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select first_name, last_name, permanent_address_id from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select * from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id where t2.first_name = \"Timothy\" and t2.last_name = \"Ward\"",
          "select first_name, last_name, permanent_address_id from students where first_name = \"Timothy\" and last_name = \"Ward\""
        ]
      },
      {
        "question": "What's his phone number?",
        "query": [
          "select cell_mobile_number from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select cell_mobile_number from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select cell_mobile_number from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select cell_mobile_number from students where first_name = \"Timothy\" and last_name = \"Ward\"",
          "select Cell_mobile_number from students where first_name = \"Timothy\" and last_name = \"Ward\""
        ]
      }
    ],
    [
      {
        "question": "Who was the last student to register? Show me the first, middle, and last names of that student.",
        "query": [
          "select first_name, middle_name, last_name from students order by date_first_registered desc limit 1",
          "select first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students order by date_first_registered desc limit 1",
          "select first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students order by date_first_registered desc limit 1",
          "select first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students order by date_first_registered asc limit 1",
          "select first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select last_name, middle_name, first_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students order by date_first_registered asc limit 1"
        ]
      },
      {
        "question": "Who was the first to register?",
        "query": [
          "select distinct first_name from students order by date_first_registered asc limit 1",
          "select distinct student_id from students order by date_first_registered asc limit 1",
          "select first_name, last_name from students order by date_first_registered asc limit 1",
          "select distinct count (*) from students order by date_first_registered asc limit 1",
          "select first_name, last_name from students order by date_first_registered asc limit 1",
          "select distinct from students order by date_first_registered asc limit 1",
          "select * from students order by date_first_registered asc limit 1",
          "select first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select first_name, middle_name, last_name from students order by date_first_registered limit 1",
          "select first_name, middle_name, last_name from students order by date_left asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Who is the least recent graduate of the school? List the first, middle, and last names.",
        "query": [
          "select first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select distinct first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students where date_left = (select min (date_left) from students)",
          "select first_name, middle_name, last_name from students where date_left = (select min (date_left) from students)",
          "select first_name, middle_name, last_name from students where date_left = (select max (date_left) from students)"
        ]
      },
      {
        "question": "Who is the earliest graduate of the school?",
        "query": [
          "select first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select distinct first_name, middle_name, last_name from students order by date_left asc limit 1",
          "select first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select distinct student_id from students order by date_left asc limit 1",
          "select first_name, last_name from students order by date_left asc limit 1",
          "select first_name, middle_name, last_name from students order by date_left desc limit 1",
          "select first_name, middle_name, last_name from students order by date_left limit 1",
          "select distinct first_name, last_name from students order by date_left asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Give me the id of the address that holds the most number of students?",
        "query": [
          "select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1",
          "select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1",
          "select t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id group by t1.address_id order by count (*) desc limit 1",
          "select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1",
          "select distinct t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id group by t1.address_id order by count (*) desc limit 1",
          "select distinct count (*) from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id group by t1.address_id order by count (*) desc limit 1",
          "select distinct count (*) from students as t1 join addresses as t2 on t1.permanent_address_id = t2.address_id group by t1.permanent_address_id order by count (*) desc limit 1",
          "select distinct student_id from students group by student_id order by count (*) desc limit 1",
          "select distinct count (*) from students as t1 join addresses as t2 on t1.permanent_address_id = t2.address_id group by t2.address_id order by count (*) desc limit 1",
          "select permanent_address_id from students group by permanent_address_id order by count (*) asc limit 1"
        ]
      },
      {
        "question": "How many students live there?",
        "query": [
          "select count (*) from students where permanent_address_id = (select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1)",
          "select count (*) from students where permanent_address_id = (select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1)",
          "select count (*) from students where permanent_address_id in (select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1)",
          "select distinct count (*) from students where permanent_address_id = (select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1)",
          "select count (*) from students where permanent_address_id in (select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1)",
          "select count (*) from students where permanent_address_id = (select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1)",
          "select count (*) from students where permanent_address_id in (select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1)",
          "select count (*) from students group by permanent_address_id order by count (*) desc limit 1",
          "select distinct count (*) from students where permanent_address_id in (select permanent_address_id from students group by permanent_address_id order by count (*) desc limit 1)",
          "select count (*) from students where permanent_address_id = (select permanent_address_id from students group by permanent_address_id order by count (*) asc limit 1)"
        ]
      },
      {
        "question": "Give me all the lines as well as the id of that address.",
        "query": [
          "select t1.line_1, t1.line_2, t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id group by t1.address_id order by count (*) desc limit 1",
          "select t1.line_1, t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id group by t1.address_id order by count (*) desc limit 1",
          "select t1.line_1, t1.line_2, t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id group by t1.address_id order by count (*) desc limit 1",
          "select t1.line_1, t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id group by t1.address_id order by count (*) desc limit 1",
          "select t1.line_1, t1.line_2, t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id group by t2.permanent_address_id order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Give me details of the first transcript released.",
        "query": [
          "select other_details from transcripts order by transcript_date asc limit 1",
          "select * from transcripts order by transcript_date asc limit 1",
          "select other_details from transcripts order by transcript_date asc limit 1",
          "select * from transcripts order by transcript_date asc limit 1",
          "select transcript_date, other_details from transcripts order by transcript_date asc limit 1",
          "select other_details from transcripts order by transcript_date desc limit 1",
          "select * from transcripts order by transcript_date desc limit 1",
          "select other_details from transcripts order by transcript_date asc limit 1",
          "select distinct transcript_date from transcripts order by transcript_date asc limit 1",
          "select t1.other_details from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id order by t1.transcript_date asc limit 1"
        ]
      },
      {
        "question": "Tell me when it was released as well, along with its details.",
        "query": [
          "select transcript_date, other_details from transcripts order by transcript_date asc limit 1",
          "select transcript_date, other_details from transcripts order by transcript_date asc limit 1",
          "select other_details, transcript_date from transcripts order by transcript_date asc limit 1",
          "select other_details, transcript_date from transcripts order by transcript_date asc limit 1",
          "select t1.transcript_date, t1.other_details from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id order by t1.transcript_date asc limit 1",
          "select t1.transcript_date, t1.other_details from transcripts as t1 order by t1.transcript_date asc limit 1",
          "select other_details from transcripts order by transcript_date asc limit 1",
          "select t1.transcript_date, t1.other_details from transcripts as t1 order by t1.transcript_date asc limit 1",
          "select transcript_date, other_details from transcripts order by transcript_date asc limit 1",
          "select other_details from transcripts order by transcript_date asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "What is the oldest transcript release date?",
        "query": [
          "select transcript_date from transcripts order by transcript_date asc limit 1",
          "select transcript_date from transcripts order by transcript_date asc limit 1",
          "select transcript_date from transcripts order by transcript_date desc limit 1",
          "select transcript_date from transcripts order by transcript_date desc limit 1",
          "select transcript_date from transcripts order by transcript_date asc limit 1",
          "select distinct transcript_date from transcripts order by transcript_date asc limit 1",
          "select max (transcript_date) from transcripts",
          "select max (transcript_date) from transcripts",
          "select distinct max (transcript_date) from transcripts",
          "select distinct transcript_date from transcripts order by transcript_date desc limit 1"
        ]
      },
      {
        "question": "How about the latest?",
        "query": [
          "select transcript_date from transcripts order by transcript_date desc limit 1",
          "select transcript_date from transcripts order by transcript_date desc limit 1",
          "select transcript_date from transcripts order by transcript_date desc limit 1",
          "select distinct transcript_date from transcripts order by transcript_date desc limit 1",
          "select transcript_date from transcripts order by transcript_date asc limit 1",
          "select distinct max (transcript_date) from transcripts",
          "select transcript_date from transcripts order by transcript_date asc limit 1",
          "select distinct transcript_date from transcripts order by transcript_date desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "How many times, at minimum, can a course enrollment result show in different transcript? Show me the course enrollment id.",
        "query": [
          "select student_course_id from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select student_course_id from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select count (*) from student_enrolment_courses group by student_course_id order by count (*) asc limit 1",
          "select count (*) from student_enrolment_courses group by student_enrolment_id order by count (*) asc limit 1",
          "select student_course_id from student_enrolment_courses group by student_course_id order by count (*) asc limit 1",
          "select count (*) from student_enrolment_courses group by student_course_id order by count (*) asc limit 1",
          "select student_course_id from student_enrolment_courses group by student_course_id order by count (*) asc limit 1",
          "select course_id from student_enrolment_courses group by course_id order by count (*) asc limit 1",
          "select count (*) from student_enrolment_courses group by student_enrolment_id order by count (*) asc limit 1",
          "select student_enrolment_id from student_enrolment_courses group by student_enrolment_id order by count (*) asc limit 1"
        ]
      },
      {
        "question": "How many times at most?",
        "query": [
          "select count (*) from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select count (*) from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select student_course_id from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select student_course_id from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select distinct count (*) from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select count (*) from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select student_course_id from transcript_contents group by student_course_id order by count (*) asc limit 1",
          "select count (*) from transcript_contents group by student_course_id order by count (*) desc limit 1",
          "select count (*) from transcript_contents group by student_course_id order by count (*) desc limit 1",
          "select student_course_id from transcript_contents group by student_course_id order by count (*) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show other details of the transcript with least number of results.",
        "query": [
          "select t2.other_details from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select t2.other_details from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select other_details from transcripts group by other_details order by count (*) asc limit 1",
          "select other_details from transcripts group by other_details order by count (*) asc limit 1",
          "select t2.other_details from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t2.transcript_id order by count (*) asc limit 1",
          "select t2.other_details from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t2.other_details order by count (*) asc limit 1"
        ]
      },
      {
        "question": "Show me the date and id of that transcript.",
        "query": [
          "select t2.transcript_date, t2.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select t2.transcript_date, t2.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select t2.transcript_date, t1.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select t2.transcript_date, t1.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select distinct t2.transcript_date, t2.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select t2.transcript_date, t2.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select transcript_date, transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1",
          "select t2.transcript_date, t1.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count (*) asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Find a semester when there was a Master student enrolled.",
        "query": [
          "select semester_id from student_enrolment where degree_program_id = \"Master\"",
          "select semester_id from student_enrolment where degree_program_id = \"Master\"",
          "select semester_id from student_enrolment where degree_program_id = \"Master\"",
          "select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id where t2.degree_program_id = \"Master\"",
          "select distinct semester_id from student_enrolment where degree_program_id = \"Master\"",
          "select semester_id from student_enrolment where student_id = (select student_id from students where first_name = \"Master\")",
          "select t2.semester_name from student_enrolment as t1 join semesters as t2 on t1.semester_id = t2.semester_id where t1.degree_program_id = \"Master\"",
          "select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id where t2.student_id = 1",
          "select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id where t2.student_id = \"Master\"",
          "select t2.semester_name from student_enrolment as t1 join semesters as t2 on t1.semester_id = t2.semester_id where t1.student_id = \"Master\""
        ]
      },
      {
        "question": "How about a semester when there was a Bachelor student enrolled?",
        "query": [
          "select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select distinct semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select distinct count (*) from student_enrolment where degree_program_id = \"Bachelor\"",
          "select distinct (semester_id) from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment where degree_program_id = \"Bachelors\"",
          "select semester_id from student_enrolment where degree_program_id = \"Bachelors\"",
          "select distinct student_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment where degree_program_id = \"Bachelor\""
        ]
      },
      {
        "question": "Find a semester that both types of students were enrolled in.",
        "query": [
          "select semester_id from student_enrolment where degree_program_id = \"Master\" intersect select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment where degree_program_id = \"Master\" intersect select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select distinct semester_id from student_enrolment where degree_program_id = \"Master\" intersect select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment where degree_program_id = \"Master\" intersect select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment where degree_program_id = \"Bachelor\" intersect select semester_id from student_enrolment where degree_program_id = \"Master\"",
          "select semester_id from student_enrolment where degree_program_id = \"Bachelor\" intersect select semester_id from student_enrolment where degree_program_id = \"Master\"",
          "select semester_id from student_enrolment where degree_program_id = \"Master\" union select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment group by semester_id having count (*) = 2",
          "select semester_id from student_enrolment where degree_program_id = \"Master\" union select semester_id from student_enrolment where degree_program_id = \"Bachelor\"",
          "select semester_id from student_enrolment where degree_program_id = \"Master\" or degree_program_id = \"Bachelor\""
        ]
      }
    ]
  ],
  "dog_kennels": [
    [
      {
        "question": "List all the information about the owners.",
        "query": [
          "select * from owners",
          "select * from owners",
          "select * from owners",
          "select distinct * from owners"
        ]
      },
      {
        "question": "What about the Professionals?",
        "query": [
          "select * from professionals",
          "select * from professionals",
          "select * from professionals",
          "select distinct * from professionals",
          "select first_name, last_name from professionals",
          "select * from professionals where role_code = \"Owner\"",
          "select first_name, last_name, email_address from professionals",
          "select first_name, last_name, email_address, home_phone from professionals"
        ]
      },
      {
        "question": "Now show the states of them.",
        "query": [
          "select state from professionals",
          "select state from professionals",
          "select state from professionals",
          "select first_name, state from professionals"
        ]
      },
      {
        "question": "Which of them have both owners and professionals living there?",
        "query": [
          "select state from owners intersect select state from professionals",
          "select state from owners intersect select state from professionals",
          "select distinct state from owners as t1 join professionals as t2 on t1.state = t2.state",
          "select state from owners join professionals on owners.owner_id = professionals.professional_id",
          "select state from professionals where state in (select state from owners)",
          "select state from professionals where state in (select state from owners)",
          "select state from owners as t1 join professionals as t2 on t1.state = t2.state",
          "select state from owners join professionals on owners.owner_id = professional_id",
          "select * from owners as t1 join professionals as t2 on t1.state = t2.state",
          "select state from professionals where state in (select state from owners where state in (select state from professionals))"
        ]
      }
    ],
    [
      {
        "question": "Show all the dog ages.",
        "query": [
          "select age from dogs",
          "select age from dogs",
          "select distinct age from dogs",
          "select age from dogs",
          "select distinct age from dogs",
          "select distinct age from dogs"
        ]
      },
      {
        "question": "What is the maximum and minimum value?",
        "query": [
          "select max (age), min (age) from dogs",
          "select distinct max (age), min (age) from dogs",
          "select max (age), max (age) from dogs",
          "select min (age), max (age) from dogs",
          "select max (age), min (age) from dogs",
          "select max (age), min (age) from dogs",
          "select max (age) from dogs",
          "select distinct max (age), max (age) from dogs",
          "select max (age) from dogs",
          "select max (age),min (age) from dogs"
        ]
      },
      {
        "question": "Which of the dogs have gone through treatments?",
        "query": [
          "select * from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select * from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select t1.name from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select distinct t1.name from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select t1.name from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select * from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id",
          "select distinct t2.name from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id",
          "select t2.name from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id",
          "select * from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select distinct t1.name from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id"
        ]
      },
      {
        "question": "What about the average age of them?",
        "query": [
          "select avg (age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select avg (age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select avg (t1.age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select avg (t1.age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select avg (age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select avg (t1.age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select distinct t1.age from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t1.age",
          "select distinct avg (t1.age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select distinct t1.age from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t1.dog_id",
          "select distinct avg (age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id"
        ]
      }
    ],
    [
      {
        "question": "List all the professionals who are Employees.",
        "query": [
          "select * from professionals where role_code = \"Employee\"",
          "select * from professionals where role_code = \"Employee\"",
          "select * from professionals where role_code = \"Employees\"",
          "select * from professionals where role_code = \"Employee\"",
          "select * from professionals where role_code = \"Employees\"",
          "select * from professionals where role_code = \"Employees\"",
          "select * from professionals where role_code = \"Employer\"",
          "select distinct * from professionals where role_code = \"Employee\"",
          "select * from professionals where role_code = \"Employer\"",
          "select distinct professional_id from professionals where role_code = \"Employee\""
        ]
      },
      {
        "question": "How many of them live in Connecticut?",
        "query": [
          "select count (*) from professionals where state = \"Connecticut\"",
          "select count (*) from professionals where state = \"Connecticut\"",
          "select distinct count (*) from professionals where state = \"Connecticut\"",
          "select count (*) from professionals where state = \"Connecticut\"",
          "select count (*) from professionals where state = \"CT\"",
          "select count (*) from professionals where state = \"CT\"",
          "select count (*) from professionals where state = \"Connecticut\"",
          "select count (*) from professionals where city = \"Connecticut\"",
          "select count (*) from professionals where city = \"Connecticut\"",
          "select distinct count (*) from professionals where state = \"CT\""
        ]
      },
      {
        "question": "What about in Indiana?",
        "query": [
          "select count (*) from professionals where state = \"Indiana\"",
          "select count (*) from professionals where state = \"Indiana\"",
          "select distinct count (*) from professionals where state = \"Indiana\"",
          "select count (*) from professionals where state = \"Indiana\"",
          "select * from professionals where state = \"Indiana\"",
          "select * from professionals where state = \"Indiana\"",
          "select distinct count (*) from owners where state = \"Indiana\""
        ]
      },
      {
        "question": "Among all the professionals, which have done treatment only 1 treatments?",
        "query": [
          "select * from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select * from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select count (*) from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select * from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select count (*) from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select * from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select distinct count (*) from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select * from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1"
        ]
      },
      {
        "question": "List the id, last name and cell phone of the professionals who live in the state of Indiana or have done treatment on more than 2 treatments?",
        "query": [
          "select professional_id, last_name, cell_number from professionals where state = \"Indiana\" or count (*) > 2",
          "select professional_id, last_name, cell_number from professionals where state = \"Indiana\" or count (*) > 2",
          "select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id where state = \"Indiana\" group by t1.professional_id having count (*) > 2",
          "select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1 or count (*) > 2",
          "select professional_id, last_name, cell_number from professionals where state = \"Indiana\" group by professional_id having count (*) > 2",
          "select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id where state = \"Indiana\" group by t1.professional_id having count (*) > 2",
          "select professional_id, last_name, cell_number from professionals where state = \"Indiana\" group by professional_id having count (*) > 2",
          "select professional_id, last_name, cell_number from professionals where state = \"Indiana\" or count (*) > 2",
          "select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) > 2 or state = \"Indiana\"",
          "select distinct t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id where state = \"Indiana\" group by t1.professional_id having count (*) > 2"
        ]
      }
    ],
    [
      {
        "question": "Show the dog name and total cost of each dog.",
        "query": [
          "select distinct dog_id, sum (cost_of_treatment) from treatments group by dog_id",
          "select from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t1.name",
          "select sum (cost_of_treatment), name from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by name",
          "select distinct dog_id, sum (cost_of_treatment) from treatments",
          "select distinct t1.name, sum (t2.cost_of_treatment) from dogs as t1 join treatments as t2 group by t1.name",
          "select distinct name, sum (cost_of_treatment) from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id",
          "select distinct count (*), sum (cost_of_treatment) from treatments group by dog_id"
        ]
      },
      {
        "question": "Which of them cost over 500?",
        "query": [
          "select distinct dog_id from treatments where cost_of_treatment > 500",
          "select distinct dog_id from treatments group by dog_id having sum (cost_of_treatment) > 500",
          "select distinct dog_id, sum (cost_of_treatment) from treatments where cost_of_treatment > 500",
          "select distinct sum (cost_of_treatment) from treatments where cost_of_treatment > 500",
          "select distinct cost_of_treatment from treatments where cost_of_treatment > 500",
          "select distinct cost_of_treatment from treatments group by dog_id having sum (cost_of_treatment) > 500",
          "select distinct (dog_id) from treatments where cost_of_treatment > 500",
          "select distinct count (*) from treatments where cost_of_treatment > 500",
          "select distinct dog_id from treatments where sum (cost_of_treatment) > 500",
          "select distinct dog_id from treatments group by dog_id having sum (cost_of_treatment) > 499"
        ]
      },
      {
        "question": "What about more than 1000?",
        "query": [
          "select distinct dog_id from treatments where cost_of_treatment > 1000",
          "select distinct dog_id from treatments where cost_of_treatment > 500",
          "select distinct (dog_id) from treatments where cost_of_treatment > 1000",
          "select distinct cost_of_treatment from treatments where cost_of_treatment > 1000",
          "select distinct dog_id from treatments where cost_of_treatment > 1500",
          "select distinct dog_id from treatments where cost_of_treatment > 1000",
          "select distinct dog_id from treatments where cost_of_treatment > 1001",
          "select distinct dog_id from treatments where cost_of_treatment > 501",
          "select distinct count (*) from treatments where cost_of_treatment > 1000",
          "select distinct dog_id from treatments where cost_of_treatment > 2000"
        ]
      }
    ],
    [
      {
        "question": "List all the names of both Professionals and Owners.",
        "query": [
          "select first_name, last_name from professionals",
          "select first_name, last_name from professionals",
          "select first_name, last_name from professionals union select first_name, last_name from owners",
          "select first_name, last_name from professionals union select first_name, last_name from owners",
          "select first_name, last_name from professionals join owners on professional_id = owner_id",
          "select first_name, last_name from professionals join owners on professional_id = owner_id",
          "select first_name, last_name from professionals intersect select first_name, last_name from owners",
          "select first_name, last_name from professionals join owners on professionals.professional_id = owners.owner_id",
          "select first_name, last_name from professionals intersect select first_name, last_name from owners",
          "select first_name, last_name from professionals"
        ]
      },
      {
        "question": "What about the dog names?",
        "query": [
          "select name from dogs",
          "select name from dogs",
          "select distinct name from dogs",
          "select name from dogs",
          "select distinct name from dogs",
          "select distinct t1.name from dogs as t1",
          "select t1.name from dogs as t1"
        ]
      },
      {
        "question": "Which human names are not used as dog names.",
        "query": [
          "select first_name, last_name from owners except select name from dogs",
          "select first_name, last_name from owners except select name from dogs",
          "select distinct first_name, last_name from owners",
          "select first_name, last_name from owners",
          "select first_name, last_name from owners where first_name not in (select name from dogs)",
          "select first_name, last_name from owners"
        ]
      }
    ],
    [
      {
        "question": "Show the professional first names and the corresponding treatment type codes for the treatment.",
        "query": [
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t2.first_name, t1.treatment_type_code from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t2.first_name, t1.treatment_type_code from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select distinct t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select distinct t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id",
          "select t2.first_name, t1.treatment_type_code from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id"
        ]
      },
      {
        "question": "What about each professional's id, role, email and the treatment type code?",
        "query": [
          "select t1.professional_id, t1.role_code, t1.email_address, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.professional_id, t1.role_code, t1.email_address, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.professional_id, t1.first_name, t1.last_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.professional_id, t1.role_code, t1.email_address, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select distinct t1.professional_id, t1.role_code, t1.email_address, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select professional_id, role_code, email_address, treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.professional_id, t1.role_code, t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.professional_id, t1.first_name, t1.last_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.professional_id, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t1.professional_id, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id"
        ]
      },
      {
        "question": "Which professional did not provide any treatment? Keep the id, role and email.",
        "query": [
          "select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select professional_id, role_code, email_address from professionals where professional_id not in (select t1.professional_id from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id)",
          "select professional_id, role_code, email_address from professionals where professional_id not in (select t1.professional_id from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id)",
          "select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select professional_id, role_code, email_address from professionals where professional_id not in (select t1.professional_id from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id)",
          "select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select distinct t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select professional_id, role_code, email_address from professionals where professional_id not in (select professional_id from treatments)"
        ]
      }
    ],
    [
      {
        "question": "Show the number of dogs for each owner, keep the owner id.",
        "query": [
          "select count (*) from dogs group by owner_id",
          "select count (*) from dogs group by owner_id",
          "select count (*), owner_id from dogs group by owner_id",
          "select count (*), owner_id from dogs",
          "select count (*), owner_id from dogs",
          "select count (*) from dogs group by owner_id",
          "select count (*) from dogs",
          "select count (*) from dogs",
          "select distinct count (*), owner_id from dogs",
          "select distinct count (*) from dogs group by owner_id"
        ]
      },
      {
        "question": "Which one has 2 dogs?",
        "query": [
          "select * from dogs group by owner_id having count (*) = 2",
          "select * from dogs group by owner_id having count (*) = 2",
          "select * from dogs where owner_id in (select owner_id from dogs group by owner_id having count (*) = 2)",
          "select * from dogs where owner_id in (select owner_id from dogs group by owner_id having count (*) = 2)",
          "select * from dogs where count (*) = 2",
          "select * from dogs group by owner_id having count (*) = 2",
          "select distinct count (*) from dogs group by owner_id having count (*) = 2",
          "select count (*) from dogs group by owner_id having count (*) = 2",
          "select * from owners as t1 join dogs as t2 group by t1.owner_id having count (*) = 2",
          "select count (*) from dogs group by owner_id having count (*) = 2"
        ]
      },
      {
        "question": "What about the one with the most dogs?",
        "query": [
          "select * from dogs group by owner_id order by count (*) desc limit 1",
          "select * from dogs group by owner_id order by count (*) desc limit 1",
          "select distinct count (*) from dogs group by owner_id order by count (*) desc limit 1",
          "select * from dogs group by owner_id order by count (*) desc limit 1",
          "select distinct owner_id from dogs group by owner_id order by count (*) desc limit 1",
          "select distinct * from dogs group by owner_id order by count (*) desc limit 1",
          "select * from dogs group by owner_id order by count (*) asc limit 1",
          "select distinct from dogs group by owner_id order by count (*) desc limit 1",
          "select distinct count (*) from dogs group by owner_id order by count (*) asc limit 1",
          "select * from dogs group by owner_id order by count (*) desc 1"
        ]
      }
    ],
    [
      {
        "question": "How many treatment does each professional finished?",
        "query": [
          "select professional_id, count (*) from treatments group by professional_id",
          "select count (*) from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t2.professional_id",
          "select professional_id, count (*) from treatments group by professional_id",
          "select count (*) from treatments group by professional_id",
          "select count (*) from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id",
          "select distinct count (*) from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t2.professional_id",
          "select distinct professional_id, count (*) from treatments group by professional_id",
          "select count (*) from treatments group by professional_id",
          "select distinct count (*) from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id",
          "select professional_id, count (*) from treatments group by professional_id"
        ]
      },
      {
        "question": "Show the first name of the professionals who did only 1 treatment.",
        "query": [
          "select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select t1.first_name from professionals as t1 join treatments as t2 group by t1.professional_id having count (*) = 1",
          "select distinct t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t2.first_name having count (*) = 1",
          "select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t2.professional_id having count (*) = 1",
          "select first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select t1.first_name from professionals as t1 join treatments as t2 group by t1.professional_id having count (*) = 1",
          "select first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select distinct t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t2.first_name having count (*) = 1"
        ]
      },
      {
        "question": "What about at least two treatments?",
        "query": [
          "select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select distinct t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select distinct count (*) from treatments group by professional_id having count (*) >= 2",
          "select distinct count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select distinct count (*) from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 2",
          "select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.Professional_id group by t1.professional_id having count (*) >= 2"
        ]
      },
      {
        "question": "Show the id, role, and first name of each from the above.",
        "query": [
          "select t1.professional_id, t1.role_code, t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.professional_id, t1.role_code, t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.professional_id, t1.first_name, t1.role_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.professional_id, t1.first_name, t1.role_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.first_name, t1.professional_id, t1.role_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.first_name, t1.role_code, t1.professional_id from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.first_name, t1.role_code, t1.professional_id from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select distinct t1.professional_id, t1.role_code, t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.first_name, t1.professional_id, t1.role_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2"
        ]
      }
    ],
    [
      {
        "question": "How many dogs for each breed code?",
        "query": [
          "select breed_code, count (*) from dogs group by breed_code",
          "select breed_code, count (*) from dogs group by breed_code",
          "select distinct breed_code, count (*) from dogs group by breed_code",
          "select count (*) from dogs group by breed_code",
          "select breed_code, count (*) from dogs group by breed_code",
          "select count (*) from dogs group by breed_code",
          "select count (*), breed_code from dogs group by breed_code",
          "select count (*), breed_code from dogs group by breed_code",
          "select distinct breed_code from dogs group by breed_code",
          "select distinct breed_code from dogs"
        ]
      },
      {
        "question": "Which breed codes are the most popular two?",
        "query": [
          "select breed_code from dogs group by breed_code order by count (*) desc limit 2",
          "select breed_code from dogs group by breed_code order by count (*) desc limit 2",
          "select distinct breed_code from dogs group by breed_code order by count (*) desc limit 2",
          "select breed_code from dogs group by breed_code order by count (*) desc limit 2",
          "select distinct count (*) from dogs group by breed_code order by count (*) desc limit 2",
          "select distinct breed_code from dogs group by breed_code order by count (*) desc limit 2",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 2",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 2",
          "select distinct breed_code from dogs group by breed_code order by count (*) asc limit 2",
          "select breed_code from dogs group by breed_code order by count (*) desc limit2"
        ]
      },
      {
        "question": "What about the most common 1?",
        "query": [
          "select breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select distinct count (*) from dogs group by breed_code order by count (*) desc limit 1",
          "select distinct breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select distinct count (*) from dogs group by breed_code order by count (*) asc limit 1",
          "select distinct breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 1"
        ]
      },
      {
        "question": "What name is the breed?",
        "query": [
          "select breed_name from breeds order by count (*) desc limit 1",
          "select breed_name from breeds where breed_code = (select breed_code from dogs group by breed_code order by count (*) desc limit 1)",
          "select breed_name from breeds order by count (*) desc limit 1",
          "select name from dogs group by breed_code order by count (*) desc limit 1",
          "select breed_name from breeds where breed_code in (select breed_code from dogs group by breed_code order by count (*) desc limit 1)",
          "select breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select name from dogs group by breed_code order by count (*) desc limit 1",
          "select distinct breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select name from dogs where breed_code = (select breed_code from dogs group by breed_code order by count (*) desc limit 1)",
          "select breed_name from breeds where breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)"
        ]
      }
    ],
    [
      {
        "question": "Show the dog name and total cost of each dog.",
        "query": [
          "select distinct dog_id, sum (cost_of_treatment) from treatments group by dog_id",
          "select from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t1.name",
          "select sum (cost_of_treatment), name from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by name",
          "select distinct dog_id, sum (cost_of_treatment) from treatments",
          "select distinct t1.name, sum (t2.cost_of_treatment) from dogs as t1 join treatments as t2 group by t1.name",
          "select distinct name, sum (cost_of_treatment) from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id",
          "select distinct count (*), sum (cost_of_treatment) from treatments group by dog_id"
        ]
      },
      {
        "question": "What are the owner names and the cost from their dogs.",
        "query": [
          "select distinct t2.name, sum (t1.cost_of_treatment) from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t2.name",
          "select distinct t1.name, sum (t2.cost_of_treatment) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t1.name",
          "select distinct t1.name, sum (t2.cost_of_treatment) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t1.owner_id",
          "select distinct t1.first_name, t1.last_name, sum (t2.cost_of_treatment) from owners as t1 join treatments as t2 on t1.owner_id = t2.dog_id group by t1.owner_id",
          "select distinct t2.name, sum (t1.cost_of_treatment) from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t1.dog_id"
        ]
      },
      {
        "question": "Who has paid for the most treatments on the dogs? Keep owner IDs and last names.",
        "query": [
          "select distinct t2.name, t1.cost_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t2.name order by sum (t1.cost_of_treatment) desc limit 1",
          "select distinct t2.name, t1.cost_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t2.name order by count (*) desc limit 1",
          "select distinct t2.name, t1.cost_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t2.name order by sum (cost_of_treatment) desc limit 1",
          "select distinct t1.cost_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t2.name order by sum (t1.cost_of_treatment) desc limit 1",
          "select distinct t1.cost_of_treatment, t2.name from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t2.name order by sum (t1.cost_of_treatment) desc limit 1",
          "select distinct t2.name, t1.cost_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t1.dog_id order by sum (t1.cost_of_treatment) desc limit 1",
          "select distinct t2.name, t1.cost_of_treatment, t1.dog_id from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t1.dog_id order by count (*) desc limit 1",
          "select distinct t2.name, t1.cost_of_treatment, t2.owner_id from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t2.owner_id order by count (*) desc limit 1",
          "select distinct t2.name, t1.cost_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t2.name order by sum (t1.cost_of_treatment) desc desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "List the treatment type code and the description.",
        "query": [
          "select distinct treatment_type_code, treatment_type_description from treatment_types",
          "select treatment_type_code, treatment_type_description from treatment_types",
          "select distinct treatment_type_code from treatments group by treatment_type_code",
          "select *select treatment_type_code, treatment_type_description from treatment_types",
          "select distinct treatment_type_code from treatments",
          "select *select treatment_type_code, treatment_type_description from treatments",
          "select group by treatment_type_code, treatment_type_description from treatments",
          "select from treatment_types group by treatment_type_code",
          "select group by treatment_type_code, treatment_type_description from treatments group by treatment_type_code"
        ]
      },
      {
        "question": "For each treatment type, calculate the sum of costs, and order them in descending order.",
        "query": [
          "select distinct treatment_type_code, sum (cost_of_treatment) from treatments group by treatment_type_code order by sum (cost_of_treatment) desc",
          "select distinct sum (cost_of_treatment) from treatments group by treatment_type_code order by sum (cost_of_treatment) desc",
          "select distinct sum (cost_of_treatment), treatment_type_code from treatments group by treatment_type_code order by sum (cost_of_treatment) desc",
          "select distinct treatment_type_code, sum (cost_of_treatment) from treatments group by treatment_type_code order by sum (cost_of_treatment) asc",
          "select distinct sum (cost_of_treatment) from treatments group by treatment_type_code order by sum (cost_of_treatment) asc"
        ]
      },
      {
        "question": "Show the treatment type description also.",
        "query": [
          "select distinct treatment_type_code, treatment_type_description, sum (cost_of_treatment) from treatments group by treatment_type_code order by sum (cost_of_treatment) desc"
        ]
      },
      {
        "question": "So what is the description of the treatment type that costs the least money in total?",
        "query": [
          "select distinct treatment_type_code from treatments group by treatment_type_code order by sum (cost_of_treatment) asc limit 1",
          "select distinct sum (cost_of_treatment) from treatments group by treatment_type_code order by sum (cost_of_treatment) asc limit 1",
          "select sum (cost_of_treatment) from treatments group by treatment_type_code order by sum (cost_of_treatment) asc limit 1",
          "select distinct treatment_type_code from treatments group by treatment_type_code order by sum (cost_of_treatment) desc limit 1",
          "select distinct sum (cost_of_treatment) from treatments group by treatment_type_code order by sum (cost_of_treatment) desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show the dog name and total cost of each dog.",
        "query": [
          "select distinct dog_id, sum (cost_of_treatment) from treatments group by dog_id",
          "select from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id group by t1.name",
          "select sum (cost_of_treatment), name from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by name",
          "select distinct dog_id, sum (cost_of_treatment) from treatments",
          "select distinct t1.name, sum (t2.cost_of_treatment) from dogs as t1 join treatments as t2 group by t1.name",
          "select distinct name, sum (cost_of_treatment) from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id",
          "select distinct count (*), sum (cost_of_treatment) from treatments group by dog_id"
        ]
      },
      {
        "question": "How many of them cost over 700?",
        "query": [
          "select distinct count (*) from treatments where cost_of_treatment > 700",
          "select distinct count (dog_id) from treatments where cost_of_treatment > 700",
          "select distinct count (distinct dog_id) from treatments where cost_of_treatment > 700",
          "select distinct count (*) from treatments group by dog_id having sum (cost_of_treatment) > 700",
          "select distinct dog_id from treatments where cost_of_treatment > 700",
          "select distinct dog_id from treatments group by dog_id having sum (cost_of_treatment) > 700",
          "select distinct dog_id, count (*) from treatments where cost_of_treatment > 700",
          "select distinct count (cost_of_treatment) from treatments where cost_of_treatment > 700",
          "select distinct dog_id, sum (cost_of_treatment) from treatments where cost_of_treatment > 700",
          "select distinct sum (cost_of_treatment) from treatments where cost_of_treatment > 700"
        ]
      },
      {
        "question": "Which owner paid the cost larger than 400, show the owner id and the zip code?",
        "query": [
          "select distinct t1.owner_id, t1.zip_code from owners as t1 join treatments as t2 where t2.cost_of_treatment > 400",
          "select distinct t1.owner_id, t1.zip_code from owners as t1 join treatments as t2 where cost_of_treatment > 400",
          "select distinct cost_of_treatment from treatments where cost_of_treatment > 400",
          "select distinct t1.owner_id, t1.zip_code from owners as t1 join treatments as t2 group by t1.owner_id having sum (cost_of_treatment) > 400",
          "select distinct t1.owner_id, t1.zip_code from owners as t1 join treatments as t2 where t2.cost_of_treatment > 700",
          "select distinct count (*) from treatments where cost_of_treatment > 400",
          "select distinct sum (cost_of_treatment) from treatments where cost_of_treatment > 400",
          "select distinct t1.first_name, t1.last_name, t1.zip_code from owners as t1 join treatments as t2 where t2.cost_of_treatment > 400",
          "select distinct count (*) from owners as t1 join treatments as t2 on t1.owner_id = t2.dog_id where t2.cost_of_treatment > 400",
          "select distinct t1.owner_id, t1.zip_code from owners as t1 join treatments as t2 group by t1.owner_id having sum (cost_of_treatment) > 700"
        ]
      },
      {
        "question": "What about the owner who spent the largest cost?",
        "query": [
          "select distinct t1.owner_id from owners as t1 join treatments as t2 where t2.cost_of_treatment = (select max (cost_of_treatment) from treatments)",
          "select distinct t1.first_name, t1.last_name from owners as t1 join treatments as t2 where t2.cost_of_treatment = (select max (cost_of_treatment) from treatments)",
          "select distinct t1.owner_id, t1.zip_code from owners as t1 join treatments as t2 where t2.cost_of_treatment = (select max (cost_of_treatment) from treatments)",
          "select distinct t1.owner_id from owners as t1 join treatments as t2 where cost_of_treatment = (select max (cost_of_treatment) from treatments)",
          "select distinct t1.owner_id from owners as t1 join treatments as t2 group by t1.owner_id order by sum (cost_of_treatment) desc limit 1",
          "select distinct t1.owner_id from owners as t1 join treatments as t2 where t2.cost_of_treatment = (select min (cost_of_treatment) from treatments)",
          "select from owners as t1 join treatments as t2 where t2.cost_of_treatment = (select max (cost_of_treatment) from treatments)",
          "select distinct t1.owner_id from owners as t1 join treatments as t2 where t2.cost_of_treatment = (select sum (cost_of_treatment) from treatments where cost_of_treatment > 400)",
          "select distinct t1.owner_id from owners as t1 join treatments as t2 where t2.cost_of_treatment = (select max (cost_of_treatment) from treatments where cost_of_treatment > 400)",
          "select distinct t1.owner_id from owners as t1 join treatments as t2 where t2.cost_of_treatment = (select sum (cost_of_treatment) from treatments where cost_of_treatment > 700)"
        ]
      }
    ],
    [
      {
        "question": "List the professional first names and their types of treatments.",
        "query": [
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select t2.first_name, t1.treatment_type_code from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id",
          "select distinct t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select t2.first_name, t1.treatment_type_code from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select t2.first_name, t1.treatment_type_code from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id",
          "select t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id"
        ]
      },
      {
        "question": "Add the counts of them also.",
        "query": [
          "select t1.first_name, t2.treatment_type_code, count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select t1.first_name, t2.treatment_type_code, count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select t1.first_name, t2.treatment_type_code, count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select count (*), t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select distinct t1.first_name, t2.treatment_type_code, count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select count (*), t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select distinct count (t1.first_name), t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select distinct count (*), t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select t1.first_name, count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name",
          "select distinct t1.first_name, t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name"
        ]
      },
      {
        "question": "Among the results, who did only 1 type of treatment? List the professional ids and cell phone numbers of them.",
        "query": [
          "select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select distinct t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name having count (*) = 1",
          "select t1.professional_id, t1.home_phone from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name having count (*) = 1",
          "select t1.professional_id, t1.home_phone from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 1",
          "select distinct t1.first_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name having count (*) = 1",
          "select distinct count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name having count (*) = 1"
        ]
      },
      {
        "question": "What about at least two types of treatments?",
        "query": [
          "select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select distinct t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select distinct count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select distinct t1.professional_id from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select distinct t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name having count (*) >= 2",
          "select distinct t2.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 2",
          "select t1.professional_id from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) >= 2",
          "select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 2",
          "select distinct t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count (*) = 2"
        ]
      }
    ],
    [
      {
        "question": "What is the minimum, maximum and average value of the treatment costs?",
        "query": [
          "select min (cost_of_treatment), max (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select min (cost_of_treatment), max (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select min (cost_of_treatment), max (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select max (cost_of_treatment), min (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select distinct min (cost_of_treatment), max (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select max (cost_of_treatment), min (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select distinct max (cost_of_treatment), min (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select max (cost_of_treatment), min (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select min (cost_of_treatment), max (cost_of_treatment), avg (cost_of_treatment) from treatments",
          "select min (cost_of_treatment), avg (cost_of_treatment), max (cost_of_treatment) from treatments"
        ]
      },
      {
        "question": "Which professionals who did the minimum value of the treatment cost? Provide the first name and last name.",
        "query": [
          "select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment = (select min (cost_of_treatment) from treatments)",
          "select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 where cost_of_treatment = (select min (cost_of_treatment) from treatments)",
          "select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment = (select min (cost_of_treatment) from treatments)",
          "select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 where cost_of_treatment = (select min (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 where cost_of_treatment = (select min (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id order by cost_of_treatment asc limit 1",
          "select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id order by cost_of_treatment asc limit 1"
        ]
      },
      {
        "question": "What about the maximum cost?",
        "query": [
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment = (select max (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment = (select max (cost_of_treatment) from treatments)",
          "select distinct max (cost_of_treatment) from treatments",
          "select max (cost_of_treatment) from treatments",
          "select max (cost_of_treatment) from treatments",
          "select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 where cost_of_treatment = (select max (cost_of_treatment) from treatments)",
          "select distinct count (*) from professionals as t1 join treatments as t2 where t2.cost_of_treatment = (select max (cost_of_treatment) from treatments)"
        ]
      },
      {
        "question": "How about below the average of the cost?",
        "query": [
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment < (select avg (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment < (select avg (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment < (select avg (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment > (select avg (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment > (select avg (cost_of_treatment) from treatments)",
          "select distinct count (*) from professionals as t1 join treatments as t2 where t2.cost_of_treatment < (select avg (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment = (select avg (cost_of_treatment) from treatments)",
          "select first_name, last_name from professionals as t1 join treatments as t2 where t2.cost_of_treatment = (select avg (cost_of_treatment) from treatments)"
        ]
      }
    ],
    [
      {
        "question": "How many dogs for each breed code?",
        "query": [
          "select breed_code, count (*) from dogs group by breed_code",
          "select breed_code, count (*) from dogs group by breed_code",
          "select distinct breed_code, count (*) from dogs group by breed_code",
          "select count (*) from dogs group by breed_code",
          "select breed_code, count (*) from dogs group by breed_code",
          "select count (*) from dogs group by breed_code",
          "select count (*), breed_code from dogs group by breed_code",
          "select count (*), breed_code from dogs group by breed_code",
          "select distinct breed_code from dogs group by breed_code",
          "select distinct breed_code from dogs"
        ]
      },
      {
        "question": "Which one is the most popular one?",
        "query": [
          "select breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select distinct count (*) from dogs group by breed_code order by count (*) desc limit 1",
          "select distinct breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) desc limit 1",
          "select * from dogs group by breed_code order by count (*) desc limit 1",
          "select distinct (breed_code) from dogs group by breed_code order by count (*) desc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select breed_code from dogs group by breed_code desc limit 1"
        ]
      },
      {
        "question": "What about the least popular one?",
        "query": [
          "select breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select distinct breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select distinct count (*) from dogs group by breed_code order by count (*) asc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc limit 1",
          "select distinct (breed_code) from dogs group by breed_code order by count (*) asc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc asc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc asc limit 1",
          "select breed_code from dogs group by breed_code order by count (*) asc limit1"
        ]
      },
      {
        "question": "So which dogs are having the breed code? And the treatment dates?",
        "query": [
          "select t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select t2.name, t1.date_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id where t2.breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select * from dogs where breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select distinct t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select t2.name, t1.date_of_treatment from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id where t2.breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select * from dogs where breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select * from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.breed_code = (select breed_code from dogs group by breed_code order by count (*) asc limit 1)",
          "select t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.breed_code = (select distinct breed_code from dogs group by breed_code order by count (*) asc limit 1)"
        ]
      }
    ],
    [
      {
        "question": "Show the name of dogs whose owners are from the city 'Lake Tia'.",
        "query": [
          "select name from dogs where owner_id in (select owner_id from owners where city = \"Lake Tia\")",
          "select name from dogs where owner_id in (select owner_id from owners where city = \"Lake Tia\")",
          "select name from dogs where owner_id in (select * from owners where city = \"Lake Tia\")",
          "select name from dogs where owner_id in (select * from owners where city = \"Lake Tia\")",
          "select name from dogs where owner_id in (select owner_id from owners where city = \"Lake Tia\")",
          "select t1.name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id where city = \"Lake Tia\"",
          "select distinct t1.name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id where city = \"Lake Tia\""
        ]
      },
      {
        "question": "Add the owner's first names also.",
        "query": [
          "select first_name, last_name from owners where city = \"Lake Tia\"",
          "select t1.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.city = \"Lake Tia\"",
          "select t2.first_name, t1.name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id where t2.city = \"Lake Tia\"",
          "select first_name, last_name from owners where city = \"Lake Tia\"",
          "select first_name, last_name from owners where city = \"Lake Tia\"",
          "select first_name from owners where city = \"Lake Tia\"",
          "select t1.first_name, t2.name from owners as t1 join dogs as t2 where t1.city = \"Lake Tia\""
        ]
      },
      {
        "question": "What about when the owner is from the state of 'Virginia'?",
        "query": [
          "select first_name, last_name from owners where state = \"Virginia\"",
          "select first_name, last_name from owners where state = \"Virginia\"",
          "select first_name, last_name from owners where state = \"Virginia\"",
          "select distinct first_name, last_name from owners where state = \"Virginia\"",
          "select first_name, last_name from owners where state = \"VA\"",
          "select first_name, last_name from owners where state = \"VA\"",
          "select distinct count (*) from owners where state = \"Virginia\"",
          "select first_name, last_name from owners where state = \"Virginia\""
        ]
      }
    ],
    [
      {
        "question": "Which one is the oldest dog? List the information of it.",
        "query": [
          "select * from dogs order by age desc limit 1",
          "select * from dogs order by age desc limit 1",
          "select * from dogs order by age asc limit 1",
          "select * from dogs order by age asc limit 1",
          "select * from dogs order by age desc limit 1",
          "select distinct * from dogs order by age desc limit 1",
          "select * from dogs order by age asc limit 1",
          "select distinct max (age) from dogs",
          "select distinct name from dogs order by age desc limit 1",
          "select * from dogs order by age limit 1"
        ]
      },
      {
        "question": "What are the last names of the oldest dogs?",
        "query": [
          "select distinct name from dogs order by age desc limit 1",
          "select name from dogs order by age desc limit 1",
          "select name from dogs order by age desc limit 1"
        ]
      },
      {
        "question": "What about the owner last name of the youngest dog?",
        "query": [
          "select distinct t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id order by age desc limit 1",
          "select distinct t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id order by age desc limit 1",
          "select distinct t2.last_name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id order by age desc limit 1",
          "select distinct t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id order by age asc limit 1",
          "select distinct t1.last_name from owners as t1 join dogs as t2 where t2.age = (select min (age) from dogs)",
          "select distinct t1.last_name from owners as t1 join dogs as t2 order by t2.age desc limit 1",
          "select distinct name from dogs order by age desc limit 1",
          "select distinct t1.last_name from owners as t1 join dogs as t2 where t2.age = (select min (age) from dogs)",
          "select distinct t1.last_name from owners as t1 join dogs as t2 where t2.age = 1",
          "select distinct t2.last_name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id order by age desc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show the cities and states of the professionals.",
        "query": [
          "select city, state from professionals",
          "select city, state from professionals",
          "select distinct city, state from professionals",
          "select city, state from professionals",
          "select distinct state, city from professionals",
          "select distinct state from professionals",
          "select street, state from professionals",
          "select distinct city from professionals",
          "select state, city from professionals",
          "select street, city from professionals"
        ]
      },
      {
        "question": "How many of them are from 'Hawaii'?",
        "query": [
          "select count (*) from professionals where city = \"Hawaii\"",
          "select count (*) from professionals where state = \"Hawaii\"",
          "select count (*) from professionals where city = \"Hawaii\"",
          "select count (*) from professionals where state = \"Hawaii\"",
          "select distinct count (*) from professionals where city = \"Hawaii\"",
          "select count (*) from professionals where city = \"Hawaii\"",
          "select distinct count (*) from professionals where state = \"Hawaii\"",
          "select count (*) from professionals where state = \"Hawaii\"",
          "select count (*) from professionals where state = \"HI\"",
          "select count (city) from professionals where city = \"Hawaii\""
        ]
      },
      {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "query": [
          "select email_address from professionals where state = \"Hawaii\" or state = \"Wisconsin\"",
          "select email_address from professionals where state = \"Hawaii\" or state = \"Wisconsin\"",
          "select distinct email_address from professionals where state = \"Hawaii\" or state = \"Wisconsin\"",
          "select email_address from professionals where state = \"Hawaii\" or state = \"Wisconsin\"",
          "select email_address from professionals where state = \"Wisconsin\" or state = \"Hawaii\"",
          "select email_address from professionals where state = \"Washington\" or state = \"Wisconsin\"",
          "select email_address from professionals where state = \"Iowa\" or state = \"Wisconsin\"",
          "select email_address from professionals where state = \"Hawaii\" or state = \"WI\"",
          "select email_address from professionals where state = \"Hawaii\" or state = \"WI\"",
          "select email_address from professionals where state = \"Hawaii\" or state = \"WISTATE\""
        ]
      }
    ],
    [
      {
        "question": "Show the states of the professionals.",
        "query": [
          "select state from professionals",
          "select state from professionals",
          "select distinct state from professionals",
          "select state from professionals",
          "select distinct state from professionals"
        ]
      },
      {
        "question": "How many of them are from 'Wisconsin'?",
        "query": [
          "select count (*) from professionals where state = \"Wisconsin\"",
          "select count (*) from professionals where state = \"Wisconsin\"",
          "select distinct count (*) from professionals where state = \"Wisconsin\"",
          "select count (*) from professionals where state = \"Wisconsin\"",
          "select count (state) from professionals where state = \"Wisconsin\"",
          "select distinct count (state) from professionals where state = \"Wisconsin\"",
          "select count (*) from professionals where state = \"WI\"",
          "select count (state) from professionals where state = \"Wisconsin\"",
          "select count (*) from professionals where state = \"WI\"",
          "select count (distinct state) from professionals where state = \"Wisconsin\""
        ]
      },
      {
        "question": "List the role code ,  street ,  city ,  state from the above results.",
        "query": [
          "select role_code, street, city, state from professionals where state = \"Wisconsin\"",
          "select role_code, street, city, state from professionals where state = \"Wisconsin\"",
          "select role_code, street, city, state from professionals where state = \"Wisconsin\"",
          "select distinct role_code, street, city, state from professionals where state = \"Wisconsin\"",
          "select role_code from professionals where state = \"Wisconsin\"",
          "select role_code from professionals where state = \"Wisconsin\"",
          "select distinct state from professionals where state = \"Wisconsin\"",
          "select role_code, street, city from professionals where state = \"Wisconsin\"",
          "select role_code, street, city from professionals where state = \"Wisconsin\""
        ]
      },
      {
        "question": "What about those professionals who live in a city containing the substring 'West'?",
        "query": [
          "select role_code, street, city, state from professionals where city like \"%West%\"",
          "select role_code from professionals where city like \"%West%\"",
          "select distinct count (*) from professionals where city like \"%West%\"",
          "select role_code from professionals where city like \"%West%\"",
          "select * from professionals where city like \"%West%\"",
          "select distinct * from professionals where city like \"%West%\"",
          "select distinct role_code, street, city, state from professionals where city like \"%West%\"",
          "select distinct role_code from professionals where city like \"%West%\"",
          "select role_code, street, city from professionals where city like \"%West%\"",
          "select distinct role_code, street, city from professionals where city like \"%West%\""
        ]
      }
    ],
    [
      {
        "question": "Show the states of the owners.",
        "query": [
          "select state from owners",
          "select state from owners",
          "select distinct state from owners",
          "select state from owners"
        ]
      },
      {
        "question": "How many of them are from 'Vermont'?",
        "query": [
          "select count (*) from owners where state = \"Vermont\"",
          "select count (*) from owners where state = \"Vermont\"",
          "select count (*) from owners where state = \"VT\"",
          "select distinct count (*) from owners where state = \"Vermont\"",
          "select count (state) from owners where state = \"Vermont\"",
          "select count (*) from owners where state = \"Vermont\"",
          "select count (*) from owners where state = \"Vermont\"",
          "select count (*) from owners where state = \"Vermouth\"",
          "select distinct count (state) from owners where state = \"Vermont\"",
          "select count (*) from owners where state = \"VT\""
        ]
      },
      {
        "question": "List the first name, last name and email of the owners who lives in the states that has the substring 'North'.",
        "query": [
          "select first_name, last_name, email_address from owners where state like \"%North%\"",
          "select first_name, last_name, email_address from owners where state like \"%North%\"",
          "select first_name, last_name, email_address from owners where state like \"%North%\"",
          "select distinct first_name, last_name, email_address from owners where state like \"%North%\"",
          "select first_name, last_name, email_address from owners where state like \"% North%\"",
          "select first_name, last_name,email_address from owners where state like \"%North%\"",
          "select first_name, last_name, email_address from owners where state like \"%north%\"",
          "select first_name, last_name, email_address from owners where state like \"% North%\""
        ]
      }
    ],
    [
      {
        "question": "Order the dog ages in descending order.",
        "query": [
          "select age from dogs order by age desc",
          "select age from dogs order by age desc",
          "select * from dogs order by age desc",
          "select * from dogs order by age desc",
          "select age from dogs order by age desc",
          "select distinct age from dogs order by age desc",
          "select name from dogs order by age desc",
          "select name from dogs order by age desc",
          "select * from dogs order by age desc",
          "select distinct name from dogs order by age desc"
        ]
      },
      {
        "question": "How many of them are below 4?",
        "query": [
          "select count (*) from dogs where age < 4",
          "select count (*) from dogs where age < 4",
          "select distinct count (*) from dogs where age < 4",
          "select count (*) from dogs where age < 4",
          "select count (age) from dogs where age < 4"
        ]
      },
      {
        "question": "What about the ones that are below the average?",
        "query": [
          "select count (*) from dogs where age < (select avg (age) from dogs)",
          "select distinct count (*) from dogs where age < (select avg (age) from dogs)",
          "select distinct count (*) from dogs where age < 4",
          "select count (*) from dogs where age < 4",
          "select count (*) from dogs where age < 4",
          "select distinct sum (age) from dogs where age < 4",
          "select distinct (*) from dogs where age < (select avg (age) from dogs)",
          "select count (*) from dogs where age < (select min (age) from dogs)"
        ]
      }
    ],
    [
      {
        "question": "Show the treatment details.",
        "query": [
          "select * from treatments",
          "select * from treatments",
          "select * from treatments",
          "select treatment_type_description from treatment_types",
          "select treatment_type_code, treatment_type_description from treatment_types",
          "select distinct treatment_type_code from treatments",
          "select treatment_type_description from treatment_types",
          "select treatment_type_code, cost_of_treatment from treatments",
          "select * from treatment_types",
          "select treatment_type_code, date_of_treatment from treatments"
        ]
      },
      {
        "question": "Order the cost in ascending order.",
        "query": [
          "select * from treatments order by cost_of_treatment asc",
          "select * from treatments order by cost_of_treatment",
          "select * from treatments order by cost_of_treatment",
          "select * from treatments order by cost_of_treatment desc",
          "select * from treatments order by cost_of_treatment",
          "select * from treatments order by cost_of_treatment ASC"
        ]
      },
      {
        "question": "What about in descending order?",
        "query": [
          "select * from treatments order by cost_of_treatment desc",
          "select distinct * from treatments order by cost_of_treatment desc",
          "select distinct from treatments order by cost_of_treatment desc",
          "select * from treatments order by cost_of_treatment asc",
          "select * from treatments order by Cost_of_treatment desc",
          "select * from treatments order by cost_of_treatment desc",
          "select * from treatments order by cost_of_treatment des"
        ]
      },
      {
        "question": "Which one is the most recent cost?",
        "query": [
          "select * from treatments order by date_of_treatment desc limit 1",
          "select * from treatments order by date_of_treatment desc limit 1",
          "select cost_of_treatment from treatments order by date_of_treatment desc limit 1",
          "select * from treatments order by date_of_treatment asc limit 1",
          "select * from treatments order by date_of_treatment desc limit 1",
          "select cost_of_treatment from treatments order by date_of_treatment desc limit 1",
          "select distinct count (*) from treatments order by date_of_treatment desc limit 1",
          "select * from treatments order by date_of_treatment asc limit 1",
          "select count (*) from treatments order by date_of_treatment desc limit 1",
          "select cost_of_treatment from treatments order by date_of_treatment asc limit 1"
        ]
      }
    ],
    [
      {
        "question": "Show all the owner information.",
        "query": [
          "select * from owners",
          "select * from owners",
          "select distinct * from owners",
          "select * from owners"
        ]
      },
      {
        "question": "What about the dogs?",
        "query": [
          "select * from dogs",
          "select * from dogs",
          "select * from dogs",
          "select name from dogs"
        ]
      },
      {
        "question": "Among those, how many of them have been sent to receive treatment?",
        "query": [
          "select count (*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select distinct count (*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select count (*) from dogs where date_arrived > date_departed",
          "select count (*) from dogs where date_arrived > date_departed",
          "select count (distinct dog_id) from treatments",
          "select count (*) from dogs where date_arrived > date_adopted"
        ]
      },
      {
        "question": "What about those who did not?",
        "query": [
          "select count (*) from dogs where dog_id not in (select dog_id from treatments)",
          "select count (*) from dogs where dog_id not in (select dog_id from treatments)",
          "select count (*) from dogs where dog_id not in (select dog_id from treatments)",
          "select count (*) from dogs except select count (*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select count (*) from dogs except select count (*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select distinct count (*) from dogs where dog_id not in (select dog_id from treatments)",
          "select distinct count (*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id",
          "select distinct count (*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.abandoned_yn = 0",
          "select * from dogs where dog_id not in (select dog_id from treatments)",
          "select distinct count (*) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.abandoned_yn = \"Y\""
        ]
      }
    ],
    [
      {
        "question": "Show all the owner information.",
        "query": [
          "select * from owners",
          "select * from owners",
          "select distinct * from owners",
          "select * from owners"
        ]
      },
      {
        "question": "How many of them come from the state of 'Arizona'?",
        "query": [
          "select count (*) from owners where state = \"Arizona\"",
          "select count (*) from owners where state = \"Arizona\"",
          "select count (*) from owners where state = \"AZ\"",
          "select distinct count (*) from owners where state = \"Arizona\"",
          "select count (*) from owners where state = \"Arizona\"",
          "select count (*) from owners where state = \"AZ\"",
          "select distinct count (*) from owners where state = \"AZ\"",
          "select count (*) from owners where state = \"AZ\""
        ]
      },
      {
        "question": "What about those who do not have any dogs temporarily?",
        "query": [
          "select count (*) from owners where state!= \"Arizona\"",
          "select count (*) from owners where state!= \"Arizona\"",
          "select count (*) from owners where state = \"Arizona\" except select count (*) from dogs",
          "select count (*) from owners where state!= \"Arizona\"",
          "select distinct count (*) from owners where state!= \"Arizona\"",
          "select count (*) from owners where state!= \"AZ\"",
          "select count (*) from owners where state = \"AZ\" except select count (*) from dogs",
          "select distinct count (*) from owners where state = \"Arizona\" except select count (*) from dogs"
        ]
      }
    ],
    [
      {
        "question": "How many professionals are there?",
        "query": [
          "select count (*) from professionals",
          "select count (*) from professionals",
          "select distinct count (*) from professionals",
          "select count (*) from professionals",
          "select distinct professional_id from professionals",
          "select distinct professional_id from treatments"
        ]
      },
      {
        "question": "How many of them come from 'West Heidi?'",
        "query": [
          "select count (*) from professionals where first_name = \"West Heidi\"",
          "select count (*) from professionals where first_name = \"West Heidi\"",
          "select count (*) from professionals where first_name = \"West\" and last_name = \"Heidi\"",
          "select count (*) from professionals where first_name = \"West\" and last_name = \"Heidi\"",
          "select count (*) from professionals where first_name = \"West Helena\"",
          "select count (*) from professionals where first_name = \"West Helena\"",
          "select count (*) from professionals where first_name = \"West\" and last_name = \"Helena\"",
          "select count (*) from professionals where first_name = \"West\" and last_name = \"Helena\"",
          "select count (*) from professionals where first_name = \"West\" and last_name = \"Helen\"",
          "select count (*) from professionals where first_name = \"West\" and last_name = \"Howard\""
        ]
      },
      {
        "question": "What about those who did not operate any treatment on dogs?",
        "query": [
          "select count (*) from professionals where first_name not in (select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id)",
          "select count (*) from professionals where first_name not in (select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id)",
          "select count (*) from professionals except select count (*) from treatments as t1 join dogs as t2 on t1.professional_id = t2.dog_id",
          "select count (*) from professionals except select count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id join dogs as t3 on t3.dog_id = t2.dog_id",
          "select count (*) from professionals where first_name not in (select t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.first_name)",
          "select count (*) from professionals except select count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id",
          "select count (*) from professionals except select count (*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id"
        ]
      }
    ]
  ]
}